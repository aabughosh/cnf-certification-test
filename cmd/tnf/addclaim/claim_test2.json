{
    "claim": {
      "configurations": {
        "AbnormalEvents": [
          {
            "count": 1037,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T12:48:47Z",
            "involvedObject": {
              "apiVersion": "v1",
              "fieldPath": "spec.containers{test2}",
              "kind": "Pod",
              "name": "secontextpod",
              "namespace": "tnf",
              "resourceVersion": "57683904",
              "uid": "f9792fdb-bec9-4505-bbe9-46d8df971a74"
            },
            "lastTimestamp": "2022-11-09T16:33:52Z",
            "message": "Back-off restarting failed container",
            "metadata": {
              "creationTimestamp": "2022-11-09T12:48:47Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {},
                      "f:host": {}
                    },
                    "f:type": {}
                  },
                  "manager": "kubelet",
                  "operation": "Update",
                  "time": "2022-11-09T12:48:47Z"
                }
              ],
              "name": "secontextpod.1725eb759c1aa219",
              "namespace": "tnf",
              "resourceVersion": "57786044",
              "uid": "5b553831-9fcf-49de-8fa0-083c37ddd0ea"
            },
            "reason": "BackOff",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "kubelet",
              "host": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com"
            },
            "type": "Warning"
          },
          {
            "count": 2,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T16:37:18Z",
            "involvedObject": {
              "apiVersion": "v1",
              "kind": "Pod",
              "name": "secontextpod",
              "namespace": "tnf",
              "resourceVersion": "57787632",
              "uid": "b8fdeaa2-314f-4258-a9db-b18e23f51a9c"
            },
            "lastTimestamp": "2022-11-09T16:37:18Z",
            "message": "failed to ensurePod tnf/secontextpod since it is not yet scheduled",
            "metadata": {
              "creationTimestamp": "2022-11-09T16:37:18Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {}
                    },
                    "f:type": {}
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-09T16:37:18Z"
                }
              ],
              "name": "secontextpod.1725f7edfc22ae88",
              "namespace": "tnf",
              "resourceVersion": "57787636",
              "uid": "aa236b97-a7cd-4ebe-9c20-045ba98f894e"
            },
            "reason": "ErrorAddingLogicalPort",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "controlplane"
            },
            "type": "Warning"
          },
          {
            "count": 1,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T16:37:18Z",
            "involvedObject": {
              "apiVersion": "v1",
              "kind": "Pod",
              "name": "secontextpod",
              "namespace": "tnf",
              "resourceVersion": "57787632",
              "uid": "b8fdeaa2-314f-4258-a9db-b18e23f51a9c"
            },
            "lastTimestamp": "2022-11-09T16:37:18Z",
            "message": "0/3 nodes are available: 3 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate.",
            "metadata": {
              "creationTimestamp": "2022-11-09T16:37:18Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {}
                    },
                    "f:type": {}
                  },
                  "manager": "kube-scheduler",
                  "operation": "Update",
                  "time": "2022-11-09T16:37:18Z"
                }
              ],
              "name": "secontextpod.1725f7edfc2498de",
              "namespace": "tnf",
              "resourceVersion": "57787633",
              "uid": "c41a55f8-6df1-4935-b39d-a3e64e3d1058"
            },
            "reason": "FailedScheduling",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "default-scheduler"
            },
            "type": "Warning"
          },
          {
            "count": 8,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T16:38:16Z",
            "involvedObject": {
              "apiVersion": "v1",
              "fieldPath": "spec.containers{test2}",
              "kind": "Pod",
              "name": "secontextpod",
              "namespace": "tnf",
              "resourceVersion": "57788001",
              "uid": "b8fdeaa2-314f-4258-a9db-b18e23f51a9c"
            },
            "lastTimestamp": "2022-11-09T16:39:32Z",
            "message": "Back-off restarting failed container",
            "metadata": {
              "creationTimestamp": "2022-11-09T16:38:16Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {},
                      "f:host": {}
                    },
                    "f:type": {}
                  },
                  "manager": "kubelet",
                  "operation": "Update",
                  "time": "2022-11-09T16:38:16Z"
                }
              ],
              "name": "secontextpod.1725f7fb80df516a",
              "namespace": "tnf",
              "resourceVersion": "57788837",
              "uid": "3f0fbb2b-9bd6-4c79-9978-f5040e1c0bf0"
            },
            "reason": "BackOff",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "kubelet",
              "host": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com"
            },
            "type": "Warning"
          },
          {
            "count": 2,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T16:40:34Z",
            "involvedObject": {
              "apiVersion": "v1",
              "kind": "Pod",
              "name": "secontextpod",
              "namespace": "tnf",
              "resourceVersion": "57789261",
              "uid": "fd5c20d8-5359-4d8d-afff-1cda6a567f6d"
            },
            "lastTimestamp": "2022-11-09T16:40:34Z",
            "message": "failed to ensurePod tnf/secontextpod since it is not yet scheduled",
            "metadata": {
              "creationTimestamp": "2022-11-09T16:40:34Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {}
                    },
                    "f:type": {}
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-09T16:40:34Z"
                }
              ],
              "name": "secontextpod.1725f81ba8bdf07d",
              "namespace": "tnf",
              "resourceVersion": "57789265",
              "uid": "5d8e5d83-ef99-47bd-92b2-f1e81fb90658"
            },
            "reason": "ErrorAddingLogicalPort",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "controlplane"
            },
            "type": "Warning"
          },
          {
            "count": 1,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T16:40:34Z",
            "involvedObject": {
              "apiVersion": "v1",
              "kind": "Pod",
              "name": "secontextpod",
              "namespace": "tnf",
              "resourceVersion": "57789261",
              "uid": "fd5c20d8-5359-4d8d-afff-1cda6a567f6d"
            },
            "lastTimestamp": "2022-11-09T16:40:34Z",
            "message": "0/3 nodes are available: 3 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate.",
            "metadata": {
              "creationTimestamp": "2022-11-09T16:40:34Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {}
                    },
                    "f:type": {}
                  },
                  "manager": "kube-scheduler",
                  "operation": "Update",
                  "time": "2022-11-09T16:40:34Z"
                }
              ],
              "name": "secontextpod.1725f81ba8c3717f",
              "namespace": "tnf",
              "resourceVersion": "57789263",
              "uid": "9d10ce09-8bab-4c0f-8c73-007bb8325c14"
            },
            "reason": "FailedScheduling",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "default-scheduler"
            },
            "type": "Warning"
          },
          {
            "count": 5,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T16:40:43Z",
            "involvedObject": {
              "apiVersion": "v1",
              "fieldPath": "spec.containers{test2}",
              "kind": "Pod",
              "name": "secontextpod",
              "namespace": "tnf",
              "resourceVersion": "57789290",
              "uid": "fd5c20d8-5359-4d8d-afff-1cda6a567f6d"
            },
            "lastTimestamp": "2022-11-09T16:41:31Z",
            "message": "Back-off restarting failed container",
            "metadata": {
              "creationTimestamp": "2022-11-09T16:40:43Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {},
                      "f:host": {}
                    },
                    "f:type": {}
                  },
                  "manager": "kubelet",
                  "operation": "Update",
                  "time": "2022-11-09T16:40:43Z"
                }
              ],
              "name": "secontextpod.1725f81dc366c194",
              "namespace": "tnf",
              "resourceVersion": "57789732",
              "uid": "cf5bf4b6-a9fc-4abb-a946-3337f407e57c"
            },
            "reason": "BackOff",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "kubelet",
              "host": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com"
            },
            "type": "Warning"
          },
          {
            "count": 2,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T16:44:17Z",
            "involvedObject": {
              "apiVersion": "v1",
              "kind": "Pod",
              "name": "secontextpod",
              "namespace": "tnf",
              "resourceVersion": "57791066",
              "uid": "9d022c2a-2acd-41a0-adc6-69a5c2c8d904"
            },
            "lastTimestamp": "2022-11-09T16:44:17Z",
            "message": "failed to ensurePod tnf/secontextpod since it is not yet scheduled",
            "metadata": {
              "creationTimestamp": "2022-11-09T16:44:17Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {}
                    },
                    "f:type": {}
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-09T16:44:17Z"
                }
              ],
              "name": "secontextpod.1725f84f7edfe16a",
              "namespace": "tnf",
              "resourceVersion": "57791072",
              "uid": "1ada62ba-a884-4088-b25e-c9a0e342d00a"
            },
            "reason": "ErrorAddingLogicalPort",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "controlplane"
            },
            "type": "Warning"
          },
          {
            "count": 1,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T16:44:17Z",
            "involvedObject": {
              "apiVersion": "v1",
              "kind": "Pod",
              "name": "secontextpod",
              "namespace": "tnf",
              "resourceVersion": "57791066",
              "uid": "9d022c2a-2acd-41a0-adc6-69a5c2c8d904"
            },
            "lastTimestamp": "2022-11-09T16:44:17Z",
            "message": "0/3 nodes are available: 3 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate.",
            "metadata": {
              "creationTimestamp": "2022-11-09T16:44:17Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {}
                    },
                    "f:type": {}
                  },
                  "manager": "kube-scheduler",
                  "operation": "Update",
                  "time": "2022-11-09T16:44:17Z"
                }
              ],
              "name": "secontextpod.1725f84f7ee2c2d7",
              "namespace": "tnf",
              "resourceVersion": "57791069",
              "uid": "4e9ef87a-d83a-43c7-a318-82a998d08623"
            },
            "reason": "FailedScheduling",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "default-scheduler"
            },
            "type": "Warning"
          },
          {
            "count": 208,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T16:44:37Z",
            "involvedObject": {
              "apiVersion": "v1",
              "fieldPath": "spec.containers{test2}",
              "kind": "Pod",
              "name": "secontextpod",
              "namespace": "tnf",
              "resourceVersion": "57791149",
              "uid": "9d022c2a-2acd-41a0-adc6-69a5c2c8d904"
            },
            "lastTimestamp": "2022-11-09T17:29:41Z",
            "message": "Back-off restarting failed container",
            "metadata": {
              "creationTimestamp": "2022-11-09T16:44:37Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {},
                      "f:host": {}
                    },
                    "f:type": {}
                  },
                  "manager": "kubelet",
                  "operation": "Update",
                  "time": "2022-11-09T16:44:37Z"
                }
              ],
              "name": "secontextpod.1725f854234e00df",
              "namespace": "tnf",
              "resourceVersion": "57812392",
              "uid": "133398ae-a9f0-4712-9fe0-007b0d4ab63c"
            },
            "reason": "BackOff",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "kubelet",
              "host": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com"
            },
            "type": "Warning"
          },
          {
            "count": 1,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T17:37:32Z",
            "involvedObject": {
              "apiVersion": "v1",
              "kind": "Pod",
              "name": "secontextpodcat1uid0",
              "namespace": "tnf",
              "resourceVersion": "57816460",
              "uid": "4dbae679-02ae-4bb6-b69a-1327945c184e"
            },
            "lastTimestamp": "2022-11-09T17:37:32Z",
            "message": "failed to ensurePod tnf/secontextpodcat1uid0 since it is not yet scheduled",
            "metadata": {
              "creationTimestamp": "2022-11-09T17:37:32Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {}
                    },
                    "f:type": {}
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-09T17:37:32Z"
                }
              ],
              "name": "secontextpodcat1uid0.1725fb3778eaa577",
              "namespace": "tnf",
              "resourceVersion": "57816462",
              "uid": "3123d75c-c773-4cab-85d8-a37f9080755d"
            },
            "reason": "ErrorAddingLogicalPort",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "controlplane"
            },
            "type": "Warning"
          },
          {
            "count": 1,
            "eventTime": null,
            "firstTimestamp": "2022-11-09T17:29:50Z",
            "involvedObject": {
              "apiVersion": "v1",
              "kind": "Pod",
              "name": "secontextpodcat3",
              "namespace": "tnf",
              "resourceVersion": "57812447",
              "uid": "51855f84-0e99-4e0b-887b-7b34467fa5f1"
            },
            "lastTimestamp": "2022-11-09T17:29:50Z",
            "message": "failed to ensurePod tnf/secontextpodcat3 since it is not yet scheduled",
            "metadata": {
              "creationTimestamp": "2022-11-09T17:29:50Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {}
                    },
                    "f:type": {}
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-09T17:29:50Z"
                }
              ],
              "name": "secontextpodcat3.1725facbf665ff4c",
              "namespace": "tnf",
              "resourceVersion": "57812448",
              "uid": "57ba92e7-9e17-4cf0-8f92-d7bb2d61d02c"
            },
            "reason": "ErrorAddingLogicalPort",
            "reportingComponent": "",
            "reportingInstance": "",
            "source": {
              "component": "controlplane"
            },
            "type": "Warning"
          }
        ],
        "AllPods": [
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "secontextpodcat1uid0",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://57277cb314067074d19ef042d655fa7b49da4ffb5c52e45c82ebfcf796683391",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T17:37:35Z"
                    }
                  }
                },
                "UID": "57277cb314067074d19ef042d655fa7b49da4ffb5c52e45c82ebfcf796683391",
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "Always",
                "name": "test",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETUID",
                      "SETGID"
                    ]
                  },
                  "privileged": false,
                  "readOnlyRootFilesystem": false,
                  "runAsNonRoot": true,
                  "seLinuxOptions": {
                    "level": "s0:c30,c15"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.129.0.73/23\"],\"mac_address\":\"0a:58:0a:81:00:49\",\"gateway_ips\":[\"10.129.0.1\"],\"ip_address\":\"10.129.0.73/23\",\"gateway_ip\":\"10.129.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.73\"\n    ],\n    \"mac\": \"0a:58:0a:81:00:49\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.73\"\n    ],\n    \"mac\": \"0a:58:0a:81:00:49\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"creationTimestamp\":null,\"labels\":{\"app\":\"test\",\"run\":\"secontextpodcat1uid0\",\"test-network-function.com/container\":\"target\",\"test-network-function.com/generic\":\"target\"},\"name\":\"secontextpodcat1uid0\",\"namespace\":\"tnf\"},\"spec\":{\"automountServiceAccountToken\":false,\"containers\":[{\"image\":\"quay.io/testnetworkfunction/cnf-test-partner:latest\",\"name\":\"test\",\"resources\":{},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"KILL\",\"MKNOD\",\"SETUID\",\"SETGID\"]},\"privileged\":false,\"readOnlyRootFilesystem\":false,\"runAsNonRoot\":true,\"seLinuxOptions\":{\"level\":\"s0:c30,c15\"}}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"securityContext\":{\"fsGroup\":1000900000,\"runAsGroup\":1000900000,\"runAsUser\":1000900000}}}\n",
                "openshift.io/scc": "privileged"
              },
              "creationTimestamp": "2022-11-09T17:37:32Z",
              "labels": {
                "app": "test",
                "run": "secontextpodcat1uid0",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:run": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      }
                    },
                    "f:spec": {
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:name": {},
                          "f:resources": {},
                          "f:securityContext": {
                            ".": {},
                            "f:allowPrivilegeEscalation": {},
                            "f:capabilities": {
                              ".": {},
                              "f:drop": {}
                            },
                            "f:privileged": {},
                            "f:readOnlyRootFilesystem": {},
                            "f:runAsNonRoot": {},
                            "f:seLinuxOptions": {
                              ".": {},
                              "f:level": {}
                            }
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {
                        ".": {},
                        "f:fsGroup": {},
                        "f:runAsGroup": {},
                        "f:runAsUser": {}
                      },
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-11-09T17:37:32Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-09T17:37:32Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T17:37:34Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.129.0.73\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T17:37:35Z"
                }
              ],
              "name": "secontextpodcat1uid0",
              "namespace": "tnf",
              "resourceVersion": "57816497",
              "uid": "4dbae679-02ae-4bb6-b69a-1327945c184e"
            },
            "spec": {
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "Always",
                  "name": "test",
                  "resources": {},
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETUID",
                        "SETGID"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": false,
                    "runAsNonRoot": true,
                    "seLinuxOptions": {
                      "level": "s0:c30,c15"
                    }
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000900000,
                "runAsGroup": 1000900000,
                "runAsUser": 1000900000
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:37:32Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:37:35Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:37:35Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:37:32Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://57277cb314067074d19ef042d655fa7b49da4ffb5c52e45c82ebfcf796683391",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T17:37:35Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.5",
              "phase": "Running",
              "podIP": "10.129.0.73",
              "podIPs": [
                {
                  "ip": "10.129.0.73"
                }
              ],
              "qosClass": "BestEffort",
              "startTime": "2022-11-09T17:37:32Z"
            }
          },
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "secontextpodcat3",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://dac1a0f191dd328b412d2ed34bb1be2e98ade7ec6588f2e0afb2b0b1e8edf782",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T17:29:53Z"
                    }
                  }
                },
                "UID": "dac1a0f191dd328b412d2ed34bb1be2e98ade7ec6588f2e0afb2b0b1e8edf782",
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "Always",
                "name": "test",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "add": [
                      "NET_ADMIN",
                      "NET_RAW",
                      "IPC_LOCK"
                    ],
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETUID",
                      "SETGID"
                    ]
                  },
                  "privileged": false,
                  "readOnlyRootFilesystem": false,
                  "seLinuxOptions": {
                    "level": "s0:c30,c15"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.129.0.71/23\"],\"mac_address\":\"0a:58:0a:81:00:47\",\"gateway_ips\":[\"10.129.0.1\"],\"ip_address\":\"10.129.0.71/23\",\"gateway_ip\":\"10.129.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.71\"\n    ],\n    \"mac\": \"0a:58:0a:81:00:47\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.71\"\n    ],\n    \"mac\": \"0a:58:0a:81:00:47\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"creationTimestamp\":null,\"labels\":{\"app\":\"test\",\"run\":\"secontextpodcat3\",\"test-network-function.com/container\":\"target\",\"test-network-function.com/generic\":\"target\"},\"name\":\"secontextpodcat3\",\"namespace\":\"tnf\"},\"spec\":{\"automountServiceAccountToken\":false,\"containers\":[{\"image\":\"quay.io/testnetworkfunction/cnf-test-partner:latest\",\"name\":\"test\",\"resources\":{},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\",\"IPC_LOCK\"],\"drop\":[\"KILL\",\"MKNOD\",\"SETUID\",\"SETGID\"]},\"privileged\":false,\"readOnlyRootFilesystem\":false,\"seLinuxOptions\":{\"level\":\"s0:c30,c15\"}}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"securityContext\":{\"fsGroup\":1000900000,\"runAsGroup\":1000900000,\"runAsUser\":1000900000}}}\n",
                "openshift.io/scc": "privileged"
              },
              "creationTimestamp": "2022-11-09T17:29:50Z",
              "labels": {
                "app": "test",
                "run": "secontextpodcat3",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:run": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      }
                    },
                    "f:spec": {
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:name": {},
                          "f:resources": {},
                          "f:securityContext": {
                            ".": {},
                            "f:allowPrivilegeEscalation": {},
                            "f:capabilities": {
                              ".": {},
                              "f:add": {},
                              "f:drop": {}
                            },
                            "f:privileged": {},
                            "f:readOnlyRootFilesystem": {},
                            "f:seLinuxOptions": {
                              ".": {},
                              "f:level": {}
                            }
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {
                        ".": {},
                        "f:fsGroup": {},
                        "f:runAsGroup": {},
                        "f:runAsUser": {}
                      },
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-11-09T17:29:50Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-09T17:29:50Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.129.0.71\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T17:29:53Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T17:29:53Z"
                }
              ],
              "name": "secontextpodcat3",
              "namespace": "tnf",
              "resourceVersion": "57812471",
              "uid": "51855f84-0e99-4e0b-887b-7b34467fa5f1"
            },
            "spec": {
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "Always",
                  "name": "test",
                  "resources": {},
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [
                        "NET_ADMIN",
                        "NET_RAW",
                        "IPC_LOCK"
                      ],
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETUID",
                        "SETGID"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": false,
                    "seLinuxOptions": {
                      "level": "s0:c30,c15"
                    }
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000900000,
                "runAsGroup": 1000900000,
                "runAsUser": 1000900000
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:29:50Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:29:53Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:29:53Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:29:50Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://dac1a0f191dd328b412d2ed34bb1be2e98ade7ec6588f2e0afb2b0b1e8edf782",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T17:29:53Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.5",
              "phase": "Running",
              "podIP": "10.129.0.71",
              "podIPs": [
                {
                  "ip": "10.129.0.71"
                }
              ],
              "qosClass": "BestEffort",
              "startTime": "2022-11-09T17:29:50Z"
            }
          },
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "test-0",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://88ed9f382ecdd9b070064c69abf25d6d3096e612487e5d097e9a4732328dad0a",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:27:46Z"
                    }
                  }
                },
                "UID": "88ed9f382ecdd9b070064c69abf25d6d3096e612487e5d097e9a4732328dad0a",
                "command": [
                  "./bin/app"
                ],
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {
                  "postStart": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "echo Hello from the postStart handler \u003e /tmp/message"
                      ]
                    }
                  },
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "killall -0 tail"
                      ]
                    }
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "liveness"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "test",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http-probe",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "readiness"
                      }
                    ],
                    "path": "/ready",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  }
                },
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETGID",
                      "SETUID"
                    ]
                  },
                  "runAsUser": 1000690000
                },
                "startupProbe": {
                  "failureThreshold": 10,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "startup"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.130.0.135/23\"],\"mac_address\":\"0a:58:0a:82:00:87\",\"gateway_ips\":[\"10.130.0.1\"],\"ip_address\":\"10.130.0.135/23\",\"gateway_ip\":\"10.130.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.130.0.135\"\n    ],\n    \"mac\": \"0a:58:0a:82:00:87\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.130.0.135\"\n    ],\n    \"mac\": \"0a:58:0a:82:00:87\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "openshift.io/scc": "restricted",
                "test-network-function.com/container_tests": "[\"PRIVILEGED_POD\",\"PRIVILEGED_ROLE\"]",
                "test-network-function.com/defaultnetworkinterface": "\"eth0\""
              },
              "creationTimestamp": "2022-10-24T22:31:54Z",
              "generateName": "test-",
              "labels": {
                "app": "testss",
                "controller-revision-hash": "test-5f787cb8c8",
                "statefulset.kubernetes.io/pod-name": "test-0",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:test-network-function.com/container_tests": {},
                        "f:test-network-function.com/defaultnetworkinterface": {}
                      },
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:controller-revision-hash": {},
                        "f:statefulset.kubernetes.io/pod-name": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"ceceebf7-ae40-40e7-905e-6dc06bbd4bbc\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:affinity": {
                        ".": {},
                        "f:podAntiAffinity": {
                          ".": {},
                          "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                        }
                      },
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:command": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:lifecycle": {
                            ".": {},
                            "f:postStart": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            },
                            "f:preStop": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            }
                          },
                          "f:livenessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:name": {},
                          "f:ports": {
                            ".": {},
                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                              ".": {},
                              "f:containerPort": {},
                              "f:name": {},
                              "f:protocol": {}
                            }
                          },
                          "f:readinessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:resources": {
                            ".": {},
                            "f:limits": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            },
                            "f:requests": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            }
                          },
                          "f:startupProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:hostname": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "time": "2022-10-24T22:31:54Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-10-24T22:31:56Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-24T22:31:58Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.130.0.135\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-08T22:27:59Z"
                }
              ],
              "name": "test-0",
              "namespace": "tnf",
              "ownerReferences": [
                {
                  "apiVersion": "apps/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "StatefulSet",
                  "name": "test",
                  "uid": "ceceebf7-ae40-40e7-905e-6dc06bbd4bbc"
                }
              ],
              "resourceVersion": "57307581",
              "uid": "0a66ec1a-54dd-46a0-bca1-60093ca5e249"
            },
            "spec": {
              "affinity": {
                "podAntiAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "app",
                            "operator": "In",
                            "values": [
                              "testss"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "command": [
                    "./bin/app"
                  ],
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "lifecycle": {
                    "postStart": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "echo Hello from the postStart handler \u003e /tmp/message"
                        ]
                      }
                    },
                    "preStop": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "killall -0 tail"
                        ]
                      }
                    }
                  },
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "liveness"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "name": "test",
                  "ports": [
                    {
                      "containerPort": 8080,
                      "name": "http-probe",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "readiness"
                        }
                      ],
                      "path": "/ready",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    }
                  },
                  "securityContext": {
                    "capabilities": {
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETGID",
                        "SETUID"
                      ]
                    },
                    "runAsUser": 1000690000
                  },
                  "startupProbe": {
                    "failureThreshold": 10,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "startup"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "FallbackToLogsOnError"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "hostname": "test-0",
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000690000,
                "seLinuxOptions": {
                  "level": "s0:c26,c20"
                }
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/memory-pressure",
                  "operator": "Exists"
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:31:54Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:27:59Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:27:59Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:31:54Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://88ed9f382ecdd9b070064c69abf25d6d3096e612487e5d097e9a4732328dad0a",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:27:46Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.3",
              "phase": "Running",
              "podIP": "10.130.0.135",
              "podIPs": [
                {
                  "ip": "10.130.0.135"
                }
              ],
              "qosClass": "Guaranteed",
              "startTime": "2022-10-24T22:31:54Z"
            }
          },
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "test-1",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://dc0875a38a9b1d0c4e30d510c21153dee255ee1bf5e2b18cabb4eacd9353dfcb",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:31:42Z"
                    }
                  }
                },
                "UID": "dc0875a38a9b1d0c4e30d510c21153dee255ee1bf5e2b18cabb4eacd9353dfcb",
                "command": [
                  "./bin/app"
                ],
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {
                  "postStart": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "echo Hello from the postStart handler \u003e /tmp/message"
                      ]
                    }
                  },
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "killall -0 tail"
                      ]
                    }
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "liveness"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "test",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http-probe",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "readiness"
                      }
                    ],
                    "path": "/ready",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  }
                },
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETGID",
                      "SETUID"
                    ]
                  },
                  "runAsUser": 1000690000
                },
                "startupProbe": {
                  "failureThreshold": 10,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "startup"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.128.0.62/23\"],\"mac_address\":\"0a:58:0a:80:00:3e\",\"gateway_ips\":[\"10.128.0.1\"],\"ip_address\":\"10.128.0.62/23\",\"gateway_ip\":\"10.128.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.62\"\n    ],\n    \"mac\": \"0a:58:0a:80:00:3e\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.62\"\n    ],\n    \"mac\": \"0a:58:0a:80:00:3e\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "openshift.io/scc": "restricted",
                "test-network-function.com/container_tests": "[\"PRIVILEGED_POD\",\"PRIVILEGED_ROLE\"]",
                "test-network-function.com/defaultnetworkinterface": "\"eth0\""
              },
              "creationTimestamp": "2022-10-24T22:32:12Z",
              "generateName": "test-",
              "labels": {
                "app": "testss",
                "controller-revision-hash": "test-5f787cb8c8",
                "statefulset.kubernetes.io/pod-name": "test-1",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:test-network-function.com/container_tests": {},
                        "f:test-network-function.com/defaultnetworkinterface": {}
                      },
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:controller-revision-hash": {},
                        "f:statefulset.kubernetes.io/pod-name": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"ceceebf7-ae40-40e7-905e-6dc06bbd4bbc\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:affinity": {
                        ".": {},
                        "f:podAntiAffinity": {
                          ".": {},
                          "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                        }
                      },
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:command": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:lifecycle": {
                            ".": {},
                            "f:postStart": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            },
                            "f:preStop": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            }
                          },
                          "f:livenessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:name": {},
                          "f:ports": {
                            ".": {},
                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                              ".": {},
                              "f:containerPort": {},
                              "f:name": {},
                              "f:protocol": {}
                            }
                          },
                          "f:readinessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:resources": {
                            ".": {},
                            "f:limits": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            },
                            "f:requests": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            }
                          },
                          "f:startupProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:hostname": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "time": "2022-10-24T22:32:12Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-10-24T22:32:14Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-24T22:32:16Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.128.0.62\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-08T22:31:56Z"
                }
              ],
              "name": "test-1",
              "namespace": "tnf",
              "ownerReferences": [
                {
                  "apiVersion": "apps/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "StatefulSet",
                  "name": "test",
                  "uid": "ceceebf7-ae40-40e7-905e-6dc06bbd4bbc"
                }
              ],
              "resourceVersion": "57310008",
              "uid": "3733eaa3-acfd-4dac-b0a6-b978a52f3d85"
            },
            "spec": {
              "affinity": {
                "podAntiAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "app",
                            "operator": "In",
                            "values": [
                              "testss"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "command": [
                    "./bin/app"
                  ],
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "lifecycle": {
                    "postStart": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "echo Hello from the postStart handler \u003e /tmp/message"
                        ]
                      }
                    },
                    "preStop": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "killall -0 tail"
                        ]
                      }
                    }
                  },
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "liveness"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "name": "test",
                  "ports": [
                    {
                      "containerPort": 8080,
                      "name": "http-probe",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "readiness"
                        }
                      ],
                      "path": "/ready",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    }
                  },
                  "securityContext": {
                    "capabilities": {
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETGID",
                        "SETUID"
                      ]
                    },
                    "runAsUser": 1000690000
                  },
                  "startupProbe": {
                    "failureThreshold": 10,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "startup"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "FallbackToLogsOnError"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "hostname": "test-1",
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000690000,
                "seLinuxOptions": {
                  "level": "s0:c26,c20"
                }
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/memory-pressure",
                  "operator": "Exists"
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:32:12Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:31:56Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:31:56Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:32:12Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://dc0875a38a9b1d0c4e30d510c21153dee255ee1bf5e2b18cabb4eacd9353dfcb",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:31:42Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.4",
              "phase": "Running",
              "podIP": "10.128.0.62",
              "podIPs": [
                {
                  "ip": "10.128.0.62"
                }
              ],
              "qosClass": "Guaranteed",
              "startTime": "2022-10-24T22:32:12Z"
            }
          },
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "test-6787875cc7-bsl8s",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://d9c6633abe48d07c75c51ba8d09a55a863b8e6b21a214f9cdd6a80f7b8b662f4",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T09:18:53Z"
                    }
                  }
                },
                "UID": "d9c6633abe48d07c75c51ba8d09a55a863b8e6b21a214f9cdd6a80f7b8b662f4",
                "command": [
                  "./bin/app"
                ],
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {
                  "postStart": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "echo Hello from the postStart handler \u003e /tmp/message"
                      ]
                    }
                  },
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "killall -0 tail"
                      ]
                    }
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "liveness"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "test",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http-probe",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "readiness"
                      }
                    ],
                    "path": "/ready",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  }
                },
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETGID",
                      "SETUID"
                    ]
                  },
                  "runAsUser": 1000690000
                },
                "startupProbe": {
                  "failureThreshold": 10,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "startup"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.130.1.103/23\"],\"mac_address\":\"0a:58:0a:82:01:67\",\"gateway_ips\":[\"10.130.0.1\"],\"ip_address\":\"10.130.1.103/23\",\"gateway_ip\":\"10.130.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.130.1.103\"\n    ],\n    \"mac\": \"0a:58:0a:82:01:67\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.130.1.103\"\n    ],\n    \"mac\": \"0a:58:0a:82:01:67\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "openshift.io/scc": "restricted",
                "test-network-function.com/container_tests": "[\"PRIVILEGED_POD\",\"PRIVILEGED_ROLE\"]",
                "test-network-function.com/defaultnetworkinterface": "\"eth0\""
              },
              "creationTimestamp": "2022-11-09T09:18:32Z",
              "generateName": "test-6787875cc7-",
              "labels": {
                "app": "testdp",
                "pod-template-hash": "6787875cc7",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:test-network-function.com/container_tests": {},
                        "f:test-network-function.com/defaultnetworkinterface": {}
                      },
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:pod-template-hash": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"33350c3d-fcec-4e08-901e-8cc67d65738e\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:affinity": {
                        ".": {},
                        "f:podAntiAffinity": {
                          ".": {},
                          "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                        }
                      },
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:command": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:lifecycle": {
                            ".": {},
                            "f:postStart": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            },
                            "f:preStop": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            }
                          },
                          "f:livenessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:name": {},
                          "f:ports": {
                            ".": {},
                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                              ".": {},
                              "f:containerPort": {},
                              "f:name": {},
                              "f:protocol": {}
                            }
                          },
                          "f:readinessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:resources": {
                            ".": {},
                            "f:limits": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            },
                            "f:requests": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            }
                          },
                          "f:startupProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "time": "2022-11-09T09:18:32Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-09T09:18:34Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T09:18:50Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.130.1.103\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T09:19:07Z"
                }
              ],
              "name": "test-6787875cc7-bsl8s",
              "namespace": "tnf",
              "ownerReferences": [
                {
                  "apiVersion": "apps/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "ReplicaSet",
                  "name": "test-6787875cc7",
                  "uid": "33350c3d-fcec-4e08-901e-8cc67d65738e"
                }
              ],
              "resourceVersion": "57579507",
              "uid": "c50a61de-08ae-4a4d-9a35-bf0826a18cbd"
            },
            "spec": {
              "affinity": {
                "podAntiAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "app",
                            "operator": "In",
                            "values": [
                              "testdp"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "command": [
                    "./bin/app"
                  ],
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "lifecycle": {
                    "postStart": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "echo Hello from the postStart handler \u003e /tmp/message"
                        ]
                      }
                    },
                    "preStop": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "killall -0 tail"
                        ]
                      }
                    }
                  },
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "liveness"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "name": "test",
                  "ports": [
                    {
                      "containerPort": 8080,
                      "name": "http-probe",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "readiness"
                        }
                      ],
                      "path": "/ready",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    }
                  },
                  "securityContext": {
                    "capabilities": {
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETGID",
                        "SETUID"
                      ]
                    },
                    "runAsUser": 1000690000
                  },
                  "startupProbe": {
                    "failureThreshold": 10,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "startup"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "FallbackToLogsOnError"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000690000,
                "seLinuxOptions": {
                  "level": "s0:c26,c20"
                }
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/memory-pressure",
                  "operator": "Exists"
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T09:18:32Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T09:19:07Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T09:19:07Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T09:18:32Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://d9c6633abe48d07c75c51ba8d09a55a863b8e6b21a214f9cdd6a80f7b8b662f4",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T09:18:53Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.3",
              "phase": "Running",
              "podIP": "10.130.1.103",
              "podIPs": [
                {
                  "ip": "10.130.1.103"
                }
              ],
              "qosClass": "Guaranteed",
              "startTime": "2022-11-09T09:18:32Z"
            }
          },
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "test-6787875cc7-s4ww6",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://217ccbcbab0ef39f40f417a29c4ce28d26891d2d52d51ac66425fb60a8cd27d0",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:31:41Z"
                    }
                  }
                },
                "UID": "217ccbcbab0ef39f40f417a29c4ce28d26891d2d52d51ac66425fb60a8cd27d0",
                "command": [
                  "./bin/app"
                ],
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {
                  "postStart": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "echo Hello from the postStart handler \u003e /tmp/message"
                      ]
                    }
                  },
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "killall -0 tail"
                      ]
                    }
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "liveness"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "test",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http-probe",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "readiness"
                      }
                    ],
                    "path": "/ready",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  }
                },
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETGID",
                      "SETUID"
                    ]
                  },
                  "runAsUser": 1000690000
                },
                "startupProbe": {
                  "failureThreshold": 10,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "startup"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.128.0.61/23\"],\"mac_address\":\"0a:58:0a:80:00:3d\",\"gateway_ips\":[\"10.128.0.1\"],\"ip_address\":\"10.128.0.61/23\",\"gateway_ip\":\"10.128.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.61\"\n    ],\n    \"mac\": \"0a:58:0a:80:00:3d\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.61\"\n    ],\n    \"mac\": \"0a:58:0a:80:00:3d\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "openshift.io/scc": "restricted",
                "test-network-function.com/container_tests": "[\"PRIVILEGED_POD\",\"PRIVILEGED_ROLE\"]",
                "test-network-function.com/defaultnetworkinterface": "\"eth0\""
              },
              "creationTimestamp": "2022-10-24T22:32:11Z",
              "generateName": "test-6787875cc7-",
              "labels": {
                "app": "testdp",
                "pod-template-hash": "6787875cc7",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:test-network-function.com/container_tests": {},
                        "f:test-network-function.com/defaultnetworkinterface": {}
                      },
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:pod-template-hash": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"33350c3d-fcec-4e08-901e-8cc67d65738e\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:affinity": {
                        ".": {},
                        "f:podAntiAffinity": {
                          ".": {},
                          "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                        }
                      },
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:command": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:lifecycle": {
                            ".": {},
                            "f:postStart": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            },
                            "f:preStop": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            }
                          },
                          "f:livenessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:name": {},
                          "f:ports": {
                            ".": {},
                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                              ".": {},
                              "f:containerPort": {},
                              "f:name": {},
                              "f:protocol": {}
                            }
                          },
                          "f:readinessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:resources": {
                            ".": {},
                            "f:limits": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            },
                            "f:requests": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            }
                          },
                          "f:startupProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "time": "2022-10-24T22:32:11Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-10-24T22:32:11Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-24T22:32:13Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.128.0.61\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-08T22:31:51Z"
                }
              ],
              "name": "test-6787875cc7-s4ww6",
              "namespace": "tnf",
              "ownerReferences": [
                {
                  "apiVersion": "apps/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "ReplicaSet",
                  "name": "test-6787875cc7",
                  "uid": "33350c3d-fcec-4e08-901e-8cc67d65738e"
                }
              ],
              "resourceVersion": "57309779",
              "uid": "d0a3658c-3f79-463c-bb7a-f406d9622b60"
            },
            "spec": {
              "affinity": {
                "podAntiAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "app",
                            "operator": "In",
                            "values": [
                              "testdp"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "command": [
                    "./bin/app"
                  ],
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "lifecycle": {
                    "postStart": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "echo Hello from the postStart handler \u003e /tmp/message"
                        ]
                      }
                    },
                    "preStop": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "killall -0 tail"
                        ]
                      }
                    }
                  },
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "liveness"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "name": "test",
                  "ports": [
                    {
                      "containerPort": 8080,
                      "name": "http-probe",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "readiness"
                        }
                      ],
                      "path": "/ready",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    }
                  },
                  "securityContext": {
                    "capabilities": {
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETGID",
                        "SETUID"
                      ]
                    },
                    "runAsUser": 1000690000
                  },
                  "startupProbe": {
                    "failureThreshold": 10,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "startup"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "FallbackToLogsOnError"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000690000,
                "seLinuxOptions": {
                  "level": "s0:c26,c20"
                }
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/memory-pressure",
                  "operator": "Exists"
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:32:11Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:31:51Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:31:51Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:32:11Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://217ccbcbab0ef39f40f417a29c4ce28d26891d2d52d51ac66425fb60a8cd27d0",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:31:41Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.4",
              "phase": "Running",
              "podIP": "10.128.0.61",
              "podIPs": [
                {
                  "ip": "10.128.0.61"
                }
              ],
              "qosClass": "Guaranteed",
              "startTime": "2022-10-24T22:32:11Z"
            }
          }
        ],
        "Config": {
          "acceptedKernelTaints": [
            {
              "module": "vboxsf"
            },
            {
              "module": "vboxguest"
            }
          ],
          "certifiedcontainerinfo": [
            {
              "digest": "",
              "name": "rocketchat/rocketchat",
              "repository": "registry.connect.redhat.com",
              "tag": "0.56.0-1"
            },
            {
              "digest": "sha256:03f7f2499233a302351821d6f78f0e813c3f749258184f4133144558097c57b0",
              "name": "rocketchat/rocketchat",
              "repository": "registry.connect.redhat.com",
              "tag": "0.56.0-1"
            }
          ],
          "checkDiscoveredContainerCertificationStatus": false,
          "skipHelmChartList": [
            {
              "name": "coredns"
            }
          ],
          "skipScalingTestDeployments": [
            {
              "name": "deployment1",
              "namespace": "tnf"
            }
          ],
          "targetCrdFilters": [
            {
              "nameSuffix": "group1.test.com"
            },
            {
              "nameSuffix": "test-network-function.com"
            }
          ],
          "targetNameSpaces": [
            {
              "name": "tnf"
            }
          ],
          "targetPodLabels": [
            {
              "name": "generic",
              "prefix": "test-network-function.com",
              "value": "target"
            }
          ]
        },
        "DebugPods": {
          "master-2.clus0.t5g.lab.eng.rdu2.redhat.com": {
            "metadata": {
              "creationTimestamp": "2022-11-09T18:27:13Z",
              "generateName": "debug-",
              "labels": {
                "controller-revision-hash": "ff596c897",
                "name": "debug",
                "pod-template-generation": "1",
                "test-network-function.com/app": "debug"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:controller-revision-hash": {},
                        "f:name": {},
                        "f:pod-template-generation": {},
                        "f:test-network-function.com/app": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"5599a135-aae7-4fb3-a02f-f7d46bf0aba6\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:affinity": {
                        ".": {},
                        "f:nodeAffinity": {
                          ".": {},
                          "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                        }
                      },
                      "f:containers": {
                        "k:{\"name\":\"container-00\"}": {
                          ".": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:name": {},
                          "f:resources": {},
                          "f:securityContext": {
                            ".": {},
                            "f:privileged": {},
                            "f:runAsUser": {}
                          },
                          "f:stdin": {},
                          "f:stdinOnce": {},
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {},
                          "f:tty": {},
                          "f:volumeMounts": {
                            ".": {},
                            "k:{\"mountPath\":\"/host\"}": {
                              ".": {},
                              "f:mountPath": {},
                              "f:name": {}
                            }
                          }
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:hostIPC": {},
                      "f:hostNetwork": {},
                      "f:hostPID": {},
                      "f:preemptionPolicy": {},
                      "f:priority": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {},
                      "f:tolerations": {},
                      "f:volumes": {
                        ".": {},
                        "k:{\"name\":\"host\"}": {
                          ".": {},
                          "f:hostPath": {
                            ".": {},
                            "f:path": {},
                            "f:type": {}
                          },
                          "f:name": {}
                        }
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "time": "2022-11-09T18:27:13Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.1.24.3\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T18:27:15Z"
                }
              ],
              "name": "debug-plh6d",
              "namespace": "default",
              "ownerReferences": [
                {
                  "apiVersion": "apps/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "DaemonSet",
                  "name": "debug",
                  "uid": "5599a135-aae7-4fb3-a02f-f7d46bf0aba6"
                }
              ],
              "resourceVersion": "57843150",
              "uid": "1e420872-6bcd-4d91-a197-398cc080a305"
            },
            "spec": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchFields": [
                          {
                            "key": "metadata.name",
                            "operator": "In",
                            "values": [
                              "master-2.clus0.t5g.lab.eng.rdu2.redhat.com"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "containers": [
                {
                  "image": "quay.io/testnetworkfunction/debug-partner:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "container-00",
                  "resources": {},
                  "securityContext": {
                    "privileged": true,
                    "runAsUser": 0
                  },
                  "stdin": true,
                  "stdinOnce": true,
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "tty": true,
                  "volumeMounts": [
                    {
                      "mountPath": "/host",
                      "name": "host"
                    },
                    {
                      "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                      "name": "kube-api-access-qk4zw",
                      "readOnly": true
                    }
                  ]
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "hostIPC": true,
              "hostNetwork": true,
              "hostPID": true,
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-jzc6t"
                }
              ],
              "nodeName": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {},
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists"
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/control-plane"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/disk-pressure",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/memory-pressure",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/pid-pressure",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/unschedulable",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/network-unavailable",
                  "operator": "Exists"
                }
              ],
              "volumes": [
                {
                  "hostPath": {
                    "path": "/",
                    "type": "Directory"
                  },
                  "name": "host"
                },
                {
                  "name": "kube-api-access-qk4zw",
                  "projected": {
                    "defaultMode": 420,
                    "sources": [
                      {
                        "serviceAccountToken": {
                          "expirationSeconds": 3607,
                          "path": "token"
                        }
                      },
                      {
                        "configMap": {
                          "items": [
                            {
                              "key": "ca.crt",
                              "path": "ca.crt"
                            }
                          ],
                          "name": "kube-root-ca.crt"
                        }
                      },
                      {
                        "downwardAPI": {
                          "items": [
                            {
                              "fieldRef": {
                                "apiVersion": "v1",
                                "fieldPath": "metadata.namespace"
                              },
                              "path": "namespace"
                            }
                          ]
                        }
                      },
                      {
                        "configMap": {
                          "items": [
                            {
                              "key": "service-ca.crt",
                              "path": "service-ca.crt"
                            }
                          ],
                          "name": "openshift-service-ca.crt"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:13Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:15Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:15Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:13Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://e00d3021a5988518a21a61853a8977b4c2f8eb5a98e6f2d6c7b4be06b657f170",
                  "image": "quay.io/testnetworkfunction/debug-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/debug-partner@sha256:547c4c5921c7e7d76de9596e74cfe64f879e32dc9378488bb96df9957417a86e",
                  "lastState": {},
                  "name": "container-00",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T18:27:15Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.3",
              "phase": "Running",
              "podIP": "10.1.24.3",
              "podIPs": [
                {
                  "ip": "10.1.24.3"
                }
              ],
              "qosClass": "BestEffort",
              "startTime": "2022-11-09T18:27:13Z"
            }
          },
          "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com": {
            "metadata": {
              "creationTimestamp": "2022-11-09T18:27:13Z",
              "generateName": "debug-",
              "labels": {
                "controller-revision-hash": "ff596c897",
                "name": "debug",
                "pod-template-generation": "1",
                "test-network-function.com/app": "debug"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:controller-revision-hash": {},
                        "f:name": {},
                        "f:pod-template-generation": {},
                        "f:test-network-function.com/app": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"5599a135-aae7-4fb3-a02f-f7d46bf0aba6\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:affinity": {
                        ".": {},
                        "f:nodeAffinity": {
                          ".": {},
                          "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                        }
                      },
                      "f:containers": {
                        "k:{\"name\":\"container-00\"}": {
                          ".": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:name": {},
                          "f:resources": {},
                          "f:securityContext": {
                            ".": {},
                            "f:privileged": {},
                            "f:runAsUser": {}
                          },
                          "f:stdin": {},
                          "f:stdinOnce": {},
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {},
                          "f:tty": {},
                          "f:volumeMounts": {
                            ".": {},
                            "k:{\"mountPath\":\"/host\"}": {
                              ".": {},
                              "f:mountPath": {},
                              "f:name": {}
                            }
                          }
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:hostIPC": {},
                      "f:hostNetwork": {},
                      "f:hostPID": {},
                      "f:preemptionPolicy": {},
                      "f:priority": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {},
                      "f:tolerations": {},
                      "f:volumes": {
                        ".": {},
                        "k:{\"name\":\"host\"}": {
                          ".": {},
                          "f:hostPath": {
                            ".": {},
                            "f:path": {},
                            "f:type": {}
                          },
                          "f:name": {}
                        }
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "time": "2022-11-09T18:27:13Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.1.24.4\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T18:27:15Z"
                }
              ],
              "name": "debug-jchtg",
              "namespace": "default",
              "ownerReferences": [
                {
                  "apiVersion": "apps/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "DaemonSet",
                  "name": "debug",
                  "uid": "5599a135-aae7-4fb3-a02f-f7d46bf0aba6"
                }
              ],
              "resourceVersion": "57843148",
              "uid": "d2ce054b-2f82-4a7e-84c7-558a88068d93"
            },
            "spec": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchFields": [
                          {
                            "key": "metadata.name",
                            "operator": "In",
                            "values": [
                              "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "containers": [
                {
                  "image": "quay.io/testnetworkfunction/debug-partner:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "container-00",
                  "resources": {},
                  "securityContext": {
                    "privileged": true,
                    "runAsUser": 0
                  },
                  "stdin": true,
                  "stdinOnce": true,
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "tty": true,
                  "volumeMounts": [
                    {
                      "mountPath": "/host",
                      "name": "host"
                    },
                    {
                      "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                      "name": "kube-api-access-p5fr7",
                      "readOnly": true
                    }
                  ]
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "hostIPC": true,
              "hostNetwork": true,
              "hostPID": true,
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-jzc6t"
                }
              ],
              "nodeName": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {},
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists"
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/control-plane"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/disk-pressure",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/memory-pressure",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/pid-pressure",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/unschedulable",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/network-unavailable",
                  "operator": "Exists"
                }
              ],
              "volumes": [
                {
                  "hostPath": {
                    "path": "/",
                    "type": "Directory"
                  },
                  "name": "host"
                },
                {
                  "name": "kube-api-access-p5fr7",
                  "projected": {
                    "defaultMode": 420,
                    "sources": [
                      {
                        "serviceAccountToken": {
                          "expirationSeconds": 3607,
                          "path": "token"
                        }
                      },
                      {
                        "configMap": {
                          "items": [
                            {
                              "key": "ca.crt",
                              "path": "ca.crt"
                            }
                          ],
                          "name": "kube-root-ca.crt"
                        }
                      },
                      {
                        "downwardAPI": {
                          "items": [
                            {
                              "fieldRef": {
                                "apiVersion": "v1",
                                "fieldPath": "metadata.namespace"
                              },
                              "path": "namespace"
                            }
                          ]
                        }
                      },
                      {
                        "configMap": {
                          "items": [
                            {
                              "key": "service-ca.crt",
                              "path": "service-ca.crt"
                            }
                          ],
                          "name": "openshift-service-ca.crt"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:13Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:15Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:15Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:13Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://8aa3b3dad981cba441d5b227e0cf42b3d6feb361f315c2d1d24a145f14e99522",
                  "image": "quay.io/testnetworkfunction/debug-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/debug-partner@sha256:547c4c5921c7e7d76de9596e74cfe64f879e32dc9378488bb96df9957417a86e",
                  "lastState": {},
                  "name": "container-00",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T18:27:14Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.4",
              "phase": "Running",
              "podIP": "10.1.24.4",
              "podIPs": [
                {
                  "ip": "10.1.24.4"
                }
              ],
              "qosClass": "BestEffort",
              "startTime": "2022-11-09T18:27:13Z"
            }
          },
          "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com": {
            "metadata": {
              "creationTimestamp": "2022-11-09T18:27:13Z",
              "generateName": "debug-",
              "labels": {
                "controller-revision-hash": "ff596c897",
                "name": "debug",
                "pod-template-generation": "1",
                "test-network-function.com/app": "debug"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:controller-revision-hash": {},
                        "f:name": {},
                        "f:pod-template-generation": {},
                        "f:test-network-function.com/app": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"5599a135-aae7-4fb3-a02f-f7d46bf0aba6\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:affinity": {
                        ".": {},
                        "f:nodeAffinity": {
                          ".": {},
                          "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                        }
                      },
                      "f:containers": {
                        "k:{\"name\":\"container-00\"}": {
                          ".": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:name": {},
                          "f:resources": {},
                          "f:securityContext": {
                            ".": {},
                            "f:privileged": {},
                            "f:runAsUser": {}
                          },
                          "f:stdin": {},
                          "f:stdinOnce": {},
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {},
                          "f:tty": {},
                          "f:volumeMounts": {
                            ".": {},
                            "k:{\"mountPath\":\"/host\"}": {
                              ".": {},
                              "f:mountPath": {},
                              "f:name": {}
                            }
                          }
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:hostIPC": {},
                      "f:hostNetwork": {},
                      "f:hostPID": {},
                      "f:preemptionPolicy": {},
                      "f:priority": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {},
                      "f:tolerations": {},
                      "f:volumes": {
                        ".": {},
                        "k:{\"name\":\"host\"}": {
                          ".": {},
                          "f:hostPath": {
                            ".": {},
                            "f:path": {},
                            "f:type": {}
                          },
                          "f:name": {}
                        }
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "time": "2022-11-09T18:27:13Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.1.24.5\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T18:27:14Z"
                }
              ],
              "name": "debug-h89w2",
              "namespace": "default",
              "ownerReferences": [
                {
                  "apiVersion": "apps/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "DaemonSet",
                  "name": "debug",
                  "uid": "5599a135-aae7-4fb3-a02f-f7d46bf0aba6"
                }
              ],
              "resourceVersion": "57843133",
              "uid": "8349dd5b-8898-4d7c-9082-84d0990e0a06"
            },
            "spec": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchFields": [
                          {
                            "key": "metadata.name",
                            "operator": "In",
                            "values": [
                              "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "containers": [
                {
                  "image": "quay.io/testnetworkfunction/debug-partner:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "container-00",
                  "resources": {},
                  "securityContext": {
                    "privileged": true,
                    "runAsUser": 0
                  },
                  "stdin": true,
                  "stdinOnce": true,
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "tty": true,
                  "volumeMounts": [
                    {
                      "mountPath": "/host",
                      "name": "host"
                    },
                    {
                      "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                      "name": "kube-api-access-4ggxh",
                      "readOnly": true
                    }
                  ]
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "hostIPC": true,
              "hostNetwork": true,
              "hostPID": true,
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-jzc6t"
                }
              ],
              "nodeName": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {},
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists"
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/control-plane"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/disk-pressure",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/memory-pressure",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/pid-pressure",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/unschedulable",
                  "operator": "Exists"
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/network-unavailable",
                  "operator": "Exists"
                }
              ],
              "volumes": [
                {
                  "hostPath": {
                    "path": "/",
                    "type": "Directory"
                  },
                  "name": "host"
                },
                {
                  "name": "kube-api-access-4ggxh",
                  "projected": {
                    "defaultMode": 420,
                    "sources": [
                      {
                        "serviceAccountToken": {
                          "expirationSeconds": 3607,
                          "path": "token"
                        }
                      },
                      {
                        "configMap": {
                          "items": [
                            {
                              "key": "ca.crt",
                              "path": "ca.crt"
                            }
                          ],
                          "name": "kube-root-ca.crt"
                        }
                      },
                      {
                        "downwardAPI": {
                          "items": [
                            {
                              "fieldRef": {
                                "apiVersion": "v1",
                                "fieldPath": "metadata.namespace"
                              },
                              "path": "namespace"
                            }
                          ]
                        }
                      },
                      {
                        "configMap": {
                          "items": [
                            {
                              "key": "service-ca.crt",
                              "path": "service-ca.crt"
                            }
                          ],
                          "name": "openshift-service-ca.crt"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:13Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:14Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:14Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T18:27:13Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://af7ed16fb525ad0578aa273e4697054e52145c6653dcafc69c40a09f31252661",
                  "image": "quay.io/testnetworkfunction/debug-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/debug-partner@sha256:547c4c5921c7e7d76de9596e74cfe64f879e32dc9378488bb96df9957417a86e",
                  "lastState": {},
                  "name": "container-00",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T18:27:14Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.5",
              "phase": "Running",
              "podIP": "10.1.24.5",
              "podIPs": [
                {
                  "ip": "10.1.24.5"
                }
              ],
              "qosClass": "BestEffort",
              "startTime": "2022-11-09T18:27:13Z"
            }
          }
        },
        "IstioServiceMesh": false,
        "NetworkPolicies": [
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"default-deny-egress\",\"namespace\":\"banashri\"},\"spec\":{\"podSelector\":{\"matchLabels\":{\"test-network-function.com/container\":\"target\"}},\"policyTypes\":[\"Egress\"]}}\n"
              },
              "creationTimestamp": "2022-10-14T12:46:52Z",
              "generation": 1,
              "managedFields": [
                {
                  "apiVersion": "networking.k8s.io/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:podSelector": {},
                      "f:policyTypes": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T12:46:52Z"
                }
              ],
              "name": "default-deny-egress",
              "namespace": "banashri",
              "resourceVersion": "42862480",
              "uid": "cbebec6d-0045-470e-be96-4bc45289a220"
            },
            "spec": {
              "podSelector": {
                "matchLabels": {
                  "test-network-function.com/container": "target"
                }
              },
              "policyTypes": [
                "Egress"
              ]
            },
            "status": {}
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"default-deny-ingress\",\"namespace\":\"banashri\"},\"spec\":{\"podSelector\":{\"matchLabels\":{\"test-network-function.com/container\":\"target\"}},\"policyTypes\":[\"Ingress\"]}}\n"
              },
              "creationTimestamp": "2022-10-14T12:46:51Z",
              "generation": 1,
              "managedFields": [
                {
                  "apiVersion": "networking.k8s.io/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:podSelector": {},
                      "f:policyTypes": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T12:46:51Z"
                }
              ],
              "name": "default-deny-ingress",
              "namespace": "banashri",
              "resourceVersion": "42862473",
              "uid": "51a5366e-11b8-4ae1-82e3-dda4b278b498"
            },
            "spec": {
              "podSelector": {
                "matchLabels": {
                  "test-network-function.com/container": "target"
                }
              },
              "policyTypes": [
                "Ingress"
              ]
            },
            "status": {}
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"intra-namespace\",\"namespace\":\"banashri\"},\"spec\":{\"egress\":[{\"to\":[{\"namespaceSelector\":{\"matchLabels\":{\"kubernetes.io/metadata.name\":\"banashri\"}}}]}],\"ingress\":[{\"from\":[{\"namespaceSelector\":{\"matchLabels\":{\"kubernetes.io/metadata.name\":\"banashri\"}}}]}],\"podSelector\":{\"matchLabels\":{\"test-network-function.com/container\":\"target\"}}}}\n"
              },
              "creationTimestamp": "2022-10-14T12:46:54Z",
              "generation": 1,
              "managedFields": [
                {
                  "apiVersion": "networking.k8s.io/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:egress": {},
                      "f:ingress": {},
                      "f:podSelector": {},
                      "f:policyTypes": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T12:46:54Z"
                }
              ],
              "name": "intra-namespace",
              "namespace": "banashri",
              "resourceVersion": "42862498",
              "uid": "426b77ed-42c5-4332-b120-4bb08713a496"
            },
            "spec": {
              "egress": [
                {
                  "to": [
                    {
                      "namespaceSelector": {
                        "matchLabels": {
                          "kubernetes.io/metadata.name": "banashri"
                        }
                      }
                    }
                  ]
                }
              ],
              "ingress": [
                {
                  "from": [
                    {
                      "namespaceSelector": {
                        "matchLabels": {
                          "kubernetes.io/metadata.name": "banashri"
                        }
                      }
                    }
                  ]
                }
              ],
              "podSelector": {
                "matchLabels": {
                  "test-network-function.com/container": "target"
                }
              },
              "policyTypes": [
                "Ingress",
                "Egress"
              ]
            },
            "status": {}
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"default-deny-egress\",\"namespace\":\"tnf\"},\"spec\":{\"podSelector\":{\"matchLabels\":{\"test-network-function.com/container\":\"target\"}},\"policyTypes\":[\"Egress\"]}}\n"
              },
              "creationTimestamp": "2022-09-21T20:16:35Z",
              "generation": 1,
              "managedFields": [
                {
                  "apiVersion": "networking.k8s.io/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:podSelector": {},
                      "f:policyTypes": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-09-21T20:16:35Z"
                }
              ],
              "name": "default-deny-egress",
              "namespace": "tnf",
              "resourceVersion": "31948162",
              "uid": "038f2a74-54db-490c-b205-ac92a94aed72"
            },
            "spec": {
              "podSelector": {
                "matchLabels": {
                  "test-network-function.com/container": "target"
                }
              },
              "policyTypes": [
                "Egress"
              ]
            },
            "status": {}
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"default-deny-ingress\",\"namespace\":\"tnf\"},\"spec\":{\"podSelector\":{\"matchLabels\":{\"test-network-function.com/container\":\"target\"}},\"policyTypes\":[\"Ingress\"]}}\n"
              },
              "creationTimestamp": "2022-09-21T20:16:34Z",
              "generation": 1,
              "managedFields": [
                {
                  "apiVersion": "networking.k8s.io/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:podSelector": {},
                      "f:policyTypes": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-09-21T20:16:34Z"
                }
              ],
              "name": "default-deny-ingress",
              "namespace": "tnf",
              "resourceVersion": "31948155",
              "uid": "ba3b37a1-d39c-49c0-b741-bfff3c494bb6"
            },
            "spec": {
              "podSelector": {
                "matchLabels": {
                  "test-network-function.com/container": "target"
                }
              },
              "policyTypes": [
                "Ingress"
              ]
            },
            "status": {}
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"intra-namespace\",\"namespace\":\"tnf\"},\"spec\":{\"egress\":[{\"to\":[{\"namespaceSelector\":{\"matchLabels\":{\"kubernetes.io/metadata.name\":\"tnf\"}}}]}],\"ingress\":[{\"from\":[{\"namespaceSelector\":{\"matchLabels\":{\"kubernetes.io/metadata.name\":\"tnf\"}}}]}],\"podSelector\":{\"matchLabels\":{\"test-network-function.com/container\":\"target\"}}}}\n"
              },
              "creationTimestamp": "2022-09-21T20:16:36Z",
              "generation": 1,
              "managedFields": [
                {
                  "apiVersion": "networking.k8s.io/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:egress": {},
                      "f:ingress": {},
                      "f:podSelector": {},
                      "f:policyTypes": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-09-21T20:16:36Z"
                }
              ],
              "name": "intra-namespace",
              "namespace": "tnf",
              "resourceVersion": "31948171",
              "uid": "0b348ac9-268a-4edc-94eb-6a4176a95344"
            },
            "spec": {
              "egress": [
                {
                  "to": [
                    {
                      "namespaceSelector": {
                        "matchLabels": {
                          "kubernetes.io/metadata.name": "tnf"
                        }
                      }
                    }
                  ]
                }
              ],
              "ingress": [
                {
                  "from": [
                    {
                      "namespaceSelector": {
                        "matchLabels": {
                          "kubernetes.io/metadata.name": "tnf"
                        }
                      }
                    }
                  ]
                }
              ],
              "podSelector": {
                "matchLabels": {
                  "test-network-function.com/container": "target"
                }
              },
              "policyTypes": [
                "Ingress",
                "Egress"
              ]
            },
            "status": {}
          }
        ],
        "PersistentVolumeClaims": [],
        "PersistentVolumes": [],
        "PodDisruptionBudgets": [
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"policy/v1\",\"kind\":\"PodDisruptionBudget\",\"metadata\":{\"annotations\":{},\"name\":\"test-pdb-max\",\"namespace\":\"tnf\"},\"spec\":{\"maxUnavailable\":1,\"selector\":{\"matchLabels\":{\"app\":\"testss\"}}}}\n"
              },
              "creationTimestamp": "2022-10-14T13:43:24Z",
              "generation": 1,
              "managedFields": [
                {
                  "apiVersion": "policy/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        ".": {},
                        "k:{\"type\":\"DisruptionAllowed\"}": {
                          ".": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:observedGeneration": {},
                          "f:reason": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:currentHealthy": {},
                      "f:desiredHealthy": {},
                      "f:disruptionsAllowed": {},
                      "f:expectedPods": {},
                      "f:observedGeneration": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T13:43:24Z"
                },
                {
                  "apiVersion": "policy/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:maxUnavailable": {},
                      "f:selector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T13:43:24Z"
                }
              ],
              "name": "test-pdb-max",
              "namespace": "tnf",
              "resourceVersion": "57310009",
              "uid": "52d08aa1-4ed4-4051-9027-e2cecdaef7ff"
            },
            "spec": {
              "maxUnavailable": 1,
              "selector": {
                "matchLabels": {
                  "app": "testss"
                }
              }
            },
            "status": {
              "conditions": [
                {
                  "lastTransitionTime": "2022-11-08T22:31:56Z",
                  "message": "",
                  "observedGeneration": 1,
                  "reason": "SufficientPods",
                  "status": "True",
                  "type": "DisruptionAllowed"
                }
              ],
              "currentHealthy": 2,
              "desiredHealthy": 1,
              "disruptionsAllowed": 1,
              "expectedPods": 2,
              "observedGeneration": 1
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"policy/v1\",\"kind\":\"PodDisruptionBudget\",\"metadata\":{\"annotations\":{},\"name\":\"test-pdb-min\",\"namespace\":\"tnf\"},\"spec\":{\"minAvailable\":1,\"selector\":{\"matchLabels\":{\"app\":\"testdp\"}}}}\n"
              },
              "creationTimestamp": "2022-10-14T13:43:24Z",
              "generation": 1,
              "managedFields": [
                {
                  "apiVersion": "policy/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:minAvailable": {},
                      "f:selector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T13:43:24Z"
                },
                {
                  "apiVersion": "policy/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        ".": {},
                        "k:{\"type\":\"DisruptionAllowed\"}": {
                          ".": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:observedGeneration": {},
                          "f:reason": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:currentHealthy": {},
                      "f:desiredHealthy": {},
                      "f:disruptionsAllowed": {},
                      "f:expectedPods": {},
                      "f:observedGeneration": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T09:19:07Z"
                }
              ],
              "name": "test-pdb-min",
              "namespace": "tnf",
              "resourceVersion": "57579508",
              "uid": "7749aa59-5766-4446-9eab-cf95fb0a8df7"
            },
            "spec": {
              "minAvailable": 1,
              "selector": {
                "matchLabels": {
                  "app": "testdp"
                }
              }
            },
            "status": {
              "conditions": [
                {
                  "lastTransitionTime": "2022-11-09T09:19:07Z",
                  "message": "",
                  "observedGeneration": 1,
                  "reason": "SufficientPods",
                  "status": "True",
                  "type": "DisruptionAllowed"
                }
              ],
              "currentHealthy": 2,
              "desiredHealthy": 1,
              "disruptionsAllowed": 1,
              "expectedPods": 2,
              "observedGeneration": 1
            }
          }
        ],
        "ResourceQuotas": [
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-high\",\"namespace\":\"banashri\"},\"spec\":{\"hard\":{\"cpu\":\"1000\",\"memory\":\"200Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"high\"]}]}}}\n"
              },
              "creationTimestamp": "2022-10-14T12:11:38Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "cluster-policy-controller",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T12:11:38Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T12:11:38Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T12:11:38Z"
                }
              ],
              "name": "pods-high",
              "namespace": "banashri",
              "resourceVersion": "42847631",
              "uid": "9217846d-cb97-4149-8765-e036d551e879"
            },
            "spec": {
              "hard": {
                "cpu": "1k",
                "memory": "200Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "high"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "1k",
                "memory": "200Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-low\",\"namespace\":\"banashri\"},\"spec\":{\"hard\":{\"cpu\":\"5\",\"memory\":\"10Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"low\"]}]}}}\n"
              },
              "creationTimestamp": "2022-10-14T12:11:39Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "cluster-policy-controller",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T12:11:39Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T12:11:39Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T12:11:39Z"
                }
              ],
              "name": "pods-low",
              "namespace": "banashri",
              "resourceVersion": "42847638",
              "uid": "6b25a537-5c86-4842-9cea-5061d12660de"
            },
            "spec": {
              "hard": {
                "cpu": "5",
                "memory": "10Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "low"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "5",
                "memory": "10Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-medium\",\"namespace\":\"banashri\"},\"spec\":{\"hard\":{\"cpu\":\"10\",\"memory\":\"20Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"medium\"]}]}}}\n"
              },
              "creationTimestamp": "2022-10-14T12:11:39Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "cluster-policy-controller",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T12:11:39Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T12:11:39Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T12:11:39Z"
                }
              ],
              "name": "pods-medium",
              "namespace": "banashri",
              "resourceVersion": "42847634",
              "uid": "cb37874a-449c-406a-99cf-7a495a8c3ab6"
            },
            "spec": {
              "hard": {
                "cpu": "10",
                "memory": "20Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "medium"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "10",
                "memory": "20Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-high\",\"namespace\":\"emoojuo\"},\"spec\":{\"hard\":{\"cpu\":\"1000\",\"memory\":\"200Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"high\"]}]}}}\n"
              },
              "creationTimestamp": "2022-08-03T12:56:38Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "cluster-policy-controller",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-08-03T12:56:38Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-08-03T12:56:38Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-08-03T12:56:38Z"
                }
              ],
              "name": "pods-high",
              "namespace": "emoojuo",
              "resourceVersion": "8404122",
              "uid": "e00d3c1c-4701-41f0-9e38-1e2ed3a08bae"
            },
            "spec": {
              "hard": {
                "cpu": "1k",
                "memory": "200Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "high"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "1k",
                "memory": "200Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-low\",\"namespace\":\"emoojuo\"},\"spec\":{\"hard\":{\"cpu\":\"5\",\"memory\":\"10Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"low\"]}]}}}\n"
              },
              "creationTimestamp": "2022-08-03T12:56:39Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "cluster-policy-controller",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-08-03T12:56:39Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-08-03T12:56:39Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-08-03T12:56:39Z"
                }
              ],
              "name": "pods-low",
              "namespace": "emoojuo",
              "resourceVersion": "8404129",
              "uid": "3fdc599a-04b2-4a1e-b727-ba23dc702f23"
            },
            "spec": {
              "hard": {
                "cpu": "5",
                "memory": "10Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "low"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "5",
                "memory": "10Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-medium\",\"namespace\":\"emoojuo\"},\"spec\":{\"hard\":{\"cpu\":\"10\",\"memory\":\"20Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"medium\"]}]}}}\n"
              },
              "creationTimestamp": "2022-08-03T12:56:39Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-08-03T12:56:39Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-08-03T12:56:39Z"
                }
              ],
              "name": "pods-medium",
              "namespace": "emoojuo",
              "resourceVersion": "8404125",
              "uid": "f2cff736-8230-4a11-8123-ac9943bb48f3"
            },
            "spec": {
              "hard": {
                "cpu": "10",
                "memory": "20Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "medium"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "10",
                "memory": "20Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-high\",\"namespace\":\"greyerof\"},\"spec\":{\"hard\":{\"cpu\":\"1000\",\"memory\":\"200Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"high\"]}]}}}\n"
              },
              "creationTimestamp": "2022-10-21T07:13:56Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-21T07:13:56Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-21T07:13:56Z"
                }
              ],
              "name": "pods-high",
              "namespace": "greyerof",
              "resourceVersion": "46710710",
              "uid": "41786a22-53ef-4e10-8d4b-84c9257a2fcf"
            },
            "spec": {
              "hard": {
                "cpu": "1k",
                "memory": "200Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "high"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "1k",
                "memory": "200Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-low\",\"namespace\":\"greyerof\"},\"spec\":{\"hard\":{\"cpu\":\"5\",\"memory\":\"10Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"low\"]}]}}}\n"
              },
              "creationTimestamp": "2022-10-21T07:13:56Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "cluster-policy-controller",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-21T07:13:56Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-21T07:13:56Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-21T07:13:56Z"
                }
              ],
              "name": "pods-low",
              "namespace": "greyerof",
              "resourceVersion": "46710717",
              "uid": "d20d7295-1616-417f-b009-885397d3faa3"
            },
            "spec": {
              "hard": {
                "cpu": "5",
                "memory": "10Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "low"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "5",
                "memory": "10Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-medium\",\"namespace\":\"greyerof\"},\"spec\":{\"hard\":{\"cpu\":\"10\",\"memory\":\"20Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"medium\"]}]}}}\n"
              },
              "creationTimestamp": "2022-10-21T07:13:56Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-21T07:13:56Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-21T07:13:56Z"
                }
              ],
              "name": "pods-medium",
              "namespace": "greyerof",
              "resourceVersion": "46710712",
              "uid": "8e40491c-4482-4c3e-b651-904c6928d04a"
            },
            "spec": {
              "hard": {
                "cpu": "10",
                "memory": "20Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "medium"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "10",
                "memory": "20Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "creationTimestamp": "2022-07-16T16:40:20Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"bdd657b0-6e65-4857-9351-fb8cbfc8e81f\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:count/daemonsets.apps": {},
                        "f:count/deployments.apps": {},
                        "f:limits.cpu": {},
                        "f:limits.memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "cluster-network-operator",
                  "operation": "Update",
                  "time": "2022-07-16T16:40:20Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:count/daemonsets.apps": {},
                        "f:count/deployments.apps": {},
                        "f:limits.cpu": {},
                        "f:limits.memory": {},
                        "f:pods": {}
                      },
                      "f:used": {
                        ".": {},
                        "f:count/daemonsets.apps": {},
                        "f:count/deployments.apps": {},
                        "f:limits.cpu": {},
                        "f:limits.memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-07-16T16:40:20Z"
                }
              ],
              "name": "host-network-namespace-quotas",
              "namespace": "openshift-host-network",
              "ownerReferences": [
                {
                  "apiVersion": "operator.openshift.io/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "Network",
                  "name": "cluster",
                  "uid": "bdd657b0-6e65-4857-9351-fb8cbfc8e81f"
                }
              ],
              "resourceVersion": "5563",
              "uid": "71b109b7-ba4d-450c-9ef7-af9379380378"
            },
            "spec": {
              "hard": {
                "count/daemonsets.apps": "0",
                "count/deployments.apps": "0",
                "limits.cpu": "0",
                "limits.memory": "0",
                "pods": "0"
              }
            },
            "status": {
              "hard": {
                "count/daemonsets.apps": "0",
                "count/deployments.apps": "0",
                "limits.cpu": "0",
                "limits.memory": "0",
                "pods": "0"
              },
              "used": {
                "count/daemonsets.apps": "0",
                "count/deployments.apps": "0",
                "limits.cpu": "0",
                "limits.memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-high\",\"namespace\":\"tnf\"},\"spec\":{\"hard\":{\"cpu\":\"1000\",\"memory\":\"200Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"high\"]}]}}}\n"
              },
              "creationTimestamp": "2022-10-14T13:31:19Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "cluster-policy-controller",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T13:31:19Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T13:31:19Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T13:31:19Z"
                }
              ],
              "name": "pods-high",
              "namespace": "tnf",
              "resourceVersion": "42880387",
              "uid": "5588722f-b61a-4506-89c2-450d763d4c19"
            },
            "spec": {
              "hard": {
                "cpu": "1k",
                "memory": "200Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "high"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "1k",
                "memory": "200Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-low\",\"namespace\":\"tnf\"},\"spec\":{\"hard\":{\"cpu\":\"5\",\"memory\":\"10Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"low\"]}]}}}\n"
              },
              "creationTimestamp": "2022-10-14T13:31:19Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T13:31:19Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T13:31:19Z"
                }
              ],
              "name": "pods-low",
              "namespace": "tnf",
              "resourceVersion": "42880393",
              "uid": "20033085-f4f6-4d7d-9938-1694fb907947"
            },
            "spec": {
              "hard": {
                "cpu": "5",
                "memory": "10Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "low"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "5",
                "memory": "10Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          },
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ResourceQuota\",\"metadata\":{\"annotations\":{},\"name\":\"pods-medium\",\"namespace\":\"tnf\"},\"spec\":{\"hard\":{\"cpu\":\"10\",\"memory\":\"20Gi\",\"pods\":\"10\"},\"scopeSelector\":{\"matchExpressions\":[{\"operator\":\"In\",\"scopeName\":\"PriorityClass\",\"values\":[\"medium\"]}]}}}\n"
              },
              "creationTimestamp": "2022-10-14T13:31:19Z",
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:used": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      }
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T13:31:19Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:hard": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {},
                        "f:pods": {}
                      },
                      "f:scopeSelector": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T13:31:19Z"
                }
              ],
              "name": "pods-medium",
              "namespace": "tnf",
              "resourceVersion": "42880390",
              "uid": "8735d97d-4159-4cb6-888f-989d0e7b30a6"
            },
            "spec": {
              "hard": {
                "cpu": "10",
                "memory": "20Gi",
                "pods": "10"
              },
              "scopeSelector": {
                "matchExpressions": [
                  {
                    "operator": "In",
                    "scopeName": "PriorityClass",
                    "values": [
                      "medium"
                    ]
                  }
                ]
              }
            },
            "status": {
              "hard": {
                "cpu": "10",
                "memory": "20Gi",
                "pods": "10"
              },
              "used": {
                "cpu": "0",
                "memory": "0",
                "pods": "0"
              }
            }
          }
        ],
        "testContainers": [
          {
            "ContainerImageIdentifier": {
              "digest": "",
              "name": "cnf-test-partner",
              "repository": "testnetworkfunction",
              "tag": "latest"
            },
            "Namespace": "tnf",
            "NodeName": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
            "Podname": "secontextpodcat1uid0",
            "Runtime": "cri-o",
            "Status": {
              "containerID": "cri-o://57277cb314067074d19ef042d655fa7b49da4ffb5c52e45c82ebfcf796683391",
              "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
              "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
              "lastState": {},
              "name": "test",
              "ready": true,
              "restartCount": 0,
              "started": true,
              "state": {
                "running": {
                  "startedAt": "2022-11-09T17:37:35Z"
                }
              }
            },
            "UID": "57277cb314067074d19ef042d655fa7b49da4ffb5c52e45c82ebfcf796683391",
            "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
            "imagePullPolicy": "Always",
            "name": "test",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": {
                "drop": [
                  "KILL",
                  "MKNOD",
                  "SETUID",
                  "SETGID"
                ]
              },
              "privileged": false,
              "readOnlyRootFilesystem": false,
              "runAsNonRoot": true,
              "seLinuxOptions": {
                "level": "s0:c30,c15"
              }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File"
          },
          {
            "ContainerImageIdentifier": {
              "digest": "",
              "name": "cnf-test-partner",
              "repository": "testnetworkfunction",
              "tag": "latest"
            },
            "Namespace": "tnf",
            "NodeName": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
            "Podname": "secontextpodcat3",
            "Runtime": "cri-o",
            "Status": {
              "containerID": "cri-o://dac1a0f191dd328b412d2ed34bb1be2e98ade7ec6588f2e0afb2b0b1e8edf782",
              "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
              "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
              "lastState": {},
              "name": "test",
              "ready": true,
              "restartCount": 0,
              "started": true,
              "state": {
                "running": {
                  "startedAt": "2022-11-09T17:29:53Z"
                }
              }
            },
            "UID": "dac1a0f191dd328b412d2ed34bb1be2e98ade7ec6588f2e0afb2b0b1e8edf782",
            "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
            "imagePullPolicy": "Always",
            "name": "test",
            "resources": {},
            "securityContext": {
              "allowPrivilegeEscalation": false,
              "capabilities": {
                "add": [
                  "NET_ADMIN",
                  "NET_RAW",
                  "IPC_LOCK"
                ],
                "drop": [
                  "KILL",
                  "MKNOD",
                  "SETUID",
                  "SETGID"
                ]
              },
              "privileged": false,
              "readOnlyRootFilesystem": false,
              "seLinuxOptions": {
                "level": "s0:c30,c15"
              }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File"
          },
          {
            "ContainerImageIdentifier": {
              "digest": "",
              "name": "cnf-test-partner",
              "repository": "testnetworkfunction",
              "tag": "latest"
            },
            "Namespace": "tnf",
            "NodeName": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
            "Podname": "test-0",
            "Runtime": "cri-o",
            "Status": {
              "containerID": "cri-o://88ed9f382ecdd9b070064c69abf25d6d3096e612487e5d097e9a4732328dad0a",
              "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
              "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
              "lastState": {},
              "name": "test",
              "ready": true,
              "restartCount": 1,
              "started": true,
              "state": {
                "running": {
                  "startedAt": "2022-11-08T22:27:46Z"
                }
              }
            },
            "UID": "88ed9f382ecdd9b070064c69abf25d6d3096e612487e5d097e9a4732328dad0a",
            "command": [
              "./bin/app"
            ],
            "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {
              "postStart": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "echo Hello from the postStart handler \u003e /tmp/message"
                  ]
                }
              },
              "preStop": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "killall -0 tail"
                  ]
                }
              }
            },
            "livenessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "liveness"
                  }
                ],
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "name": "test",
            "ports": [
              {
                "containerPort": 8080,
                "name": "http-probe",
                "protocol": "TCP"
              }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "readiness"
                  }
                ],
                "path": "/ready",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {
              "limits": {
                "cpu": "250m",
                "memory": "512Mi"
              },
              "requests": {
                "cpu": "250m",
                "memory": "512Mi"
              }
            },
            "securityContext": {
              "capabilities": {
                "drop": [
                  "KILL",
                  "MKNOD",
                  "SETGID",
                  "SETUID"
                ]
              },
              "runAsUser": 1000690000
            },
            "startupProbe": {
              "failureThreshold": 10,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "startup"
                  }
                ],
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError"
          },
          {
            "ContainerImageIdentifier": {
              "digest": "",
              "name": "cnf-test-partner",
              "repository": "testnetworkfunction",
              "tag": "latest"
            },
            "Namespace": "tnf",
            "NodeName": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
            "Podname": "test-1",
            "Runtime": "cri-o",
            "Status": {
              "containerID": "cri-o://dc0875a38a9b1d0c4e30d510c21153dee255ee1bf5e2b18cabb4eacd9353dfcb",
              "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
              "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
              "lastState": {},
              "name": "test",
              "ready": true,
              "restartCount": 1,
              "started": true,
              "state": {
                "running": {
                  "startedAt": "2022-11-08T22:31:42Z"
                }
              }
            },
            "UID": "dc0875a38a9b1d0c4e30d510c21153dee255ee1bf5e2b18cabb4eacd9353dfcb",
            "command": [
              "./bin/app"
            ],
            "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {
              "postStart": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "echo Hello from the postStart handler \u003e /tmp/message"
                  ]
                }
              },
              "preStop": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "killall -0 tail"
                  ]
                }
              }
            },
            "livenessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "liveness"
                  }
                ],
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "name": "test",
            "ports": [
              {
                "containerPort": 8080,
                "name": "http-probe",
                "protocol": "TCP"
              }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "readiness"
                  }
                ],
                "path": "/ready",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {
              "limits": {
                "cpu": "250m",
                "memory": "512Mi"
              },
              "requests": {
                "cpu": "250m",
                "memory": "512Mi"
              }
            },
            "securityContext": {
              "capabilities": {
                "drop": [
                  "KILL",
                  "MKNOD",
                  "SETGID",
                  "SETUID"
                ]
              },
              "runAsUser": 1000690000
            },
            "startupProbe": {
              "failureThreshold": 10,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "startup"
                  }
                ],
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError"
          },
          {
            "ContainerImageIdentifier": {
              "digest": "",
              "name": "cnf-test-partner",
              "repository": "testnetworkfunction",
              "tag": "latest"
            },
            "Namespace": "tnf",
            "NodeName": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
            "Podname": "test-6787875cc7-bsl8s",
            "Runtime": "cri-o",
            "Status": {
              "containerID": "cri-o://d9c6633abe48d07c75c51ba8d09a55a863b8e6b21a214f9cdd6a80f7b8b662f4",
              "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
              "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
              "lastState": {},
              "name": "test",
              "ready": true,
              "restartCount": 0,
              "started": true,
              "state": {
                "running": {
                  "startedAt": "2022-11-09T09:18:53Z"
                }
              }
            },
            "UID": "d9c6633abe48d07c75c51ba8d09a55a863b8e6b21a214f9cdd6a80f7b8b662f4",
            "command": [
              "./bin/app"
            ],
            "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {
              "postStart": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "echo Hello from the postStart handler \u003e /tmp/message"
                  ]
                }
              },
              "preStop": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "killall -0 tail"
                  ]
                }
              }
            },
            "livenessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "liveness"
                  }
                ],
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "name": "test",
            "ports": [
              {
                "containerPort": 8080,
                "name": "http-probe",
                "protocol": "TCP"
              }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "readiness"
                  }
                ],
                "path": "/ready",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {
              "limits": {
                "cpu": "250m",
                "memory": "512Mi"
              },
              "requests": {
                "cpu": "250m",
                "memory": "512Mi"
              }
            },
            "securityContext": {
              "capabilities": {
                "drop": [
                  "KILL",
                  "MKNOD",
                  "SETGID",
                  "SETUID"
                ]
              },
              "runAsUser": 1000690000
            },
            "startupProbe": {
              "failureThreshold": 10,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "startup"
                  }
                ],
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError"
          },
          {
            "ContainerImageIdentifier": {
              "digest": "",
              "name": "cnf-test-partner",
              "repository": "testnetworkfunction",
              "tag": "latest"
            },
            "Namespace": "tnf",
            "NodeName": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
            "Podname": "test-6787875cc7-s4ww6",
            "Runtime": "cri-o",
            "Status": {
              "containerID": "cri-o://217ccbcbab0ef39f40f417a29c4ce28d26891d2d52d51ac66425fb60a8cd27d0",
              "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
              "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
              "lastState": {},
              "name": "test",
              "ready": true,
              "restartCount": 1,
              "started": true,
              "state": {
                "running": {
                  "startedAt": "2022-11-08T22:31:41Z"
                }
              }
            },
            "UID": "217ccbcbab0ef39f40f417a29c4ce28d26891d2d52d51ac66425fb60a8cd27d0",
            "command": [
              "./bin/app"
            ],
            "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
            "imagePullPolicy": "IfNotPresent",
            "lifecycle": {
              "postStart": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "echo Hello from the postStart handler \u003e /tmp/message"
                  ]
                }
              },
              "preStop": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "killall -0 tail"
                  ]
                }
              }
            },
            "livenessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "liveness"
                  }
                ],
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "name": "test",
            "ports": [
              {
                "containerPort": 8080,
                "name": "http-probe",
                "protocol": "TCP"
              }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "readiness"
                  }
                ],
                "path": "/ready",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {
              "limits": {
                "cpu": "250m",
                "memory": "512Mi"
              },
              "requests": {
                "cpu": "250m",
                "memory": "512Mi"
              }
            },
            "securityContext": {
              "capabilities": {
                "drop": [
                  "KILL",
                  "MKNOD",
                  "SETGID",
                  "SETUID"
                ]
              },
              "runAsUser": 1000690000
            },
            "startupProbe": {
              "failureThreshold": 10,
              "httpGet": {
                "httpHeaders": [
                  {
                    "name": "health-check",
                    "value": "startup"
                  }
                ],
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "periodSeconds": 5,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError"
          }
        ],
        "testCrds": [
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{},\"name\":\"crdexamples.test-network-function.com\"},\"spec\":{\"group\":\"test-network-function.com\",\"names\":{\"kind\":\"CrdExample\",\"listKind\":\"CrdExampleList\",\"plural\":\"crdexamples\",\"singular\":\"crdexample\"},\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.owner\",\"name\":\"Owner\",\"type\":\"string\"},{\"jsonPath\":\".spec.replicas\",\"name\":\"Replicas\",\"type\":\"integer\"},{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"spec\":{\"properties\":{\"address\":{\"description\":\"Example address field.\",\"type\":\"string\"},\"owner\":{\"description\":\"The name of the owner of CRD object example.\",\"type\":\"string\"},\"replicas\":{\"description\":\"The number of example instances of the CrdExample CRD.\",\"type\":\"integer\"}},\"type\":\"object\"},\"status\":{\"properties\":{\"replicas\":{\"type\":\"integer\"}},\"type\":\"object\"}},\"type\":\"object\"},\"subresources\":{\"status\":{}}},\"served\":true,\"storage\":true}]}}\n"
              },
              "creationTimestamp": "2022-10-14T13:43:25Z",
              "generation": 1,
              "managedFields": [
                {
                  "apiVersion": "apiextensions.k8s.io/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:acceptedNames": {
                        "f:kind": {},
                        "f:listKind": {},
                        "f:plural": {},
                        "f:singular": {}
                      },
                      "f:conditions": {
                        "k:{\"type\":\"Established\"}": {
                          ".": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"NamesAccepted\"}": {
                          ".": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      }
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T13:43:25Z"
                },
                {
                  "apiVersion": "apiextensions.k8s.io/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:conversion": {
                        ".": {},
                        "f:strategy": {}
                      },
                      "f:group": {},
                      "f:names": {
                        "f:kind": {},
                        "f:listKind": {},
                        "f:plural": {},
                        "f:singular": {}
                      },
                      "f:scope": {},
                      "f:versions": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T13:43:25Z"
                }
              ],
              "name": "crdexamples.test-network-function.com",
              "resourceVersion": "42885364",
              "uid": "753880cd-64bc-4deb-aec1-eccbb971763b"
            },
            "spec": {
              "conversion": {
                "strategy": "None"
              },
              "group": "test-network-function.com",
              "names": {
                "kind": "CrdExample",
                "listKind": "CrdExampleList",
                "plural": "crdexamples",
                "singular": "crdexample"
              },
              "scope": "Namespaced",
              "versions": [
                {
                  "additionalPrinterColumns": [
                    {
                      "jsonPath": ".spec.owner",
                      "name": "Owner",
                      "type": "string"
                    },
                    {
                      "jsonPath": ".spec.replicas",
                      "name": "Replicas",
                      "type": "integer"
                    },
                    {
                      "jsonPath": ".metadata.creationTimestamp",
                      "name": "Age",
                      "type": "date"
                    }
                  ],
                  "name": "v1",
                  "schema": {
                    "openAPIV3Schema": {
                      "properties": {
                        "spec": {
                          "properties": {
                            "address": {
                              "description": "Example address field.",
                              "type": "string"
                            },
                            "owner": {
                              "description": "The name of the owner of CRD object example.",
                              "type": "string"
                            },
                            "replicas": {
                              "description": "The number of example instances of the CrdExample CRD.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "properties": {
                            "replicas": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "served": true,
                  "storage": true
                }
              ]
            },
            "status": {
              "acceptedNames": {
                "kind": "CrdExample",
                "listKind": "CrdExampleList",
                "plural": "crdexamples",
                "singular": "crdexample"
              },
              "conditions": [
                {
                  "lastTransitionTime": "2022-10-14T13:43:25Z",
                  "message": "no conflicts found",
                  "reason": "NoConflicts",
                  "status": "True",
                  "type": "NamesAccepted"
                },
                {
                  "lastTransitionTime": "2022-10-14T13:43:25Z",
                  "message": "the initial names have been accepted",
                  "reason": "InitialNamesAccepted",
                  "status": "True",
                  "type": "Established"
                }
              ],
              "storedVersions": [
                "v1"
              ]
            }
          }
        ],
        "testDeployments": [
          {
            "metadata": {
              "annotations": {
                "deployment.kubernetes.io/revision": "7",
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"test-network-function.com/generic\":\"target\"},\"name\":\"test\",\"namespace\":\"tnf\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"testdp\"}},\"template\":{\"metadata\":{\"annotations\":{\"k8s.v1.cni.cncf.io/networks\":null,\"test-network-function.com/container_tests\":\"[\\\"PRIVILEGED_POD\\\",\\\"PRIVILEGED_ROLE\\\"]\",\"test-network-function.com/defaultnetworkinterface\":\"\\\"eth0\\\"\"},\"labels\":{\"app\":\"testdp\",\"test-network-function.com/container\":\"target\",\"test-network-function.com/generic\":\"target\"},\"name\":\"test\"},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"testdp\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"automountServiceAccountToken\":false,\"containers\":[{\"command\":[\"./bin/app\"],\"image\":\"quay.io/testnetworkfunction/cnf-test-partner:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{\"postStart\":{\"exec\":{\"command\":[\"/bin/sh\",\"-c\",\"echo Hello from the postStart handler \\u003e /tmp/message\"]}},\"preStop\":{\"exec\":{\"command\":[\"/bin/sh\",\"-c\",\"killall -0 tail\"]}}},\"livenessProbe\":{\"httpGet\":{\"httpHeaders\":[{\"name\":\"health-check\",\"value\":\"liveness\"}],\"path\":\"/health\",\"port\":8080},\"initialDelaySeconds\":10,\"periodSeconds\":5},\"name\":\"test\",\"ports\":[{\"containerPort\":8080,\"name\":\"http-probe\"}],\"readinessProbe\":{\"httpGet\":{\"httpHeaders\":[{\"name\":\"health-check\",\"value\":\"readiness\"}],\"path\":\"/ready\",\"port\":8080},\"initialDelaySeconds\":10,\"periodSeconds\":5},\"resources\":{\"limits\":{\"cpu\":0.25,\"memory\":\"512Mi\"}},\"startupProbe\":{\"failureThreshold\":10,\"httpGet\":{\"httpHeaders\":[{\"name\":\"health-check\",\"value\":\"startup\"}],\"path\":\"/health\",\"port\":8080},\"periodSeconds\":5},\"terminationMessagePolicy\":\"FallbackToLogsOnError\"}],\"terminationGracePeriodSeconds\":30}}}}\n"
              },
              "creationTimestamp": "2022-10-14T13:31:21Z",
              "generation": 7,
              "labels": {
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "apps/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:test-network-function.com/generic": {}
                      }
                    },
                    "f:spec": {
                      "f:progressDeadlineSeconds": {},
                      "f:replicas": {},
                      "f:revisionHistoryLimit": {},
                      "f:selector": {},
                      "f:strategy": {
                        "f:rollingUpdate": {
                          ".": {},
                          "f:maxSurge": {},
                          "f:maxUnavailable": {}
                        },
                        "f:type": {}
                      },
                      "f:template": {
                        "f:metadata": {
                          "f:annotations": {
                            ".": {},
                            "f:test-network-function.com/container_tests": {},
                            "f:test-network-function.com/defaultnetworkinterface": {}
                          },
                          "f:labels": {
                            ".": {},
                            "f:app": {},
                            "f:test-network-function.com/container": {},
                            "f:test-network-function.com/generic": {}
                          },
                          "f:name": {}
                        },
                        "f:spec": {
                          "f:affinity": {
                            ".": {},
                            "f:podAntiAffinity": {
                              ".": {},
                              "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                            }
                          },
                          "f:automountServiceAccountToken": {},
                          "f:containers": {
                            "k:{\"name\":\"test\"}": {
                              ".": {},
                              "f:command": {},
                              "f:image": {},
                              "f:imagePullPolicy": {},
                              "f:lifecycle": {
                                ".": {},
                                "f:postStart": {
                                  ".": {},
                                  "f:exec": {
                                    ".": {},
                                    "f:command": {}
                                  }
                                },
                                "f:preStop": {
                                  ".": {},
                                  "f:exec": {
                                    ".": {},
                                    "f:command": {}
                                  }
                                }
                              },
                              "f:livenessProbe": {
                                ".": {},
                                "f:failureThreshold": {},
                                "f:httpGet": {
                                  ".": {},
                                  "f:httpHeaders": {},
                                  "f:path": {},
                                  "f:port": {},
                                  "f:scheme": {}
                                },
                                "f:initialDelaySeconds": {},
                                "f:periodSeconds": {},
                                "f:successThreshold": {},
                                "f:timeoutSeconds": {}
                              },
                              "f:name": {},
                              "f:ports": {
                                ".": {},
                                "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                  ".": {},
                                  "f:containerPort": {},
                                  "f:name": {},
                                  "f:protocol": {}
                                }
                              },
                              "f:readinessProbe": {
                                ".": {},
                                "f:failureThreshold": {},
                                "f:httpGet": {
                                  ".": {},
                                  "f:httpHeaders": {},
                                  "f:path": {},
                                  "f:port": {},
                                  "f:scheme": {}
                                },
                                "f:initialDelaySeconds": {},
                                "f:periodSeconds": {},
                                "f:successThreshold": {},
                                "f:timeoutSeconds": {}
                              },
                              "f:resources": {
                                ".": {},
                                "f:limits": {
                                  ".": {},
                                  "f:cpu": {},
                                  "f:memory": {}
                                }
                              },
                              "f:startupProbe": {
                                ".": {},
                                "f:failureThreshold": {},
                                "f:httpGet": {
                                  ".": {},
                                  "f:httpHeaders": {},
                                  "f:path": {},
                                  "f:port": {},
                                  "f:scheme": {}
                                },
                                "f:periodSeconds": {},
                                "f:successThreshold": {},
                                "f:timeoutSeconds": {}
                              },
                              "f:terminationMessagePath": {},
                              "f:terminationMessagePolicy": {}
                            }
                          },
                          "f:dnsPolicy": {},
                          "f:restartPolicy": {},
                          "f:schedulerName": {},
                          "f:securityContext": {},
                          "f:terminationGracePeriodSeconds": {}
                        }
                      }
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T14:05:11Z"
                },
                {
                  "apiVersion": "apps/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:deployment.kubernetes.io/revision": {}
                      }
                    },
                    "f:status": {
                      "f:availableReplicas": {},
                      "f:conditions": {
                        ".": {},
                        "k:{\"type\":\"Available\"}": {
                          ".": {},
                          "f:lastTransitionTime": {},
                          "f:lastUpdateTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Progressing\"}": {
                          ".": {},
                          "f:lastTransitionTime": {},
                          "f:lastUpdateTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:observedGeneration": {},
                      "f:readyReplicas": {},
                      "f:replicas": {},
                      "f:updatedReplicas": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T09:19:07Z"
                }
              ],
              "name": "test",
              "namespace": "tnf",
              "resourceVersion": "57579510",
              "uid": "67a73a5b-d21d-4092-81cf-a3afa7abe24e"
            },
            "spec": {
              "progressDeadlineSeconds": 600,
              "replicas": 2,
              "revisionHistoryLimit": 10,
              "selector": {
                "matchLabels": {
                  "app": "testdp"
                }
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": "25%",
                  "maxUnavailable": "25%"
                },
                "type": "RollingUpdate"
              },
              "template": {
                "metadata": {
                  "annotations": {
                    "test-network-function.com/container_tests": "[\"PRIVILEGED_POD\",\"PRIVILEGED_ROLE\"]",
                    "test-network-function.com/defaultnetworkinterface": "\"eth0\""
                  },
                  "creationTimestamp": null,
                  "labels": {
                    "app": "testdp",
                    "test-network-function.com/container": "target",
                    "test-network-function.com/generic": "target"
                  },
                  "name": "test"
                },
                "spec": {
                  "affinity": {
                    "podAntiAffinity": {
                      "requiredDuringSchedulingIgnoredDuringExecution": [
                        {
                          "labelSelector": {
                            "matchExpressions": [
                              {
                                "key": "app",
                                "operator": "In",
                                "values": [
                                  "testdp"
                                ]
                              }
                            ]
                          },
                          "topologyKey": "kubernetes.io/hostname"
                        }
                      ]
                    }
                  },
                  "automountServiceAccountToken": false,
                  "containers": [
                    {
                      "command": [
                        "./bin/app"
                      ],
                      "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                      "imagePullPolicy": "IfNotPresent",
                      "lifecycle": {
                        "postStart": {
                          "exec": {
                            "command": [
                              "/bin/sh",
                              "-c",
                              "echo Hello from the postStart handler \u003e /tmp/message"
                            ]
                          }
                        },
                        "preStop": {
                          "exec": {
                            "command": [
                              "/bin/sh",
                              "-c",
                              "killall -0 tail"
                            ]
                          }
                        }
                      },
                      "livenessProbe": {
                        "failureThreshold": 3,
                        "httpGet": {
                          "httpHeaders": [
                            {
                              "name": "health-check",
                              "value": "liveness"
                            }
                          ],
                          "path": "/health",
                          "port": 8080,
                          "scheme": "HTTP"
                        },
                        "initialDelaySeconds": 10,
                        "periodSeconds": 5,
                        "successThreshold": 1,
                        "timeoutSeconds": 1
                      },
                      "name": "test",
                      "ports": [
                        {
                          "containerPort": 8080,
                          "name": "http-probe",
                          "protocol": "TCP"
                        }
                      ],
                      "readinessProbe": {
                        "failureThreshold": 3,
                        "httpGet": {
                          "httpHeaders": [
                            {
                              "name": "health-check",
                              "value": "readiness"
                            }
                          ],
                          "path": "/ready",
                          "port": 8080,
                          "scheme": "HTTP"
                        },
                        "initialDelaySeconds": 10,
                        "periodSeconds": 5,
                        "successThreshold": 1,
                        "timeoutSeconds": 1
                      },
                      "resources": {
                        "limits": {
                          "cpu": "250m",
                          "memory": "512Mi"
                        }
                      },
                      "startupProbe": {
                        "failureThreshold": 10,
                        "httpGet": {
                          "httpHeaders": [
                            {
                              "name": "health-check",
                              "value": "startup"
                            }
                          ],
                          "path": "/health",
                          "port": 8080,
                          "scheme": "HTTP"
                        },
                        "periodSeconds": 5,
                        "successThreshold": 1,
                        "timeoutSeconds": 1
                      },
                      "terminationMessagePath": "/dev/termination-log",
                      "terminationMessagePolicy": "FallbackToLogsOnError"
                    }
                  ],
                  "dnsPolicy": "ClusterFirst",
                  "restartPolicy": "Always",
                  "schedulerName": "default-scheduler",
                  "securityContext": {},
                  "terminationGracePeriodSeconds": 30
                }
              }
            },
            "status": {
              "availableReplicas": 2,
              "conditions": [
                {
                  "lastTransitionTime": "2022-10-14T13:42:18Z",
                  "lastUpdateTime": "2022-10-14T14:13:25Z",
                  "message": "ReplicaSet \"test-6787875cc7\" has successfully progressed.",
                  "reason": "NewReplicaSetAvailable",
                  "status": "True",
                  "type": "Progressing"
                },
                {
                  "lastTransitionTime": "2022-11-09T09:19:07Z",
                  "lastUpdateTime": "2022-11-09T09:19:07Z",
                  "message": "Deployment has minimum availability.",
                  "reason": "MinimumReplicasAvailable",
                  "status": "True",
                  "type": "Available"
                }
              ],
              "observedGeneration": 7,
              "readyReplicas": 2,
              "replicas": 2,
              "updatedReplicas": 2
            }
          }
        ],
        "testHelmChartReleases": null,
        "testHorizontalScaler": {
          "tnftest": {
            "metadata": {
              "annotations": {
                "autoscaling.alpha.kubernetes.io/conditions": "[{\"type\":\"AbleToScale\",\"status\":\"True\",\"lastTransitionTime\":\"2022-10-14T13:43:37Z\",\"reason\":\"ReadyForNewScale\",\"message\":\"recommended size matches current size\"},{\"type\":\"ScalingActive\",\"status\":\"True\",\"lastTransitionTime\":\"2022-11-08T22:33:25Z\",\"reason\":\"ValidMetricFound\",\"message\":\"the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request)\"},{\"type\":\"ScalingLimited\",\"status\":\"True\",\"lastTransitionTime\":\"2022-11-08T22:38:26Z\",\"reason\":\"TooFewReplicas\",\"message\":\"the desired replica count is less than the minimum replica count\"}]",
                "autoscaling.alpha.kubernetes.io/current-metrics": "[{\"type\":\"Resource\",\"resource\":{\"name\":\"cpu\",\"currentAverageUtilization\":0,\"currentAverageValue\":\"0\"}}]"
              },
              "creationTimestamp": "2022-10-14T13:43:22Z",
              "managedFields": [
                {
                  "apiVersion": "autoscaling/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:spec": {
                      "f:scaleTargetRef": {},
                      "f:targetCPUUtilizationPercentage": {}
                    }
                  },
                  "manager": "kubectl-autoscale",
                  "operation": "Update",
                  "time": "2022-10-14T13:43:22Z"
                },
                {
                  "apiVersion": "autoscaling/v2",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        ".": {},
                        "k:{\"type\":\"AbleToScale\"}": {
                          ".": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"ScalingActive\"}": {
                          ".": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"ScalingLimited\"}": {
                          ".": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:currentMetrics": {},
                      "f:currentReplicas": {},
                      "f:desiredReplicas": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-14T13:47:53Z"
                },
                {
                  "apiVersion": "autoscaling/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:spec": {
                      "f:maxReplicas": {},
                      "f:minReplicas": {}
                    }
                  },
                  "manager": "__debug_bin",
                  "operation": "Update",
                  "time": "2022-10-24T22:32:46Z"
                }
              ],
              "name": "test",
              "namespace": "tnf",
              "resourceVersion": "57315167",
              "uid": "da292ba6-435c-44d9-91be-abea8f5bde34"
            },
            "spec": {
              "maxReplicas": 3,
              "minReplicas": 2,
              "scaleTargetRef": {
                "apiVersion": "apps/v1",
                "kind": "StatefulSet",
                "name": "test"
              },
              "targetCPUUtilizationPercentage": 50
            },
            "status": {
              "currentCPUUtilizationPercentage": 0,
              "currentReplicas": 2,
              "desiredReplicas": 2
            }
          }
        },
        "testNamespaces": [
          "tnf"
        ],
        "testOperators": [
          {
            "channel": "alpha",
            "csv": {
              "apiVersion": "operators.coreos.com/v1alpha1",
              "kind": "ClusterServiceVersion",
              "metadata": {
                "annotations": {
                  "alm-examples": "[\n  {\n    \"apiVersion\": \"hazelcast.com/v1alpha1\",\n    \"kind\": \"Hazelcast\",\n    \"metadata\": {\n      \"name\": \"hazelcast\"\n    },\n    \"spec\": {\n      \"clusterSize\": 3,\n      \"licenseKeySecret\": \"hazelcast-license-key\",\n      \"repository\": \"docker.io/hazelcast/hazelcast-enterprise\",\n      \"version\": \"5.1.3\"\n    }\n  },\n  {\n    \"apiVersion\": \"hazelcast.com/v1alpha1\",\n    \"kind\": \"ManagementCenter\",\n    \"metadata\": {\n      \"name\": \"managementcenter\"\n    },\n    \"spec\": {\n      \"externalConnectivity\": {\n        \"type\": \"LoadBalancer\"\n      },\n      \"hazelcastClusters\": [\n        {\n          \"address\": \"hazelcast\",\n          \"name\": \"dev\"\n        }\n      ],\n      \"licenseKeySecret\": \"hazelcast-license-key\",\n      \"persistence\": {\n        \"enabled\": true,\n        \"size\": \"10Gi\"\n      },\n      \"repository\": \"hazelcast/management-center\",\n      \"version\": \"5.1.4\"\n    }\n  },\n  {\n    \"apiVersion\": \"hazelcast.com/v1alpha1\",\n    \"kind\": \"Map\",\n    \"metadata\": {\n      \"name\": \"map\"\n    },\n    \"spec\": {\n      \"hazelcastResourceName\": \"hazelcast\"\n    }\n  },\n  {\n    \"apiVersion\": \"hazelcast.com/v1alpha1\",\n    \"kind\": \"WanReplication\",\n    \"metadata\": {\n      \"name\": \"wanreplication-sample\"\n    },\n    \"spec\": {\n      \"endpoints\": \"35.192.33.252\",\n      \"mapResourceName\": \"map\",\n      \"targetClusterName\": \"dev\"\n    }\n  }\n]",
                  "capabilities": "Seamless Upgrades",
                  "categories": "Database",
                  "containerImage": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
                  "createdAt": "2022-09-05T11:59:59Z",
                  "description": "Install Hazelcast clusters in Kubernetes environments.",
                  "olm.operatorGroup": "test-group",
                  "olm.operatorNamespace": "tnf",
                  "olm.targetNamespaces": "tnf",
                  "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"hazelcast.com\",\"kind\":\"ManagementCenter\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"hazelcast.com\",\"kind\":\"Map\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"hazelcast-platform-operator\",\"version\":\"5.4.0\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"hazelcast.com\",\"kind\":\"WanReplication\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"hazelcast.com\",\"kind\":\"Hazelcast\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"hazelcast.com\",\"kind\":\"HotBackup\",\"version\":\"v1alpha1\"}}]}",
                  "operators.operatorframework.io/builder": "operator-sdk-v1.13.0+git",
                  "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                  "support": "Hazelcast, Inc",
                  "test-network-function.com/subscription_name": "[\"test-subscription\"]"
                },
                "creationTimestamp": "2022-10-14T13:43:38Z",
                "generation": 1,
                "labels": {
                  "operators.coreos.com/hazelcast-platform-operator.tnf": "",
                  "test-network-function.com/operator": "target"
                },
                "managedFields": [
                  {
                    "apiVersion": "operators.coreos.com/v1alpha1",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                      "f:metadata": {
                        "f:annotations": {
                          ".": {},
                          "f:alm-examples": {},
                          "f:capabilities": {},
                          "f:categories": {},
                          "f:containerImage": {},
                          "f:createdAt": {},
                          "f:description": {},
                          "f:operatorframework.io/properties": {},
                          "f:operators.operatorframework.io/builder": {},
                          "f:operators.operatorframework.io/project_layout": {},
                          "f:support": {}
                        }
                      },
                      "f:spec": {
                        ".": {},
                        "f:apiservicedefinitions": {},
                        "f:cleanup": {
                          ".": {},
                          "f:enabled": {}
                        },
                        "f:customresourcedefinitions": {
                          ".": {},
                          "f:owned": {}
                        },
                        "f:description": {},
                        "f:displayName": {},
                        "f:icon": {},
                        "f:install": {
                          ".": {},
                          "f:spec": {
                            ".": {},
                            "f:clusterPermissions": {},
                            "f:deployments": {},
                            "f:permissions": {}
                          },
                          "f:strategy": {}
                        },
                        "f:installModes": {},
                        "f:keywords": {},
                        "f:links": {},
                        "f:maintainers": {},
                        "f:maturity": {},
                        "f:minKubeVersion": {},
                        "f:provider": {
                          ".": {},
                          "f:name": {}
                        },
                        "f:relatedImages": {},
                        "f:version": {}
                      }
                    },
                    "manager": "catalog",
                    "operation": "Update",
                    "time": "2022-10-14T13:43:38Z"
                  },
                  {
                    "apiVersion": "operators.coreos.com/v1alpha1",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                      "f:status": {
                        ".": {},
                        "f:cleanup": {},
                        "f:conditions": {},
                        "f:lastTransitionTime": {},
                        "f:lastUpdateTime": {},
                        "f:message": {},
                        "f:phase": {},
                        "f:reason": {},
                        "f:requirementStatus": {}
                      }
                    },
                    "manager": "olm",
                    "operation": "Update",
                    "subresource": "status",
                    "time": "2022-10-14T13:43:38Z"
                  },
                  {
                    "apiVersion": "operators.coreos.com/v1alpha1",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                      "f:metadata": {
                        "f:annotations": {
                          "f:olm.operatorGroup": {},
                          "f:olm.operatorNamespace": {},
                          "f:olm.targetNamespaces": {}
                        },
                        "f:labels": {
                          ".": {},
                          "f:operators.coreos.com/hazelcast-platform-operator.tnf": {}
                        }
                      }
                    },
                    "manager": "olm",
                    "operation": "Update",
                    "time": "2022-10-14T13:43:39Z"
                  },
                  {
                    "apiVersion": "operators.coreos.com/v1alpha1",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                      "f:metadata": {
                        "f:labels": {
                          "f:test-network-function.com/operator": {}
                        }
                      }
                    },
                    "manager": "kubectl-label",
                    "operation": "Update",
                    "time": "2022-10-14T13:44:09Z"
                  },
                  {
                    "apiVersion": "operators.coreos.com/v1alpha1",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                      "f:metadata": {
                        "f:annotations": {
                          "f:test-network-function.com/subscription_name": {}
                        }
                      }
                    },
                    "manager": "kubectl-annotate",
                    "operation": "Update",
                    "time": "2022-10-14T13:44:10Z"
                  }
                ],
                "name": "hazelcast-platform-operator.v5.4.0",
                "namespace": "tnf",
                "resourceVersion": "57307839",
                "uid": "9caf59ee-2088-4deb-87dc-937078bd8726"
              },
              "spec": {
                "apiservicedefinitions": {},
                "cleanup": {
                  "enabled": false
                },
                "customresourcedefinitions": {
                  "owned": [
                    {
                      "description": "Hazelcast is the Schema for the hazelcasts API",
                      "displayName": "Hazelcast",
                      "kind": "Hazelcast",
                      "name": "hazelcasts.hazelcast.com",
                      "version": "v1alpha1"
                    },
                    {
                      "kind": "HotBackup",
                      "name": "hotbackups.hazelcast.com",
                      "version": "v1alpha1"
                    },
                    {
                      "description": "ManagementCenter is the Schema for the managementcenters API",
                      "displayName": "Management Center",
                      "kind": "ManagementCenter",
                      "name": "managementcenters.hazelcast.com",
                      "version": "v1alpha1"
                    },
                    {
                      "description": "Map is the Schema for the maps API",
                      "displayName": "Map",
                      "kind": "Map",
                      "name": "maps.hazelcast.com",
                      "version": "v1alpha1"
                    },
                    {
                      "description": "WanReplication is the Schema for the wanreplications API",
                      "displayName": "Wan Replication",
                      "kind": "WanReplication",
                      "name": "wanreplications.hazelcast.com",
                      "version": "v1alpha1"
                    }
                  ]
                },
                "description": "# Hazelcast Platform Operator #\n\nEasily deploy Hazelcast clusters and Management Center into Kubernetes environments and manage their lifecycles.\n\n## Before You Start\n\nIf you are planning to create Hazelcast Platform Enterprise clusters, you need to [create a secret](https://docs.hazelcast.com/operator/latest/get-started#step-2-start-the-hazelcast-cluster) for the license. You can request a trial license key from [here](https://trialrequest.hazelcast.com).\n\nFor Hazelcast Platform clusters, you can simply continue.\n\n## Documentation\n\n1. [Get started](https://docs.hazelcast.com/operator/latest/get-started) with the Operator.\n2. [Connect to the cluster from outside Kubernetes](https://guides.hazelcast.org/hazelcast-platform-operator-expose-externally/main)\n  from the outside.\n\n## Features\n\nHazelcast Platform Operator supports the features below:\n\n* Custom resource for Hazelcast Platform (Open Source \u0026 Enterprise) and Management Center\n* Observe status of Hazelcast and Management Center clusters\n* Scale up and down Hazelcast clusters\n* Expose Hazelcast cluster to external\n  clients ([Smart \u0026 Unisocket](https://docs.hazelcast.com/hazelcast/latest/clients/java#java-client-operation-modes))\n",
                "displayName": "Hazelcast Platform Operator",
                "icon": [
                  {
                    "base64data": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAABCcAAAQnAEmzTo0AAAHQ0lEQVR4nO3dgXHbRhAFUDiTAtSBnA6SDuwK0kLcQVxBJhUkHdguwRVYHVgdJOzAHSQjQpQEmqQE7AFY3L03owlHkukNd88kyAN+V9Ru92X/BWuYYf5+LPy/8brw/cEYxefPAqEmxefvh2L3tNv9fPI2LGGm+Su3QLruzZnbsIRZ5q/kAvn1zG1Ywizz96rIvex2d6/9/jn67k/d9fW/Re4fVpq/Us8gf7zwezCH2eYv/gxyevUeeBZhXjPPX4lnkA8TfwYlzDp/sQWy2/3+zDsGb+5/B8pbYP6mv8Tq32v++sLf/qW7vr6d/HfBSvM37RmkL27MnpcvPjykmAXnb/wzyGNxVyP/5Leu6956JiFk4fkbt0CmF3dgkTDdCvP38pdY/cHO10Bx3f2f/erAndFWmr/nn0H695k/lNzfcu+m67p3PifhopXn7/wC6Qu7+zTyt8KFHfvYdd2fFgoDSeZvuED613hv7jd7Lb0j925Ff97/1zFKmxLO36v7UxRfJzzZ6d/91/X12wS1MJfk81dyuztUx0ss8kj5EuscB+msKeVB+ine5mVNad/mPdZ/uPJXoeLed9fXfxe6L1qw0vzZasJ2rDB/NiuyLak3Kx6ML9LioJwF588JU2xT6hOm7vR/4fsX/OZ7i4PiFpq/Elc1+XLhLbgbW0WY1czzV2KrybuJP4MSZp2/+ALpP2j5eOInH30IyOxmnj+XHmX70l96tC/k5sl3biwOFjPj/JXc7v75zG1YwizzV3KB3Jy5DUvYwPztdv/tv6CS+SudUei4gzUVnz8LhJoUn7+2zkmX4x7T4OPXWgy0mOqY5vprgVDT4ycnfTI57jGN9relnHQ57jFN9relnHQ57jFN9reNzYo2U8Y03N9WctLluMc029/6c9LluMc03t8WctLluMc03d+6c9LluMfob8WX/XFZohj93aszJ12Oe4z+Pqjv0qMujRqjvwN1XbzaxbVj9Pc79eSky3GP0d+Tth+gI+AnRn8rzUkXERejvwcV5aQLGY3R39H15c9J78lxn0p/p5KTDs/xEqtkfdnp7+j6HKQ/z0F6TEUH6ad4G9DbvNNU/jbvsew56XLcY/T3JFtNhmw10d8BmxUf2azY6e+xOnPS5bjH6O8DJ0z1nDB1TH/36s1Jl+Meo7979eeky3GPaby/LeSky3GPabq/9eeky3GPaby/Lj3K9h8/OelBctxjttffWznp48lxj9lSfz+VutOWctLluMfob1j2nHQ57jEN9re1GGjHHTG3wcvuzE1OepAFEvPt/isrOelVk+OejhjoXF4n/xdaTnqQBRKjvhg56ZOpL0ZOepic9Bj1xchJD1JfjJz0yWxWjFFfjJz0MPXFyEmfTE56jPpi5KSHqS9GTvpkcrRj1BcjJz1AfTHq25OT3lPfU+p74NKjj9TXqe+Yi1cPqU99A3LSh9SnvgEBOuepL0ZOeiF1RrCp70BOeiHbD/FUX3X1yUmfTn0xctJh67zEUp/6LtTnIP156ouRkz6Rtylj1BcjJz1AfTFy0icWZquE+qaTk16A+mLUNyAnvae+p9T3wAlTPfUdU9+enHT1naa+PTnp6rtMTnqYnPQY9cXISQ9RX4yc9AJcOjNGfTFy0oPUF9NwfXLS81BfzCz1yUnPQ30xctLD1BcjJz1MDHRM9vrkpAcZwJjs9TWXk156gRDzkq0TLEgMdCZr7Lka5yr5Syw56UHZ68suX/zzkJz0ybLXl52c9DA533WTkx4k57tuctIns9mubjYrhsn5rpuc9MnkfNdNTnqYnO+6yUmfTI523fTXZX/uLV9fdvq7Jye9t2x92envA5cefbTs1Quz0t8BF68eanuR6O935KQPzVdfdvp7kgCd88rUl53+ykkPmlZfdvp7ICd9sfqy09/R9R1y0q8Sngxz++T857z1rX3x5ufo71T7+g4H6RlPo7w6czuLzKeeHtPf8fY1eYlVsr7s9Hd0fQ7Sn+cgPUZO+kTe5s1Af+WkT1C+vuz09yRbTYZsNdHfAZsVH9ms2OnvMTnpPYvjKf194ISpnhOmjunvnpz0terLTn/35KRn3yqyNjnpYXK+6yYnPUTOd93kpBfg0qN1c+nRIDnfddtef2/lpI+Xvb7sttTfT6XuVE46tTx+ctLDsteXnZz0MDHLdZOTHmSB1E1OeuXkkMc09/i1FQNtz1VM/sdPTjpcICcdlpy/lnLSqZucdFh6/trYrEjd5KTDOvNXf046dZOTDuvNX9056dRNTjqsO3915qRTNznpkGP+6rp4NXWTkw655m/7ATrUTU56pRFnxMhJ/872QzKJkZM+yjZyyIlJPn9byUmnbnLSX8BLrNbJST/JQTrfk5PubV5eQE465J0/W03YDjnpkGv+6sxJp25y0iHH/NWbk07d5KTD+vPXQk46dZOTDmvNn0uPsn1y0mHU/MlJhwvzJycdtjd/cshZk5x0uEhOOlxQdv66rvsfiJAAx8qfoToAAAAASUVORK5CYII=",
                    "mediatype": "image/png"
                  }
                ],
                "install": {
                  "spec": {
                    "clusterPermissions": [
                      {
                        "rules": [
                          {
                            "apiGroups": [
                              ""
                            ],
                            "resources": [
                              "endpoints",
                              "nodes",
                              "pods",
                              "secrets",
                              "services"
                            ],
                            "verbs": [
                              "get",
                              "list"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "maps"
                            ],
                            "verbs": [
                              "create",
                              "delete",
                              "get",
                              "list",
                              "patch",
                              "update",
                              "watch"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "maps/finalizers"
                            ],
                            "verbs": [
                              "update"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "maps/status"
                            ],
                            "verbs": [
                              "get",
                              "patch",
                              "update"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "wanreplications"
                            ],
                            "verbs": [
                              "create",
                              "delete",
                              "get",
                              "list",
                              "patch",
                              "update",
                              "watch"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "wanreplications/finalizers"
                            ],
                            "verbs": [
                              "update"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "wanreplications/status"
                            ],
                            "verbs": [
                              "get",
                              "patch",
                              "update"
                            ]
                          },
                          {
                            "apiGroups": [
                              "rbac.authorization.k8s.io"
                            ],
                            "resources": [
                              "clusterrolebindings",
                              "clusterroles"
                            ],
                            "verbs": [
                              "create",
                              "delete",
                              "get",
                              "list",
                              "patch",
                              "update",
                              "watch"
                            ]
                          },
                          {
                            "apiGroups": [
                              "security.openshift.io"
                            ],
                            "resources": [
                              "securitycontextconstraints"
                            ],
                            "verbs": [
                              "use"
                            ]
                          }
                        ],
                        "serviceAccountName": "hazelcast-platform-controller-manager"
                      }
                    ],
                    "deployments": [
                      {
                        "name": "hazelcast-platform-controller-manager",
                        "spec": {
                          "replicas": 1,
                          "selector": {
                            "matchLabels": {
                              "control-plane": "controller-manager"
                            }
                          },
                          "strategy": {},
                          "template": {
                            "metadata": {
                              "creationTimestamp": null,
                              "labels": {
                                "control-plane": "controller-manager"
                              }
                            },
                            "spec": {
                              "containers": [
                                {
                                  "args": [
                                    "--leader-elect=false"
                                  ],
                                  "command": [
                                    "/manager"
                                  ],
                                  "env": [
                                    {
                                      "name": "WATCH_NAMESPACE",
                                      "valueFrom": {
                                        "fieldRef": {
                                          "fieldPath": "metadata.annotations['olm.targetNamespaces']"
                                        }
                                      }
                                    },
                                    {
                                      "name": "NAMESPACE",
                                      "valueFrom": {
                                        "fieldRef": {
                                          "fieldPath": "metadata.namespace"
                                        }
                                      }
                                    },
                                    {
                                      "name": "POD_NAME",
                                      "valueFrom": {
                                        "fieldRef": {
                                          "fieldPath": "metadata.name"
                                        }
                                      }
                                    }
                                  ],
                                  "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
                                  "imagePullPolicy": "Always",
                                  "livenessProbe": {
                                    "httpGet": {
                                      "path": "/healthz",
                                      "port": 8081
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 20
                                  },
                                  "name": "manager",
                                  "readinessProbe": {
                                    "httpGet": {
                                      "path": "/readyz",
                                      "port": 8081
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10
                                  },
                                  "resources": {
                                    "limits": {
                                      "cpu": "200m",
                                      "memory": "300Mi"
                                    },
                                    "requests": {
                                      "cpu": "100m",
                                      "memory": "100Mi"
                                    }
                                  },
                                  "securityContext": {
                                    "allowPrivilegeEscalation": false
                                  }
                                }
                              ],
                              "serviceAccountName": "hazelcast-platform-controller-manager",
                              "terminationGracePeriodSeconds": 10
                            }
                          }
                        }
                      }
                    ],
                    "permissions": [
                      {
                        "rules": [
                          {
                            "apiGroups": [
                              ""
                            ],
                            "resources": [
                              "configmaps",
                              "events",
                              "pods",
                              "serviceaccounts",
                              "services"
                            ],
                            "verbs": [
                              "create",
                              "delete",
                              "get",
                              "list",
                              "patch",
                              "update",
                              "watch"
                            ]
                          },
                          {
                            "apiGroups": [
                              ""
                            ],
                            "resources": [
                              "events",
                              "pods",
                              "serviceaccounts",
                              "services"
                            ],
                            "verbs": [
                              "create",
                              "delete",
                              "get",
                              "list",
                              "patch",
                              "update",
                              "watch"
                            ]
                          },
                          {
                            "apiGroups": [
                              ""
                            ],
                            "resources": [
                              "secrets"
                            ],
                            "verbs": [
                              "get",
                              "watch"
                            ]
                          },
                          {
                            "apiGroups": [
                              "apps"
                            ],
                            "resources": [
                              "deployments"
                            ],
                            "verbs": [
                              "get"
                            ]
                          },
                          {
                            "apiGroups": [
                              "apps"
                            ],
                            "resources": [
                              "statefulsets"
                            ],
                            "verbs": [
                              "create",
                              "delete",
                              "get",
                              "list",
                              "patch",
                              "update",
                              "watch"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "hazelcasts"
                            ],
                            "verbs": [
                              "create",
                              "delete",
                              "get",
                              "list",
                              "patch",
                              "update",
                              "watch"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "hazelcasts/finalizers"
                            ],
                            "verbs": [
                              "update"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "hazelcasts/status"
                            ],
                            "verbs": [
                              "get",
                              "patch",
                              "update"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "hotbackups"
                            ],
                            "verbs": [
                              "create",
                              "delete",
                              "get",
                              "list",
                              "patch",
                              "update",
                              "watch"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "hotbackups/finalizers"
                            ],
                            "verbs": [
                              "update"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "hotbackups/status"
                            ],
                            "verbs": [
                              "get",
                              "patch",
                              "update"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "managementcenters"
                            ],
                            "verbs": [
                              "create",
                              "delete",
                              "get",
                              "list",
                              "patch",
                              "update",
                              "watch"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "managementcenters/finalizers"
                            ],
                            "verbs": [
                              "update"
                            ]
                          },
                          {
                            "apiGroups": [
                              "hazelcast.com"
                            ],
                            "resources": [
                              "managementcenters/status"
                            ],
                            "verbs": [
                              "get",
                              "patch",
                              "update"
                            ]
                          },
                          {
                            "apiGroups": [
                              "rbac.authorization.k8s.io"
                            ],
                            "resources": [
                              "rolebindings",
                              "roles"
                            ],
                            "verbs": [
                              "create",
                              "delete",
                              "get",
                              "list",
                              "patch",
                              "update",
                              "watch"
                            ]
                          }
                        ],
                        "serviceAccountName": "hazelcast-platform-controller-manager"
                      }
                    ]
                  },
                  "strategy": "deployment"
                },
                "installModes": [
                  {
                    "supported": true,
                    "type": "OwnNamespace"
                  },
                  {
                    "supported": false,
                    "type": "SingleNamespace"
                  },
                  {
                    "supported": false,
                    "type": "MultiNamespace"
                  },
                  {
                    "supported": false,
                    "type": "AllNamespaces"
                  }
                ],
                "keywords": [
                  "hazelcast",
                  "keyvalue",
                  "in-memory",
                  "database",
                  "caching"
                ],
                "links": [
                  {
                    "name": "Documentation",
                    "url": "https://docs.hazelcast.com/operator/latest/"
                  },
                  {
                    "name": "Source Code",
                    "url": "https://github.com/hazelcast/hazelcast-platform-operator"
                  }
                ],
                "maintainers": [
                  {
                    "email": "cloudnative@hazelcast.com",
                    "name": "Hazelcast Cloud Native Team"
                  }
                ],
                "maturity": "alpha",
                "minKubeVersion": "1.16.0",
                "provider": {
                  "name": "Hazelcast, Inc"
                },
                "relatedImages": [
                  {
                    "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
                    "name": "hazelcast-platform-operator-d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab-annotation"
                  },
                  {
                    "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
                    "name": "manager"
                  }
                ],
                "version": "5.4.0"
              },
              "status": {
                "cleanup": {},
                "conditions": [
                  {
                    "lastTransitionTime": "2022-10-14T13:43:38Z",
                    "lastUpdateTime": "2022-10-14T13:43:38Z",
                    "message": "requirements not yet checked",
                    "phase": "Pending",
                    "reason": "RequirementsUnknown"
                  },
                  {
                    "lastTransitionTime": "2022-10-14T13:43:38Z",
                    "lastUpdateTime": "2022-10-14T13:43:38Z",
                    "message": "one or more requirements couldn't be found",
                    "phase": "Pending",
                    "reason": "RequirementsNotMet"
                  },
                  {
                    "lastTransitionTime": "2022-10-14T13:43:40Z",
                    "lastUpdateTime": "2022-10-14T13:43:40Z",
                    "message": "all requirements found, attempting install",
                    "phase": "InstallReady",
                    "reason": "AllRequirementsMet"
                  },
                  {
                    "lastTransitionTime": "2022-10-14T13:43:41Z",
                    "lastUpdateTime": "2022-10-14T13:43:41Z",
                    "message": "waiting for install components to report healthy",
                    "phase": "Installing",
                    "reason": "InstallSucceeded"
                  },
                  {
                    "lastTransitionTime": "2022-10-14T13:43:41Z",
                    "lastUpdateTime": "2022-10-14T13:43:41Z",
                    "message": "installing: waiting for deployment hazelcast-platform-controller-manager to become ready: waiting for spec update of deployment \"hazelcast-platform-controller-manager\" to be observed...",
                    "phase": "Installing",
                    "reason": "InstallWaiting"
                  },
                  {
                    "lastTransitionTime": "2022-10-14T13:44:01Z",
                    "lastUpdateTime": "2022-10-14T13:44:01Z",
                    "message": "install strategy completed with no errors",
                    "phase": "Succeeded",
                    "reason": "InstallSucceeded"
                  },
                  {
                    "lastTransitionTime": "2022-10-14T13:44:10Z",
                    "lastUpdateTime": "2022-10-14T13:44:10Z",
                    "message": "installing: annotations on deployment does not contain expected key: test-network-function.com/subscription_name",
                    "phase": "InstallReady",
                    "reason": "ComponentUnhealthy"
                  },
                  {
                    "lastTransitionTime": "2022-10-14T13:44:10Z",
                    "lastUpdateTime": "2022-10-14T13:44:10Z",
                    "message": "waiting for install components to report healthy",
                    "phase": "Installing",
                    "reason": "InstallSucceeded"
                  },
                  {
                    "lastTransitionTime": "2022-10-14T13:44:10Z",
                    "lastUpdateTime": "2022-10-14T13:44:10Z",
                    "message": "installing: waiting for deployment hazelcast-platform-controller-manager to become ready: waiting for spec update of deployment \"hazelcast-platform-controller-manager\" to be observed...",
                    "phase": "Installing",
                    "reason": "InstallWaiting"
                  },
                  {
                    "lastTransitionTime": "2022-10-14T13:44:20Z",
                    "lastUpdateTime": "2022-10-14T13:44:20Z",
                    "message": "install strategy completed with no errors",
                    "phase": "Succeeded",
                    "reason": "InstallSucceeded"
                  },
                  {
                    "lastTransitionTime": "2022-11-08T22:27:46Z",
                    "lastUpdateTime": "2022-11-08T22:27:46Z",
                    "message": "installing: waiting for deployment hazelcast-platform-controller-manager to become ready: deployment \"hazelcast-platform-controller-manager\" not available: Deployment does not have minimum availability.",
                    "phase": "Failed",
                    "reason": "ComponentUnhealthy"
                  },
                  {
                    "lastTransitionTime": "2022-11-08T22:27:51Z",
                    "lastUpdateTime": "2022-11-08T22:27:51Z",
                    "message": "installing: waiting for deployment hazelcast-platform-controller-manager to become ready: deployment \"hazelcast-platform-controller-manager\" not available: Deployment does not have minimum availability.",
                    "phase": "Pending",
                    "reason": "NeedsReinstall"
                  },
                  {
                    "lastTransitionTime": "2022-11-08T22:27:53Z",
                    "lastUpdateTime": "2022-11-08T22:27:53Z",
                    "message": "all requirements found, attempting install",
                    "phase": "InstallReady",
                    "reason": "AllRequirementsMet"
                  },
                  {
                    "lastTransitionTime": "2022-11-08T22:27:56Z",
                    "lastUpdateTime": "2022-11-08T22:27:56Z",
                    "message": "waiting for install components to report healthy",
                    "phase": "Installing",
                    "reason": "InstallSucceeded"
                  },
                  {
                    "lastTransitionTime": "2022-11-08T22:27:56Z",
                    "lastUpdateTime": "2022-11-08T22:27:58Z",
                    "message": "installing: waiting for deployment hazelcast-platform-controller-manager to become ready: deployment \"hazelcast-platform-controller-manager\" not available: Deployment does not have minimum availability.",
                    "phase": "Installing",
                    "reason": "InstallWaiting"
                  },
                  {
                    "lastTransitionTime": "2022-11-08T22:28:05Z",
                    "lastUpdateTime": "2022-11-08T22:28:05Z",
                    "message": "install strategy completed with no errors",
                    "phase": "Succeeded",
                    "reason": "InstallSucceeded"
                  }
                ],
                "lastTransitionTime": "2022-11-08T22:28:05Z",
                "lastUpdateTime": "2022-11-08T22:28:05Z",
                "message": "install strategy completed with no errors",
                "phase": "Succeeded",
                "reason": "InstallSucceeded",
                "requirementStatus": [
                  {
                    "group": "operators.coreos.com",
                    "kind": "ClusterServiceVersion",
                    "message": "CSV minKubeVersion (1.16.0) less than server version (v1.23.5+3afdacb)",
                    "name": "hazelcast-platform-operator.v5.4.0",
                    "status": "Present",
                    "version": "v1alpha1"
                  },
                  {
                    "group": "apiextensions.k8s.io",
                    "kind": "CustomResourceDefinition",
                    "message": "CRD is present and Established condition is true",
                    "name": "hazelcasts.hazelcast.com",
                    "status": "Present",
                    "uuid": "7cbc2fb3-b5bd-49ab-a3ba-5d6801ec4d89",
                    "version": "v1"
                  },
                  {
                    "group": "apiextensions.k8s.io",
                    "kind": "CustomResourceDefinition",
                    "message": "CRD is present and Established condition is true",
                    "name": "hotbackups.hazelcast.com",
                    "status": "Present",
                    "uuid": "2a7204b0-51d7-4a2f-893b-4818edaa3e49",
                    "version": "v1"
                  },
                  {
                    "group": "apiextensions.k8s.io",
                    "kind": "CustomResourceDefinition",
                    "message": "CRD is present and Established condition is true",
                    "name": "managementcenters.hazelcast.com",
                    "status": "Present",
                    "uuid": "525ff445-f35a-4a78-bf5f-b31543d0fa5e",
                    "version": "v1"
                  },
                  {
                    "group": "apiextensions.k8s.io",
                    "kind": "CustomResourceDefinition",
                    "message": "CRD is present and Established condition is true",
                    "name": "maps.hazelcast.com",
                    "status": "Present",
                    "uuid": "8caa996f-7e40-489c-b3ca-0a0a5cdbb736",
                    "version": "v1"
                  },
                  {
                    "group": "apiextensions.k8s.io",
                    "kind": "CustomResourceDefinition",
                    "message": "CRD is present and Established condition is true",
                    "name": "wanreplications.hazelcast.com",
                    "status": "Present",
                    "uuid": "308f13bd-bfc0-40a0-b4ff-0eb9ac6db76a",
                    "version": "v1"
                  },
                  {
                    "dependents": [
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"\"],\"resources\":[\"configmaps\",\"events\",\"pods\",\"serviceaccounts\",\"services\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"\"],\"resources\":[\"events\",\"pods\",\"serviceaccounts\",\"services\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"get\",\"watch\"],\"apiGroups\":[\"\"],\"resources\":[\"secrets\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"get\"],\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"apps\"],\"resources\":[\"statefulsets\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"hazelcasts\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"update\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"hazelcasts/finalizers\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"hazelcasts/status\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"hotbackups\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"update\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"hotbackups/finalizers\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"hotbackups/status\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"managementcenters\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"update\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"managementcenters/finalizers\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"managementcenters/status\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "namespaced rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"rolebindings\",\"roles\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "cluster rule:{\"verbs\":[\"get\",\"list\"],\"apiGroups\":[\"\"],\"resources\":[\"endpoints\",\"nodes\",\"pods\",\"secrets\",\"services\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"maps\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "cluster rule:{\"verbs\":[\"update\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"maps/finalizers\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "cluster rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"maps/status\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"wanreplications\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "cluster rule:{\"verbs\":[\"update\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"wanreplications/finalizers\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "cluster rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"hazelcast.com\"],\"resources\":[\"wanreplications/status\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"clusterrolebindings\",\"clusterroles\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      },
                      {
                        "group": "rbac.authorization.k8s.io",
                        "kind": "PolicyRule",
                        "message": "cluster rule:{\"verbs\":[\"use\"],\"apiGroups\":[\"security.openshift.io\"],\"resources\":[\"securitycontextconstraints\"]}",
                        "status": "Satisfied",
                        "version": "v1"
                      }
                    ],
                    "group": "",
                    "kind": "ServiceAccount",
                    "message": "",
                    "name": "hazelcast-platform-controller-manager",
                    "status": "Present",
                    "version": "v1"
                  }
                ]
              }
            },
            "installPlans": [
              {
                "bundleImage": "registry.connect.redhat.com/hazelcast/hazelcast-platform-operator-bundle@sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
                "indexImage": "registry.redhat.io/redhat/certified-operator-index:v4.10",
                "name": "install-tzq9g"
              }
            ],
            "name": "hazelcast-platform-operator.v5.4.0",
            "namespace": "tnf",
            "org": "certified-operators",
            "package": "hazelcast-platform-operator",
            "subscriptionName": "test-subscription",
            "version": "v5.4.0"
          }
        ],
        "testPods": [
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "secontextpodcat1uid0",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://57277cb314067074d19ef042d655fa7b49da4ffb5c52e45c82ebfcf796683391",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T17:37:35Z"
                    }
                  }
                },
                "UID": "57277cb314067074d19ef042d655fa7b49da4ffb5c52e45c82ebfcf796683391",
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "Always",
                "name": "test",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETUID",
                      "SETGID"
                    ]
                  },
                  "privileged": false,
                  "readOnlyRootFilesystem": false,
                  "runAsNonRoot": true,
                  "seLinuxOptions": {
                    "level": "s0:c30,c15"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.129.0.73/23\"],\"mac_address\":\"0a:58:0a:81:00:49\",\"gateway_ips\":[\"10.129.0.1\"],\"ip_address\":\"10.129.0.73/23\",\"gateway_ip\":\"10.129.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.73\"\n    ],\n    \"mac\": \"0a:58:0a:81:00:49\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.73\"\n    ],\n    \"mac\": \"0a:58:0a:81:00:49\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"creationTimestamp\":null,\"labels\":{\"app\":\"test\",\"run\":\"secontextpodcat1uid0\",\"test-network-function.com/container\":\"target\",\"test-network-function.com/generic\":\"target\"},\"name\":\"secontextpodcat1uid0\",\"namespace\":\"tnf\"},\"spec\":{\"automountServiceAccountToken\":false,\"containers\":[{\"image\":\"quay.io/testnetworkfunction/cnf-test-partner:latest\",\"name\":\"test\",\"resources\":{},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"KILL\",\"MKNOD\",\"SETUID\",\"SETGID\"]},\"privileged\":false,\"readOnlyRootFilesystem\":false,\"runAsNonRoot\":true,\"seLinuxOptions\":{\"level\":\"s0:c30,c15\"}}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"securityContext\":{\"fsGroup\":1000900000,\"runAsGroup\":1000900000,\"runAsUser\":1000900000}}}\n",
                "openshift.io/scc": "privileged"
              },
              "creationTimestamp": "2022-11-09T17:37:32Z",
              "labels": {
                "app": "test",
                "run": "secontextpodcat1uid0",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:run": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      }
                    },
                    "f:spec": {
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:name": {},
                          "f:resources": {},
                          "f:securityContext": {
                            ".": {},
                            "f:allowPrivilegeEscalation": {},
                            "f:capabilities": {
                              ".": {},
                              "f:drop": {}
                            },
                            "f:privileged": {},
                            "f:readOnlyRootFilesystem": {},
                            "f:runAsNonRoot": {},
                            "f:seLinuxOptions": {
                              ".": {},
                              "f:level": {}
                            }
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {
                        ".": {},
                        "f:fsGroup": {},
                        "f:runAsGroup": {},
                        "f:runAsUser": {}
                      },
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-11-09T17:37:32Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-09T17:37:32Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T17:37:34Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.129.0.73\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T17:37:35Z"
                }
              ],
              "name": "secontextpodcat1uid0",
              "namespace": "tnf",
              "resourceVersion": "57816497",
              "uid": "4dbae679-02ae-4bb6-b69a-1327945c184e"
            },
            "spec": {
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "Always",
                  "name": "test",
                  "resources": {},
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETUID",
                        "SETGID"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": false,
                    "runAsNonRoot": true,
                    "seLinuxOptions": {
                      "level": "s0:c30,c15"
                    }
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000900000,
                "runAsGroup": 1000900000,
                "runAsUser": 1000900000
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:37:32Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:37:35Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:37:35Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:37:32Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://57277cb314067074d19ef042d655fa7b49da4ffb5c52e45c82ebfcf796683391",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T17:37:35Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.5",
              "phase": "Running",
              "podIP": "10.129.0.73",
              "podIPs": [
                {
                  "ip": "10.129.0.73"
                }
              ],
              "qosClass": "BestEffort",
              "startTime": "2022-11-09T17:37:32Z"
            }
          },
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "secontextpodcat3",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://dac1a0f191dd328b412d2ed34bb1be2e98ade7ec6588f2e0afb2b0b1e8edf782",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T17:29:53Z"
                    }
                  }
                },
                "UID": "dac1a0f191dd328b412d2ed34bb1be2e98ade7ec6588f2e0afb2b0b1e8edf782",
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "Always",
                "name": "test",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "add": [
                      "NET_ADMIN",
                      "NET_RAW",
                      "IPC_LOCK"
                    ],
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETUID",
                      "SETGID"
                    ]
                  },
                  "privileged": false,
                  "readOnlyRootFilesystem": false,
                  "seLinuxOptions": {
                    "level": "s0:c30,c15"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.129.0.71/23\"],\"mac_address\":\"0a:58:0a:81:00:47\",\"gateway_ips\":[\"10.129.0.1\"],\"ip_address\":\"10.129.0.71/23\",\"gateway_ip\":\"10.129.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.71\"\n    ],\n    \"mac\": \"0a:58:0a:81:00:47\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.71\"\n    ],\n    \"mac\": \"0a:58:0a:81:00:47\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"creationTimestamp\":null,\"labels\":{\"app\":\"test\",\"run\":\"secontextpodcat3\",\"test-network-function.com/container\":\"target\",\"test-network-function.com/generic\":\"target\"},\"name\":\"secontextpodcat3\",\"namespace\":\"tnf\"},\"spec\":{\"automountServiceAccountToken\":false,\"containers\":[{\"image\":\"quay.io/testnetworkfunction/cnf-test-partner:latest\",\"name\":\"test\",\"resources\":{},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\",\"IPC_LOCK\"],\"drop\":[\"KILL\",\"MKNOD\",\"SETUID\",\"SETGID\"]},\"privileged\":false,\"readOnlyRootFilesystem\":false,\"seLinuxOptions\":{\"level\":\"s0:c30,c15\"}}}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"securityContext\":{\"fsGroup\":1000900000,\"runAsGroup\":1000900000,\"runAsUser\":1000900000}}}\n",
                "openshift.io/scc": "privileged"
              },
              "creationTimestamp": "2022-11-09T17:29:50Z",
              "labels": {
                "app": "test",
                "run": "secontextpodcat3",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:run": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      }
                    },
                    "f:spec": {
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:name": {},
                          "f:resources": {},
                          "f:securityContext": {
                            ".": {},
                            "f:allowPrivilegeEscalation": {},
                            "f:capabilities": {
                              ".": {},
                              "f:add": {},
                              "f:drop": {}
                            },
                            "f:privileged": {},
                            "f:readOnlyRootFilesystem": {},
                            "f:seLinuxOptions": {
                              ".": {},
                              "f:level": {}
                            }
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {
                        ".": {},
                        "f:fsGroup": {},
                        "f:runAsGroup": {},
                        "f:runAsUser": {}
                      },
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-11-09T17:29:50Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-09T17:29:50Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.129.0.71\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T17:29:53Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T17:29:53Z"
                }
              ],
              "name": "secontextpodcat3",
              "namespace": "tnf",
              "resourceVersion": "57812471",
              "uid": "51855f84-0e99-4e0b-887b-7b34467fa5f1"
            },
            "spec": {
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "Always",
                  "name": "test",
                  "resources": {},
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [
                        "NET_ADMIN",
                        "NET_RAW",
                        "IPC_LOCK"
                      ],
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETUID",
                        "SETGID"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": false,
                    "seLinuxOptions": {
                      "level": "s0:c30,c15"
                    }
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000900000,
                "runAsGroup": 1000900000,
                "runAsUser": 1000900000
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:29:50Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:29:53Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:29:53Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T17:29:50Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://dac1a0f191dd328b412d2ed34bb1be2e98ade7ec6588f2e0afb2b0b1e8edf782",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T17:29:53Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.5",
              "phase": "Running",
              "podIP": "10.129.0.71",
              "podIPs": [
                {
                  "ip": "10.129.0.71"
                }
              ],
              "qosClass": "BestEffort",
              "startTime": "2022-11-09T17:29:50Z"
            }
          },
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "test-0",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://88ed9f382ecdd9b070064c69abf25d6d3096e612487e5d097e9a4732328dad0a",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:27:46Z"
                    }
                  }
                },
                "UID": "88ed9f382ecdd9b070064c69abf25d6d3096e612487e5d097e9a4732328dad0a",
                "command": [
                  "./bin/app"
                ],
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {
                  "postStart": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "echo Hello from the postStart handler \u003e /tmp/message"
                      ]
                    }
                  },
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "killall -0 tail"
                      ]
                    }
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "liveness"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "test",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http-probe",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "readiness"
                      }
                    ],
                    "path": "/ready",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  }
                },
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETGID",
                      "SETUID"
                    ]
                  },
                  "runAsUser": 1000690000
                },
                "startupProbe": {
                  "failureThreshold": 10,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "startup"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.130.0.135/23\"],\"mac_address\":\"0a:58:0a:82:00:87\",\"gateway_ips\":[\"10.130.0.1\"],\"ip_address\":\"10.130.0.135/23\",\"gateway_ip\":\"10.130.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.130.0.135\"\n    ],\n    \"mac\": \"0a:58:0a:82:00:87\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.130.0.135\"\n    ],\n    \"mac\": \"0a:58:0a:82:00:87\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "openshift.io/scc": "restricted",
                "test-network-function.com/container_tests": "[\"PRIVILEGED_POD\",\"PRIVILEGED_ROLE\"]",
                "test-network-function.com/defaultnetworkinterface": "\"eth0\""
              },
              "creationTimestamp": "2022-10-24T22:31:54Z",
              "generateName": "test-",
              "labels": {
                "app": "testss",
                "controller-revision-hash": "test-5f787cb8c8",
                "statefulset.kubernetes.io/pod-name": "test-0",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:test-network-function.com/container_tests": {},
                        "f:test-network-function.com/defaultnetworkinterface": {}
                      },
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:controller-revision-hash": {},
                        "f:statefulset.kubernetes.io/pod-name": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"ceceebf7-ae40-40e7-905e-6dc06bbd4bbc\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:affinity": {
                        ".": {},
                        "f:podAntiAffinity": {
                          ".": {},
                          "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                        }
                      },
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:command": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:lifecycle": {
                            ".": {},
                            "f:postStart": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            },
                            "f:preStop": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            }
                          },
                          "f:livenessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:name": {},
                          "f:ports": {
                            ".": {},
                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                              ".": {},
                              "f:containerPort": {},
                              "f:name": {},
                              "f:protocol": {}
                            }
                          },
                          "f:readinessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:resources": {
                            ".": {},
                            "f:limits": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            },
                            "f:requests": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            }
                          },
                          "f:startupProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:hostname": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "time": "2022-10-24T22:31:54Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-10-24T22:31:56Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-24T22:31:58Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.130.0.135\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-08T22:27:59Z"
                }
              ],
              "name": "test-0",
              "namespace": "tnf",
              "ownerReferences": [
                {
                  "apiVersion": "apps/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "StatefulSet",
                  "name": "test",
                  "uid": "ceceebf7-ae40-40e7-905e-6dc06bbd4bbc"
                }
              ],
              "resourceVersion": "57307581",
              "uid": "0a66ec1a-54dd-46a0-bca1-60093ca5e249"
            },
            "spec": {
              "affinity": {
                "podAntiAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "app",
                            "operator": "In",
                            "values": [
                              "testss"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "command": [
                    "./bin/app"
                  ],
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "lifecycle": {
                    "postStart": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "echo Hello from the postStart handler \u003e /tmp/message"
                        ]
                      }
                    },
                    "preStop": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "killall -0 tail"
                        ]
                      }
                    }
                  },
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "liveness"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "name": "test",
                  "ports": [
                    {
                      "containerPort": 8080,
                      "name": "http-probe",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "readiness"
                        }
                      ],
                      "path": "/ready",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    }
                  },
                  "securityContext": {
                    "capabilities": {
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETGID",
                        "SETUID"
                      ]
                    },
                    "runAsUser": 1000690000
                  },
                  "startupProbe": {
                    "failureThreshold": 10,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "startup"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "FallbackToLogsOnError"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "hostname": "test-0",
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000690000,
                "seLinuxOptions": {
                  "level": "s0:c26,c20"
                }
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/memory-pressure",
                  "operator": "Exists"
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:31:54Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:27:59Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:27:59Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:31:54Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://88ed9f382ecdd9b070064c69abf25d6d3096e612487e5d097e9a4732328dad0a",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:27:46Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.3",
              "phase": "Running",
              "podIP": "10.130.0.135",
              "podIPs": [
                {
                  "ip": "10.130.0.135"
                }
              ],
              "qosClass": "Guaranteed",
              "startTime": "2022-10-24T22:31:54Z"
            }
          },
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "test-1",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://dc0875a38a9b1d0c4e30d510c21153dee255ee1bf5e2b18cabb4eacd9353dfcb",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:31:42Z"
                    }
                  }
                },
                "UID": "dc0875a38a9b1d0c4e30d510c21153dee255ee1bf5e2b18cabb4eacd9353dfcb",
                "command": [
                  "./bin/app"
                ],
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {
                  "postStart": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "echo Hello from the postStart handler \u003e /tmp/message"
                      ]
                    }
                  },
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "killall -0 tail"
                      ]
                    }
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "liveness"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "test",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http-probe",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "readiness"
                      }
                    ],
                    "path": "/ready",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  }
                },
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETGID",
                      "SETUID"
                    ]
                  },
                  "runAsUser": 1000690000
                },
                "startupProbe": {
                  "failureThreshold": 10,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "startup"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.128.0.62/23\"],\"mac_address\":\"0a:58:0a:80:00:3e\",\"gateway_ips\":[\"10.128.0.1\"],\"ip_address\":\"10.128.0.62/23\",\"gateway_ip\":\"10.128.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.62\"\n    ],\n    \"mac\": \"0a:58:0a:80:00:3e\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.62\"\n    ],\n    \"mac\": \"0a:58:0a:80:00:3e\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "openshift.io/scc": "restricted",
                "test-network-function.com/container_tests": "[\"PRIVILEGED_POD\",\"PRIVILEGED_ROLE\"]",
                "test-network-function.com/defaultnetworkinterface": "\"eth0\""
              },
              "creationTimestamp": "2022-10-24T22:32:12Z",
              "generateName": "test-",
              "labels": {
                "app": "testss",
                "controller-revision-hash": "test-5f787cb8c8",
                "statefulset.kubernetes.io/pod-name": "test-1",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:test-network-function.com/container_tests": {},
                        "f:test-network-function.com/defaultnetworkinterface": {}
                      },
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:controller-revision-hash": {},
                        "f:statefulset.kubernetes.io/pod-name": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"ceceebf7-ae40-40e7-905e-6dc06bbd4bbc\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:affinity": {
                        ".": {},
                        "f:podAntiAffinity": {
                          ".": {},
                          "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                        }
                      },
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:command": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:lifecycle": {
                            ".": {},
                            "f:postStart": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            },
                            "f:preStop": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            }
                          },
                          "f:livenessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:name": {},
                          "f:ports": {
                            ".": {},
                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                              ".": {},
                              "f:containerPort": {},
                              "f:name": {},
                              "f:protocol": {}
                            }
                          },
                          "f:readinessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:resources": {
                            ".": {},
                            "f:limits": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            },
                            "f:requests": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            }
                          },
                          "f:startupProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:hostname": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "time": "2022-10-24T22:32:12Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-10-24T22:32:14Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-24T22:32:16Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.128.0.62\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-08T22:31:56Z"
                }
              ],
              "name": "test-1",
              "namespace": "tnf",
              "ownerReferences": [
                {
                  "apiVersion": "apps/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "StatefulSet",
                  "name": "test",
                  "uid": "ceceebf7-ae40-40e7-905e-6dc06bbd4bbc"
                }
              ],
              "resourceVersion": "57310008",
              "uid": "3733eaa3-acfd-4dac-b0a6-b978a52f3d85"
            },
            "spec": {
              "affinity": {
                "podAntiAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "app",
                            "operator": "In",
                            "values": [
                              "testss"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "command": [
                    "./bin/app"
                  ],
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "lifecycle": {
                    "postStart": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "echo Hello from the postStart handler \u003e /tmp/message"
                        ]
                      }
                    },
                    "preStop": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "killall -0 tail"
                        ]
                      }
                    }
                  },
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "liveness"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "name": "test",
                  "ports": [
                    {
                      "containerPort": 8080,
                      "name": "http-probe",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "readiness"
                        }
                      ],
                      "path": "/ready",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    }
                  },
                  "securityContext": {
                    "capabilities": {
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETGID",
                        "SETUID"
                      ]
                    },
                    "runAsUser": 1000690000
                  },
                  "startupProbe": {
                    "failureThreshold": 10,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "startup"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "FallbackToLogsOnError"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "hostname": "test-1",
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000690000,
                "seLinuxOptions": {
                  "level": "s0:c26,c20"
                }
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/memory-pressure",
                  "operator": "Exists"
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:32:12Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:31:56Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:31:56Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:32:12Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://dc0875a38a9b1d0c4e30d510c21153dee255ee1bf5e2b18cabb4eacd9353dfcb",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:31:42Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.4",
              "phase": "Running",
              "podIP": "10.128.0.62",
              "podIPs": [
                {
                  "ip": "10.128.0.62"
                }
              ],
              "qosClass": "Guaranteed",
              "startTime": "2022-10-24T22:32:12Z"
            }
          },
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "test-6787875cc7-bsl8s",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://d9c6633abe48d07c75c51ba8d09a55a863b8e6b21a214f9cdd6a80f7b8b662f4",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T09:18:53Z"
                    }
                  }
                },
                "UID": "d9c6633abe48d07c75c51ba8d09a55a863b8e6b21a214f9cdd6a80f7b8b662f4",
                "command": [
                  "./bin/app"
                ],
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {
                  "postStart": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "echo Hello from the postStart handler \u003e /tmp/message"
                      ]
                    }
                  },
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "killall -0 tail"
                      ]
                    }
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "liveness"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "test",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http-probe",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "readiness"
                      }
                    ],
                    "path": "/ready",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  }
                },
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETGID",
                      "SETUID"
                    ]
                  },
                  "runAsUser": 1000690000
                },
                "startupProbe": {
                  "failureThreshold": 10,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "startup"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.130.1.103/23\"],\"mac_address\":\"0a:58:0a:82:01:67\",\"gateway_ips\":[\"10.130.0.1\"],\"ip_address\":\"10.130.1.103/23\",\"gateway_ip\":\"10.130.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.130.1.103\"\n    ],\n    \"mac\": \"0a:58:0a:82:01:67\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.130.1.103\"\n    ],\n    \"mac\": \"0a:58:0a:82:01:67\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "openshift.io/scc": "restricted",
                "test-network-function.com/container_tests": "[\"PRIVILEGED_POD\",\"PRIVILEGED_ROLE\"]",
                "test-network-function.com/defaultnetworkinterface": "\"eth0\""
              },
              "creationTimestamp": "2022-11-09T09:18:32Z",
              "generateName": "test-6787875cc7-",
              "labels": {
                "app": "testdp",
                "pod-template-hash": "6787875cc7",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:test-network-function.com/container_tests": {},
                        "f:test-network-function.com/defaultnetworkinterface": {}
                      },
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:pod-template-hash": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"33350c3d-fcec-4e08-901e-8cc67d65738e\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:affinity": {
                        ".": {},
                        "f:podAntiAffinity": {
                          ".": {},
                          "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                        }
                      },
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:command": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:lifecycle": {
                            ".": {},
                            "f:postStart": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            },
                            "f:preStop": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            }
                          },
                          "f:livenessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:name": {},
                          "f:ports": {
                            ".": {},
                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                              ".": {},
                              "f:containerPort": {},
                              "f:name": {},
                              "f:protocol": {}
                            }
                          },
                          "f:readinessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:resources": {
                            ".": {},
                            "f:limits": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            },
                            "f:requests": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            }
                          },
                          "f:startupProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "time": "2022-11-09T09:18:32Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-09T09:18:34Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T09:18:50Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.130.1.103\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-09T09:19:07Z"
                }
              ],
              "name": "test-6787875cc7-bsl8s",
              "namespace": "tnf",
              "ownerReferences": [
                {
                  "apiVersion": "apps/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "ReplicaSet",
                  "name": "test-6787875cc7",
                  "uid": "33350c3d-fcec-4e08-901e-8cc67d65738e"
                }
              ],
              "resourceVersion": "57579507",
              "uid": "c50a61de-08ae-4a4d-9a35-bf0826a18cbd"
            },
            "spec": {
              "affinity": {
                "podAntiAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "app",
                            "operator": "In",
                            "values": [
                              "testdp"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "command": [
                    "./bin/app"
                  ],
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "lifecycle": {
                    "postStart": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "echo Hello from the postStart handler \u003e /tmp/message"
                        ]
                      }
                    },
                    "preStop": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "killall -0 tail"
                        ]
                      }
                    }
                  },
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "liveness"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "name": "test",
                  "ports": [
                    {
                      "containerPort": 8080,
                      "name": "http-probe",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "readiness"
                        }
                      ],
                      "path": "/ready",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    }
                  },
                  "securityContext": {
                    "capabilities": {
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETGID",
                        "SETUID"
                      ]
                    },
                    "runAsUser": 1000690000
                  },
                  "startupProbe": {
                    "failureThreshold": 10,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "startup"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "FallbackToLogsOnError"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000690000,
                "seLinuxOptions": {
                  "level": "s0:c26,c20"
                }
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/memory-pressure",
                  "operator": "Exists"
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T09:18:32Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T09:19:07Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T09:19:07Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-09T09:18:32Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://d9c6633abe48d07c75c51ba8d09a55a863b8e6b21a214f9cdd6a80f7b8b662f4",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 0,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-09T09:18:53Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.3",
              "phase": "Running",
              "podIP": "10.130.1.103",
              "podIPs": [
                {
                  "ip": "10.130.1.103"
                }
              ],
              "qosClass": "Guaranteed",
              "startTime": "2022-11-09T09:18:32Z"
            }
          },
          {
            "Containers": [
              {
                "ContainerImageIdentifier": {
                  "digest": "",
                  "name": "cnf-test-partner",
                  "repository": "testnetworkfunction",
                  "tag": "latest"
                },
                "Namespace": "tnf",
                "NodeName": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                "Podname": "test-6787875cc7-s4ww6",
                "Runtime": "cri-o",
                "Status": {
                  "containerID": "cri-o://217ccbcbab0ef39f40f417a29c4ce28d26891d2d52d51ac66425fb60a8cd27d0",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:31:41Z"
                    }
                  }
                },
                "UID": "217ccbcbab0ef39f40f417a29c4ce28d26891d2d52d51ac66425fb60a8cd27d0",
                "command": [
                  "./bin/app"
                ],
                "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {
                  "postStart": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "echo Hello from the postStart handler \u003e /tmp/message"
                      ]
                    }
                  },
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "killall -0 tail"
                      ]
                    }
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "liveness"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "test",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http-probe",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "readiness"
                      }
                    ],
                    "path": "/ready",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "512Mi"
                  }
                },
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "KILL",
                      "MKNOD",
                      "SETGID",
                      "SETUID"
                    ]
                  },
                  "runAsUser": 1000690000
                },
                "startupProbe": {
                  "failureThreshold": 10,
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "health-check",
                        "value": "startup"
                      }
                    ],
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError"
              }
            ],
            "MultusIPs": {},
            "MultusPCIs": null,
            "SkipMultusNetTests": false,
            "SkipNetTests": false,
            "metadata": {
              "annotations": {
                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.128.0.61/23\"],\"mac_address\":\"0a:58:0a:80:00:3d\",\"gateway_ips\":[\"10.128.0.1\"],\"ip_address\":\"10.128.0.61/23\",\"gateway_ip\":\"10.128.0.1\"}}",
                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.61\"\n    ],\n    \"mac\": \"0a:58:0a:80:00:3d\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.61\"\n    ],\n    \"mac\": \"0a:58:0a:80:00:3d\",\n    \"default\": true,\n    \"dns\": {}\n}]",
                "openshift.io/scc": "restricted",
                "test-network-function.com/container_tests": "[\"PRIVILEGED_POD\",\"PRIVILEGED_ROLE\"]",
                "test-network-function.com/defaultnetworkinterface": "\"eth0\""
              },
              "creationTimestamp": "2022-10-24T22:32:11Z",
              "generateName": "test-6787875cc7-",
              "labels": {
                "app": "testdp",
                "pod-template-hash": "6787875cc7",
                "test-network-function.com/container": "target",
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:test-network-function.com/container_tests": {},
                        "f:test-network-function.com/defaultnetworkinterface": {}
                      },
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:pod-template-hash": {},
                        "f:test-network-function.com/container": {},
                        "f:test-network-function.com/generic": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"33350c3d-fcec-4e08-901e-8cc67d65738e\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:affinity": {
                        ".": {},
                        "f:podAntiAffinity": {
                          ".": {},
                          "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                        }
                      },
                      "f:automountServiceAccountToken": {},
                      "f:containers": {
                        "k:{\"name\":\"test\"}": {
                          ".": {},
                          "f:command": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:lifecycle": {
                            ".": {},
                            "f:postStart": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            },
                            "f:preStop": {
                              ".": {},
                              "f:exec": {
                                ".": {},
                                "f:command": {}
                              }
                            }
                          },
                          "f:livenessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:name": {},
                          "f:ports": {
                            ".": {},
                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                              ".": {},
                              "f:containerPort": {},
                              "f:name": {},
                              "f:protocol": {}
                            }
                          },
                          "f:readinessProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:initialDelaySeconds": {},
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:resources": {
                            ".": {},
                            "f:limits": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            },
                            "f:requests": {
                              ".": {},
                              "f:cpu": {},
                              "f:memory": {}
                            }
                          },
                          "f:startupProbe": {
                            ".": {},
                            "f:failureThreshold": {},
                            "f:httpGet": {
                              ".": {},
                              "f:httpHeaders": {},
                              "f:path": {},
                              "f:port": {},
                              "f:scheme": {}
                            },
                            "f:periodSeconds": {},
                            "f:successThreshold": {},
                            "f:timeoutSeconds": {}
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "time": "2022-10-24T22:32:11Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/pod-networks": {}
                      }
                    }
                  },
                  "manager": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-10-24T22:32:11Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.v1.cni.cncf.io/network-status": {},
                        "f:k8s.v1.cni.cncf.io/networks-status": {}
                      }
                    }
                  },
                  "manager": "multus",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-24T22:32:13Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:conditions": {
                        "k:{\"type\":\"ContainersReady\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Initialized\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          ".": {},
                          "f:lastProbeTime": {},
                          "f:lastTransitionTime": {},
                          "f:status": {},
                          "f:type": {}
                        }
                      },
                      "f:containerStatuses": {},
                      "f:hostIP": {},
                      "f:phase": {},
                      "f:podIP": {},
                      "f:podIPs": {
                        ".": {},
                        "k:{\"ip\":\"10.128.0.61\"}": {
                          ".": {},
                          "f:ip": {}
                        }
                      },
                      "f:startTime": {}
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-08T22:31:51Z"
                }
              ],
              "name": "test-6787875cc7-s4ww6",
              "namespace": "tnf",
              "ownerReferences": [
                {
                  "apiVersion": "apps/v1",
                  "blockOwnerDeletion": true,
                  "controller": true,
                  "kind": "ReplicaSet",
                  "name": "test-6787875cc7",
                  "uid": "33350c3d-fcec-4e08-901e-8cc67d65738e"
                }
              ],
              "resourceVersion": "57309779",
              "uid": "d0a3658c-3f79-463c-bb7a-f406d9622b60"
            },
            "spec": {
              "affinity": {
                "podAntiAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "app",
                            "operator": "In",
                            "values": [
                              "testdp"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "command": [
                    "./bin/app"
                  ],
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "lifecycle": {
                    "postStart": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "echo Hello from the postStart handler \u003e /tmp/message"
                        ]
                      }
                    },
                    "preStop": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "killall -0 tail"
                        ]
                      }
                    }
                  },
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "liveness"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "name": "test",
                  "ports": [
                    {
                      "containerPort": 8080,
                      "name": "http-probe",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "readiness"
                        }
                      ],
                      "path": "/ready",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "512Mi"
                    }
                  },
                  "securityContext": {
                    "capabilities": {
                      "drop": [
                        "KILL",
                        "MKNOD",
                        "SETGID",
                        "SETUID"
                      ]
                    },
                    "runAsUser": 1000690000
                  },
                  "startupProbe": {
                    "failureThreshold": 10,
                    "httpGet": {
                      "httpHeaders": [
                        {
                          "name": "health-check",
                          "value": "startup"
                        }
                      ],
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "FallbackToLogsOnError"
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "enableServiceLinks": true,
              "imagePullSecrets": [
                {
                  "name": "default-dockercfg-c4r69"
                }
              ],
              "nodeName": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
              "preemptionPolicy": "PreemptLowerPriority",
              "priority": 0,
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 1000690000,
                "seLinuxOptions": {
                  "level": "s0:c26,c20"
                }
              },
              "serviceAccount": "default",
              "serviceAccountName": "default",
              "terminationGracePeriodSeconds": 30,
              "tolerations": [
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/not-ready",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoExecute",
                  "key": "node.kubernetes.io/unreachable",
                  "operator": "Exists",
                  "tolerationSeconds": 300
                },
                {
                  "effect": "NoSchedule",
                  "key": "node.kubernetes.io/memory-pressure",
                  "operator": "Exists"
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:32:11Z",
                  "status": "True",
                  "type": "Initialized"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:31:51Z",
                  "status": "True",
                  "type": "Ready"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-11-08T22:31:51Z",
                  "status": "True",
                  "type": "ContainersReady"
                },
                {
                  "lastProbeTime": null,
                  "lastTransitionTime": "2022-10-24T22:32:11Z",
                  "status": "True",
                  "type": "PodScheduled"
                }
              ],
              "containerStatuses": [
                {
                  "containerID": "cri-o://217ccbcbab0ef39f40f417a29c4ce28d26891d2d52d51ac66425fb60a8cd27d0",
                  "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                  "imageID": "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                  "lastState": {},
                  "name": "test",
                  "ready": true,
                  "restartCount": 1,
                  "started": true,
                  "state": {
                    "running": {
                      "startedAt": "2022-11-08T22:31:41Z"
                    }
                  }
                }
              ],
              "hostIP": "10.1.24.4",
              "phase": "Running",
              "podIP": "10.128.0.61",
              "podIPs": [
                {
                  "ip": "10.128.0.61"
                }
              ],
              "qosClass": "Guaranteed",
              "startTime": "2022-10-24T22:32:11Z"
            }
          }
        ],
        "testServices": null,
        "testStatefulSets": [
          {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"test-network-function.com/generic\":\"target\"},\"name\":\"test\",\"namespace\":\"tnf\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"testss\"}},\"template\":{\"metadata\":{\"annotations\":{\"k8s.v1.cni.cncf.io/networks\":null,\"test-network-function.com/container_tests\":\"[\\\"PRIVILEGED_POD\\\",\\\"PRIVILEGED_ROLE\\\"]\",\"test-network-function.com/defaultnetworkinterface\":\"\\\"eth0\\\"\"},\"labels\":{\"app\":\"testss\",\"test-network-function.com/container\":\"target\",\"test-network-function.com/generic\":\"target\"},\"name\":\"test\"},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"testss\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"automountServiceAccountToken\":false,\"containers\":[{\"command\":[\"./bin/app\"],\"image\":\"quay.io/testnetworkfunction/cnf-test-partner:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{\"postStart\":{\"exec\":{\"command\":[\"/bin/sh\",\"-c\",\"echo Hello from the postStart handler \\u003e /tmp/message\"]}},\"preStop\":{\"exec\":{\"command\":[\"/bin/sh\",\"-c\",\"killall -0 tail\"]}}},\"livenessProbe\":{\"httpGet\":{\"httpHeaders\":[{\"name\":\"health-check\",\"value\":\"liveness\"}],\"path\":\"/health\",\"port\":8080},\"initialDelaySeconds\":10,\"periodSeconds\":5},\"name\":\"test\",\"ports\":[{\"containerPort\":8080,\"name\":\"http-probe\"}],\"readinessProbe\":{\"httpGet\":{\"httpHeaders\":[{\"name\":\"health-check\",\"value\":\"readiness\"}],\"path\":\"/ready\",\"port\":8080},\"initialDelaySeconds\":10,\"periodSeconds\":5},\"resources\":{\"limits\":{\"cpu\":0.25,\"memory\":\"512Mi\"}},\"startupProbe\":{\"failureThreshold\":10,\"httpGet\":{\"httpHeaders\":[{\"name\":\"health-check\",\"value\":\"startup\"}],\"path\":\"/health\",\"port\":8080},\"periodSeconds\":5},\"terminationMessagePolicy\":\"FallbackToLogsOnError\"}],\"terminationGracePeriodSeconds\":30}}}}\n"
              },
              "creationTimestamp": "2022-10-14T13:42:51Z",
              "generation": 6,
              "labels": {
                "test-network-function.com/generic": "target"
              },
              "managedFields": [
                {
                  "apiVersion": "apps/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:test-network-function.com/generic": {}
                      }
                    },
                    "f:spec": {
                      "f:podManagementPolicy": {},
                      "f:replicas": {},
                      "f:revisionHistoryLimit": {},
                      "f:selector": {},
                      "f:template": {
                        "f:metadata": {
                          "f:annotations": {
                            ".": {},
                            "f:test-network-function.com/container_tests": {},
                            "f:test-network-function.com/defaultnetworkinterface": {}
                          },
                          "f:labels": {
                            ".": {},
                            "f:app": {},
                            "f:test-network-function.com/container": {},
                            "f:test-network-function.com/generic": {}
                          },
                          "f:name": {}
                        },
                        "f:spec": {
                          "f:affinity": {
                            ".": {},
                            "f:podAntiAffinity": {
                              ".": {},
                              "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                            }
                          },
                          "f:automountServiceAccountToken": {},
                          "f:containers": {
                            "k:{\"name\":\"test\"}": {
                              ".": {},
                              "f:command": {},
                              "f:image": {},
                              "f:imagePullPolicy": {},
                              "f:lifecycle": {
                                ".": {},
                                "f:postStart": {
                                  ".": {},
                                  "f:exec": {
                                    ".": {},
                                    "f:command": {}
                                  }
                                },
                                "f:preStop": {
                                  ".": {},
                                  "f:exec": {
                                    ".": {},
                                    "f:command": {}
                                  }
                                }
                              },
                              "f:livenessProbe": {
                                ".": {},
                                "f:failureThreshold": {},
                                "f:httpGet": {
                                  ".": {},
                                  "f:httpHeaders": {},
                                  "f:path": {},
                                  "f:port": {},
                                  "f:scheme": {}
                                },
                                "f:initialDelaySeconds": {},
                                "f:periodSeconds": {},
                                "f:successThreshold": {},
                                "f:timeoutSeconds": {}
                              },
                              "f:name": {},
                              "f:ports": {
                                ".": {},
                                "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                  ".": {},
                                  "f:containerPort": {},
                                  "f:name": {},
                                  "f:protocol": {}
                                }
                              },
                              "f:readinessProbe": {
                                ".": {},
                                "f:failureThreshold": {},
                                "f:httpGet": {
                                  ".": {},
                                  "f:httpHeaders": {},
                                  "f:path": {},
                                  "f:port": {},
                                  "f:scheme": {}
                                },
                                "f:initialDelaySeconds": {},
                                "f:periodSeconds": {},
                                "f:successThreshold": {},
                                "f:timeoutSeconds": {}
                              },
                              "f:resources": {
                                ".": {},
                                "f:limits": {
                                  ".": {},
                                  "f:cpu": {},
                                  "f:memory": {}
                                }
                              },
                              "f:startupProbe": {
                                ".": {},
                                "f:failureThreshold": {},
                                "f:httpGet": {
                                  ".": {},
                                  "f:httpHeaders": {},
                                  "f:path": {},
                                  "f:port": {},
                                  "f:scheme": {}
                                },
                                "f:periodSeconds": {},
                                "f:successThreshold": {},
                                "f:timeoutSeconds": {}
                              },
                              "f:terminationMessagePath": {},
                              "f:terminationMessagePolicy": {}
                            }
                          },
                          "f:dnsPolicy": {},
                          "f:restartPolicy": {},
                          "f:schedulerName": {},
                          "f:securityContext": {},
                          "f:terminationGracePeriodSeconds": {}
                        }
                      },
                      "f:updateStrategy": {
                        "f:rollingUpdate": {
                          ".": {},
                          "f:partition": {}
                        },
                        "f:type": {}
                      }
                    }
                  },
                  "manager": "kubectl-client-side-apply",
                  "operation": "Update",
                  "time": "2022-10-14T14:05:13Z"
                },
                {
                  "apiVersion": "apps/v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:availableReplicas": {},
                      "f:collisionCount": {},
                      "f:currentReplicas": {},
                      "f:currentRevision": {},
                      "f:observedGeneration": {},
                      "f:readyReplicas": {},
                      "f:replicas": {},
                      "f:updateRevision": {},
                      "f:updatedReplicas": {}
                    }
                  },
                  "manager": "kube-controller-manager",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-08T22:27:59Z"
                }
              ],
              "name": "test",
              "namespace": "tnf",
              "resourceVersion": "57310010",
              "uid": "ceceebf7-ae40-40e7-905e-6dc06bbd4bbc"
            },
            "spec": {
              "podManagementPolicy": "OrderedReady",
              "replicas": 2,
              "revisionHistoryLimit": 10,
              "selector": {
                "matchLabels": {
                  "app": "testss"
                }
              },
              "serviceName": "",
              "template": {
                "metadata": {
                  "annotations": {
                    "test-network-function.com/container_tests": "[\"PRIVILEGED_POD\",\"PRIVILEGED_ROLE\"]",
                    "test-network-function.com/defaultnetworkinterface": "\"eth0\""
                  },
                  "creationTimestamp": null,
                  "labels": {
                    "app": "testss",
                    "test-network-function.com/container": "target",
                    "test-network-function.com/generic": "target"
                  },
                  "name": "test"
                },
                "spec": {
                  "affinity": {
                    "podAntiAffinity": {
                      "requiredDuringSchedulingIgnoredDuringExecution": [
                        {
                          "labelSelector": {
                            "matchExpressions": [
                              {
                                "key": "app",
                                "operator": "In",
                                "values": [
                                  "testss"
                                ]
                              }
                            ]
                          },
                          "topologyKey": "kubernetes.io/hostname"
                        }
                      ]
                    }
                  },
                  "automountServiceAccountToken": false,
                  "containers": [
                    {
                      "command": [
                        "./bin/app"
                      ],
                      "image": "quay.io/testnetworkfunction/cnf-test-partner:latest",
                      "imagePullPolicy": "IfNotPresent",
                      "lifecycle": {
                        "postStart": {
                          "exec": {
                            "command": [
                              "/bin/sh",
                              "-c",
                              "echo Hello from the postStart handler \u003e /tmp/message"
                            ]
                          }
                        },
                        "preStop": {
                          "exec": {
                            "command": [
                              "/bin/sh",
                              "-c",
                              "killall -0 tail"
                            ]
                          }
                        }
                      },
                      "livenessProbe": {
                        "failureThreshold": 3,
                        "httpGet": {
                          "httpHeaders": [
                            {
                              "name": "health-check",
                              "value": "liveness"
                            }
                          ],
                          "path": "/health",
                          "port": 8080,
                          "scheme": "HTTP"
                        },
                        "initialDelaySeconds": 10,
                        "periodSeconds": 5,
                        "successThreshold": 1,
                        "timeoutSeconds": 1
                      },
                      "name": "test",
                      "ports": [
                        {
                          "containerPort": 8080,
                          "name": "http-probe",
                          "protocol": "TCP"
                        }
                      ],
                      "readinessProbe": {
                        "failureThreshold": 3,
                        "httpGet": {
                          "httpHeaders": [
                            {
                              "name": "health-check",
                              "value": "readiness"
                            }
                          ],
                          "path": "/ready",
                          "port": 8080,
                          "scheme": "HTTP"
                        },
                        "initialDelaySeconds": 10,
                        "periodSeconds": 5,
                        "successThreshold": 1,
                        "timeoutSeconds": 1
                      },
                      "resources": {
                        "limits": {
                          "cpu": "250m",
                          "memory": "512Mi"
                        }
                      },
                      "startupProbe": {
                        "failureThreshold": 10,
                        "httpGet": {
                          "httpHeaders": [
                            {
                              "name": "health-check",
                              "value": "startup"
                            }
                          ],
                          "path": "/health",
                          "port": 8080,
                          "scheme": "HTTP"
                        },
                        "periodSeconds": 5,
                        "successThreshold": 1,
                        "timeoutSeconds": 1
                      },
                      "terminationMessagePath": "/dev/termination-log",
                      "terminationMessagePolicy": "FallbackToLogsOnError"
                    }
                  ],
                  "dnsPolicy": "ClusterFirst",
                  "restartPolicy": "Always",
                  "schedulerName": "default-scheduler",
                  "securityContext": {},
                  "terminationGracePeriodSeconds": 30
                }
              },
              "updateStrategy": {
                "rollingUpdate": {
                  "partition": 0
                },
                "type": "RollingUpdate"
              }
            },
            "status": {
              "availableReplicas": 2,
              "collisionCount": 0,
              "currentReplicas": 2,
              "currentRevision": "test-5f787cb8c8",
              "observedGeneration": 6,
              "readyReplicas": 2,
              "replicas": 2,
              "updateRevision": "test-5f787cb8c8",
              "updatedReplicas": 2
            }
          }
        ]
      },
      "metadata": {
        "endTime": "2022-11-09T18:28:14+00:00",
        "startTime": "2022-11-09T18:27:19+00:00"
      },
      "nodes": {
        "cniPlugins": {
          "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com": [
            {
              "name": null,
              "plugins": null,
              "type": "loopback",
              "version": "0.3.1"
            },
            {
              "name": "podman",
              "plugins": [
                {
                  "bridge": "cni-podman0",
                  "hairpinMode": true,
                  "ipMasq": true,
                  "ipam": {
                    "ranges": [
                      [
                        {
                          "gateway": "10.88.0.1",
                          "subnet": "10.88.0.0/16"
                        }
                      ]
                    ],
                    "routes": [
                      {
                        "dst": "0.0.0.0/0"
                      }
                    ],
                    "type": "host-local"
                  },
                  "isGateway": true,
                  "type": "bridge"
                },
                {
                  "capabilities": {
                    "portMappings": true
                  },
                  "type": "portmap"
                },
                {
                  "type": "firewall"
                },
                {
                  "type": "tuning"
                }
              ],
              "type": null,
              "version": "0.4.0"
            }
          ],
          "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com": [
            {
              "name": "crio",
              "plugins": null,
              "type": "bridge",
              "version": "0.3.1"
            },
            {
              "name": null,
              "plugins": null,
              "type": "loopback",
              "version": "0.3.1"
            },
            {
              "name": "podman",
              "plugins": [
                {
                  "bridge": "cni-podman0",
                  "hairpinMode": true,
                  "ipMasq": true,
                  "ipam": {
                    "ranges": [
                      [
                        {
                          "gateway": "10.88.0.1",
                          "subnet": "10.88.0.0/16"
                        }
                      ]
                    ],
                    "routes": [
                      {
                        "dst": "0.0.0.0/0"
                      }
                    ],
                    "type": "host-local"
                  },
                  "isGateway": true,
                  "type": "bridge"
                },
                {
                  "capabilities": {
                    "portMappings": true
                  },
                  "type": "portmap"
                },
                {
                  "type": "firewall"
                },
                {
                  "type": "tuning"
                }
              ],
              "type": null,
              "version": "0.4.0"
            }
          ]
        },
        "csiDriver": {
          "apiVersion": "storage.k8s.io/v1",
          "items": [],
          "kind": "CSIDriverList",
          "metadata": {
            "resourceVersion": "57843399"
          }
        },
        "nodeSummary": {
          "master-2.clus0.t5g.lab.eng.rdu2.redhat.com": {
            "metadata": {
              "annotations": {
                "k8s.ovn.org/host-addresses": "[\"10.1.24.10\",\"10.1.24.3\",\"2620:52:0:118:4adf:37ff:febc:f164\"]",
                "k8s.ovn.org/l3-gateway-config": "{\"default\":{\"mode\":\"shared\",\"interface-id\":\"br-ex_master-2.clus0.t5g.lab.eng.rdu2.redhat.com\",\"mac-address\":\"48:df:37:bc:f1:64\",\"ip-addresses\":[\"10.1.24.3/24\"],\"ip-address\":\"10.1.24.3/24\",\"next-hops\":[\"10.1.24.254\"],\"next-hop\":\"10.1.24.254\",\"node-port-enable\":\"true\",\"vlan-id\":\"0\"}}",
                "k8s.ovn.org/node-chassis-id": "9e3db537-7051-47b1-8a53-cc1c0f8637e0",
                "k8s.ovn.org/node-mgmt-port-mac-address": "36:f2:c1:5c:be:e4",
                "k8s.ovn.org/node-primary-ifaddr": "{\"ipv4\":\"10.1.24.3/24\"}",
                "k8s.ovn.org/node-subnets": "{\"default\":\"10.130.0.0/23\"}",
                "k8s.ovn.org/topology-version": "5",
                "machine.openshift.io/machine": "openshift-machine-api/clus0-5n49n-master-0",
                "machineconfiguration.openshift.io/controlPlaneTopology": "HighlyAvailable",
                "machineconfiguration.openshift.io/currentConfig": "rendered-master-07bc6dbd48995ea0a35bff49c230d3a5",
                "machineconfiguration.openshift.io/desiredConfig": "rendered-master-07bc6dbd48995ea0a35bff49c230d3a5",
                "machineconfiguration.openshift.io/reason": "",
                "machineconfiguration.openshift.io/ssh": "accessed",
                "machineconfiguration.openshift.io/state": "Done",
                "sriovnetwork.openshift.io/state": "Idle",
                "volumes.kubernetes.io/controller-managed-attach-detach": "true"
              },
              "creationTimestamp": "2022-07-16T16:40:14Z",
              "labels": {
                "beta.kubernetes.io/arch": "amd64",
                "beta.kubernetes.io/os": "linux",
                "feature.node.kubernetes.io/network-sriov.capable": "true",
                "kubernetes.io/arch": "amd64",
                "kubernetes.io/hostname": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                "kubernetes.io/os": "linux",
                "node-role.kubernetes.io/master": "",
                "node-role.kubernetes.io/worker": "",
                "node.openshift.io/os_id": "rhcos"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/l3-gateway-config": {},
                        "f:k8s.ovn.org/node-chassis-id": {},
                        "f:k8s.ovn.org/node-mgmt-port-mac-address": {},
                        "f:k8s.ovn.org/node-primary-ifaddr": {},
                        "f:k8s.ovn.org/node-subnets": {},
                        "f:k8s.ovn.org/topology-version": {},
                        "f:machine.openshift.io/machine": {}
                      }
                    },
                    "f:spec": {
                      "f:providerID": {}
                    }
                  },
                  "manager": "ancient-changes",
                  "operation": "Update",
                  "time": "2022-07-16T16:46:37Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:volumes.kubernetes.io/controller-managed-attach-detach": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:beta.kubernetes.io/arch": {},
                        "f:beta.kubernetes.io/os": {},
                        "f:kubernetes.io/arch": {},
                        "f:kubernetes.io/hostname": {},
                        "f:kubernetes.io/os": {},
                        "f:node-role.kubernetes.io/master": {},
                        "f:node.openshift.io/os_id": {}
                      }
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "time": "2022-08-10T14:54:01Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:machineconfiguration.openshift.io/currentConfig": {},
                        "f:machineconfiguration.openshift.io/reason": {},
                        "f:machineconfiguration.openshift.io/ssh": {},
                        "f:machineconfiguration.openshift.io/state": {}
                      }
                    }
                  },
                  "manager": "machine-config-daemon",
                  "operation": "Update",
                  "time": "2022-09-15T22:30:10Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:sriovnetwork.openshift.io/state": {}
                      }
                    }
                  },
                  "manager": "sriov-network-config-daemon",
                  "operation": "Update",
                  "time": "2022-10-06T11:11:30Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:labels": {
                        "f:feature.node.kubernetes.io/network-sriov.capable": {}
                      }
                    }
                  },
                  "manager": "Mozilla",
                  "operation": "Update",
                  "time": "2022-10-07T13:59:23Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:allocatable": {
                        "f:cpu": {},
                        "f:ephemeral-storage": {},
                        "f:hugepages-1Gi": {},
                        "f:hugepages-2Mi": {},
                        "f:memory": {},
                        "f:openshift.io/onboardDPDK": {},
                        "f:openshift.io/pcieSRIOV": {}
                      },
                      "f:capacity": {
                        "f:hugepages-1Gi": {},
                        "f:hugepages-2Mi": {},
                        "f:memory": {},
                        "f:openshift.io/onboardDPDK": {},
                        "f:openshift.io/pcieSRIOV": {}
                      },
                      "f:conditions": {
                        "k:{\"type\":\"DiskPressure\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        },
                        "k:{\"type\":\"MemoryPressure\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        },
                        "k:{\"type\":\"PIDPressure\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        }
                      },
                      "f:images": {},
                      "f:nodeInfo": {
                        "f:bootID": {},
                        "f:containerRuntimeVersion": {},
                        "f:kernelVersion": {}
                      }
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-13T15:32:50Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/host-addresses": {}
                      }
                    }
                  },
                  "manager": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-10-13T15:36:25Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:machineconfiguration.openshift.io/controlPlaneTopology": {},
                        "f:machineconfiguration.openshift.io/desiredConfig": {}
                      },
                      "f:labels": {
                        "f:node-role.kubernetes.io/worker": {}
                      }
                    }
                  },
                  "manager": "machine-config-controller",
                  "operation": "Update",
                  "time": "2022-11-09T17:18:08Z"
                }
              ],
              "name": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
              "resourceVersion": "57842251",
              "uid": "002f5990-2b51-44b6-b9e9-80440ec85183"
            },
            "spec": {
              "providerID": "baremetalhost:///openshift-machine-api/master-2/35edaf18-da2d-48e8-8d07-4956535251cb"
            },
            "status": {
              "addresses": [
                {
                  "address": "10.1.24.3",
                  "type": "InternalIP"
                },
                {
                  "address": "master-2.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "type": "Hostname"
                }
              ],
              "allocatable": {
                "cpu": "38",
                "ephemeral-storage": "1874806084Ki",
                "hugepages-1Gi": "2Gi",
                "hugepages-2Mi": "2000Mi",
                "memory": "192442780Ki",
                "openshift.io/onboardDPDK": "20",
                "openshift.io/pcieSRIOV": "100",
                "pods": "250"
              },
              "capacity": {
                "cpu": "40",
                "ephemeral-storage": "1874806084Ki",
                "hugepages-1Gi": "2Gi",
                "hugepages-2Mi": "2000Mi",
                "memory": "197714332Ki",
                "openshift.io/onboardDPDK": "20",
                "openshift.io/pcieSRIOV": "100",
                "pods": "250"
              },
              "conditions": [
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:33Z",
                  "lastTransitionTime": "2022-10-13T15:32:50Z",
                  "message": "kubelet has sufficient memory available",
                  "reason": "KubeletHasSufficientMemory",
                  "status": "False",
                  "type": "MemoryPressure"
                },
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:33Z",
                  "lastTransitionTime": "2022-10-13T15:32:50Z",
                  "message": "kubelet has no disk pressure",
                  "reason": "KubeletHasNoDiskPressure",
                  "status": "False",
                  "type": "DiskPressure"
                },
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:33Z",
                  "lastTransitionTime": "2022-10-13T15:32:50Z",
                  "message": "kubelet has sufficient PID available",
                  "reason": "KubeletHasSufficientPID",
                  "status": "False",
                  "type": "PIDPressure"
                },
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:33Z",
                  "lastTransitionTime": "2022-10-13T15:32:50Z",
                  "message": "kubelet is posting ready status",
                  "reason": "KubeletReady",
                  "status": "True",
                  "type": "Ready"
                }
              ],
              "daemonEndpoints": {
                "kubeletEndpoint": {
                  "Port": 10250
                }
              },
              "images": [
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0c12ce723d41af21546a6ac538f336861d307882dfc703cf675ec8b10ba46a6e"
                  ],
                  "sizeBytes": 1407474762
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:be0d46f5a50a9d4770947e8c8eea773893a7e39b9a0629badbe86f1d3f00a594"
                  ],
                  "sizeBytes": 1304317045
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:11a4f413212bddf9034d92a561acf66a816f2601656fbbde3e35b6f83ff72881"
                  ],
                  "sizeBytes": 1053081717
                },
                {
                  "names": [
                    "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                    "quay.io/testnetworkfunction/cnf-test-partner:latest"
                  ],
                  "sizeBytes": 1023837255
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b52ed323365b45ceef82fc63e0e6723de825c6b1345f4234cba07ecd28aeeb24"
                  ],
                  "sizeBytes": 984771183
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/redhat-operator-index@sha256:1e692c27ac0da391258c029771c63d21eb2324b9d22db0aa567894b43214d607",
                    "registry.redhat.io/redhat/redhat-operator-index@sha256:356e84c316fd77bbd9f5afb0d861cce4e9e22156b2481bb88609d5d296c014f3",
                    "registry.redhat.io/redhat/redhat-operator-index:v4.10"
                  ],
                  "sizeBytes": 914387674
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/redhat-operator-index@sha256:4baec9151990e3f7dbdb7ef2bba600368d3d761df74853e9ba8541e0c8a8fbc3"
                  ],
                  "sizeBytes": 914260691
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/redhat-operator-index@sha256:c792dd9be78ba16d407abf939be3c882d5a195a4c7bdd1d7437f0d9023daf361"
                  ],
                  "sizeBytes": 914248411
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/redhat-operator-index@sha256:b129122970545be01fc0f4806da6ad578c51f125dfc3c187f0cb3d784c81a2ef"
                  ],
                  "sizeBytes": 914248409
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/redhat-operator-index@sha256:4fe5b9d15d082a29f5768e30eeef87116288bbccfd7a8c1aab6066efd175a69d"
                  ],
                  "sizeBytes": 914241341
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/redhat-operator-index@sha256:548d4f4b522d6e0d2bd483b14560bda6d7a5208e19835101961e8ffe6c332c8c"
                  ],
                  "sizeBytes": 913883859
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bb336a7d3c3da934aab9ec31035f0ec0e27446b1c3e8a83ca3566914e5a9f2c0"
                  ],
                  "sizeBytes": 849958063
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/community-operator-index@sha256:48b3d86ad1bb2fdeaddb95716b384d622904b2cc52b6e23371dcce0d56b0639e",
                    "registry.redhat.io/redhat/community-operator-index@sha256:b3d83f914a356c6d30b4e814093165de15e5a26e129907ed40e47fcbc46400a5",
                    "registry.redhat.io/redhat/community-operator-index:v4.10"
                  ],
                  "sizeBytes": 813450139
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/community-operator-index@sha256:474bbf1d5c0ea210a9d61cc6d84e7340ad11893b82bbdb8e39d5f9b3e2d54ce6"
                  ],
                  "sizeBytes": 813314965
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/certified-operator-index@sha256:1457e395990bda97f76097b05b6bfb65d730bdf0dd6d45dc6737045624619501",
                    "registry.redhat.io/redhat/certified-operator-index@sha256:f42b63d53e500f75d3e1e952a9a4632b050b28e9635123df5d47c019a8be488b",
                    "registry.redhat.io/redhat/certified-operator-index:v4.10"
                  ],
                  "sizeBytes": 794514307
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/certified-operator-index@sha256:e1873b977e919b48ba6d3922d679c364ec0b9361532923a70b6311b09f7090c3"
                  ],
                  "sizeBytes": 794456962
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/certified-operator-index@sha256:cc3549a7137eb0da4734128334a840ddf21078d4b61d2ba81ebdaa2d8010b517"
                  ],
                  "sizeBytes": 794403726
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/certified-operator-index@sha256:ccd2d75c8eb9dcb38d632f99b3b1479457b688496bd2e07148512bd8626ab687"
                  ],
                  "sizeBytes": 794276745
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c112ea4839c6540d2e95cae47a757d4effe43f03cbf26850dccf34496bd4ac66"
                  ],
                  "sizeBytes": 782884268
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/redhat-marketplace-index@sha256:1aec622b20815131c37767ee2147e4c5f227dd8b65b738e8f09123cdb74be069",
                    "registry.redhat.io/redhat/redhat-marketplace-index@sha256:569f757ac6b5e3fa9fd61b032317c2c370598f102f66784d37ca069382c240f9",
                    "registry.redhat.io/redhat/redhat-marketplace-index:v4.10"
                  ],
                  "sizeBytes": 769123197
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-network-config-daemon@sha256:0ceb3417f575b4f1a9f0bc573aa1344aa5edab33c9db870ffdb0183d2c97f46c",
                    "registry.redhat.io/openshift4/ose-sriov-network-config-daemon@sha256:40c72f12b43bf9122a88744b7d095d7c38d5562fc0e0d80fa1e22f860a470e59"
                  ],
                  "sizeBytes": 757031780
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ed52f6768fec23920a69e831f516bd016a358a193527f852b9813ddb7a49cae7"
                  ],
                  "sizeBytes": 657367174
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0735d3d8e6d50ad3934e512dcf51717b161c1e3de4f79b278465c3dbc3473b93"
                  ],
                  "sizeBytes": 629526552
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1019fb094294660c8da4741ac820e818b2baf4d43813feb627cfe90c0b674ba2"
                  ],
                  "sizeBytes": 615431192
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7dd4fca1f03f65c7837e3b3420d1df10ff612ac36f5f1e8ecbec0d6fc0c49659"
                  ],
                  "sizeBytes": 570251618
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:87a166dd8f21d8ba612ee0f49dc8839cb222f77156dcb67ed82e1c3ed13127cb"
                  ],
                  "sizeBytes": 550953051
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e98105dd0ee81c9c5da6772504ffe610850af371075421f16fd2389b37c69a70"
                  ],
                  "sizeBytes": 514313304
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4961daab3005237fdc1283eb091882b6a0b589ef21faac2ad92b4927ada26296"
                  ],
                  "sizeBytes": 497758868
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7a3376e6677d457d54e90d9e4b0b34f26ed4e406065c378005a9408674506527"
                  ],
                  "sizeBytes": 489140304
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8b6857a6b10bff8e941a8c51ddc2f22a821f42fef25e4ed9a7024b1de97a2000"
                  ],
                  "sizeBytes": 474093011
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:253b4a7e89bee87c58d26ce52504750bddeb4b7a4bb8e5d6d9ffcad04880e288"
                  ],
                  "sizeBytes": 471664673
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7680ef83f71e2e5d646d8fb067dc6409b83efe178c3c9a44f9ec40a8477e937a"
                  ],
                  "sizeBytes": 470817979
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:56a1dcfe82cd3aa9ec44bdcc77df93163faf48bb5d1a38d4f023d48a34c8cab6"
                  ],
                  "sizeBytes": 464298151
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6119a71fbf48dc417da82b53e2f7fcc39b72689b0cd79377433239ba6d755f79"
                  ],
                  "sizeBytes": 458398173
                },
                {
                  "names": [
                    "quay.io/testnetworkfunction/l2discovery@sha256:bdbbbee7d8b939b59d0378a3f0073f9675d50431394bf023563c7966a1798e22",
                    "quay.io/testnetworkfunction/l2discovery:v5"
                  ],
                  "sizeBytes": 458196505
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-dp-admission-controller@sha256:3bb131aa07a074cd60f90a37e04d4c282b3b907cde1b372d2ed29f712ee8c904",
                    "registry.redhat.io/openshift4/ose-sriov-dp-admission-controller@sha256:b0231f9eb1291f258c553a30cd9986181a0f02a9aa65e6ba0b43acaf0d49cfb3"
                  ],
                  "sizeBytes": 456539792
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:84be7ff78010f7a6127ee6dcc13082fff11afb502e18ebe18e258fb3f5ece84a"
                  ],
                  "sizeBytes": 451779575
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b41684d64f1f0ff932f994d8d37b96c91c19f1b725b97bbb31b5faa3656eb5"
                  ],
                  "sizeBytes": 445037368
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:83fc8253611fc117513c9b5381d1849b3fe57d24300618cfc7def83fdc7fdb88"
                  ],
                  "sizeBytes": 439670877
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:4d508967b1f1828c8aa7899dffcd2a6f08c122997c71635041515c9d2792ae2f",
                    "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:7d70a855d18d7b88815136fe1fb5dddf2707b8148f96278395cc703e38265211"
                  ],
                  "sizeBytes": 428987086
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:748fbfabc432acef10b37e564688ba5e0fe934361ecb1913e40fa4d34cdd6bd3"
                  ],
                  "sizeBytes": 426443111
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c3019d158b2671e8c37de7cc8fb03fd925387ecc6109ff3597af52d7a0feef14",
                    "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:fb9d3a8d73ae5c3258f24abe1a10b1223f648337278ff27d3dbb878341cd18f5"
                  ],
                  "sizeBytes": 424849780
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ba72e9a498eff6b1e377564f5766cc1cb5e371d107ce6e81de73b8ea66d1c9d"
                  ],
                  "sizeBytes": 420939876
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:57c07728c6c522e476fb56b6a75fea063f8d5b71b7ed90e16f95799c6e70fdc7"
                  ],
                  "sizeBytes": 420925463
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-network-operator@sha256:324f8621c5dd6a02380728d11c41fc439a52eeb43db2df8e18abcb99dc181693",
                    "registry.redhat.io/openshift4/ose-sriov-network-operator@sha256:8f66ac1bedf6f2fa56e4b4e3a8fd22fff3fb4f175a05fe82249070abc99ec960"
                  ],
                  "sizeBytes": 420625877
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3fa5ec3c07257003575c63f218236b76eb0a3175fd206eb9c6abb32b925b15c4"
                  ],
                  "sizeBytes": 419179116
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cc83500a51c225da8f897a506be19c8271bdc7839b3d1e47d9f870d00025edb6"
                  ],
                  "sizeBytes": 418584738
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ba88a2ea6c14472b499d9e0092456cbd07ee79a5378ec3cb24c4749600eace41"
                  ],
                  "sizeBytes": 418282992
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-network-webhook@sha256:33fe22ef370ca0c5a63cb7c76814538a5d121347ff5820bbdad754ed6afc3616",
                    "registry.redhat.io/openshift4/ose-sriov-network-webhook@sha256:4f5d53d74bfeec627d9fa1081a194fc7bcd0f60731ea104c6d8b0fcf6eb0ba0c"
                  ],
                  "sizeBytes": 416527290
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2787d50587694a64c146026cf9f764f8526599589504d9a43bbaa9d4bff796ae"
                  ],
                  "sizeBytes": 416408757
                }
              ],
              "nodeInfo": {
                "architecture": "amd64",
                "bootID": "c65916b4-7dd6-4d66-b71d-bacd27fdf935",
                "containerRuntimeVersion": "cri-o://1.23.3-10.rhaos4.10.git84a5d4b.el8",
                "kernelVersion": "4.18.0-305.49.1.rt7.121.el8_4.x86_64",
                "kubeProxyVersion": "v1.23.5+3afdacb",
                "kubeletVersion": "v1.23.5+3afdacb",
                "machineID": "d72363f212014bb4b5a1da8523d30e24",
                "operatingSystem": "linux",
                "osImage": "Red Hat Enterprise Linux CoreOS 410.84.202207051718-0 (Ootpa)",
                "systemUUID": "39373638-3935-584d-5130-303330324c52"
              }
            }
          },
          "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com": {
            "metadata": {
              "annotations": {
                "k8s.ovn.org/host-addresses": "[\"10.1.24.11\",\"10.1.24.4\",\"2620:52:0:118:4adf:37ff:febc:f440\"]",
                "k8s.ovn.org/l3-gateway-config": "{\"default\":{\"mode\":\"shared\",\"interface-id\":\"br-ex_worker-0.clus0.t5g.lab.eng.rdu2.redhat.com\",\"mac-address\":\"48:df:37:bc:f4:40\",\"ip-addresses\":[\"10.1.24.4/24\"],\"ip-address\":\"10.1.24.4/24\",\"next-hops\":[\"10.1.24.254\"],\"next-hop\":\"10.1.24.254\",\"node-port-enable\":\"true\",\"vlan-id\":\"0\"}}",
                "k8s.ovn.org/node-chassis-id": "b053ee54-7dc9-4217-9951-d31f58b8e863",
                "k8s.ovn.org/node-mgmt-port-mac-address": "6a:79:b7:f2:e5:80",
                "k8s.ovn.org/node-primary-ifaddr": "{\"ipv4\":\"10.1.24.4/24\"}",
                "k8s.ovn.org/node-subnets": "{\"default\":\"10.128.0.0/23\"}",
                "k8s.ovn.org/topology-version": "5",
                "machine.openshift.io/machine": "openshift-machine-api/clus0-5n49n-master-1",
                "machineconfiguration.openshift.io/controlPlaneTopology": "HighlyAvailable",
                "machineconfiguration.openshift.io/currentConfig": "rendered-master-07bc6dbd48995ea0a35bff49c230d3a5",
                "machineconfiguration.openshift.io/desiredConfig": "rendered-master-07bc6dbd48995ea0a35bff49c230d3a5",
                "machineconfiguration.openshift.io/reason": "",
                "machineconfiguration.openshift.io/state": "Done",
                "sriovnetwork.openshift.io/state": "Idle",
                "volumes.kubernetes.io/controller-managed-attach-detach": "true"
              },
              "creationTimestamp": "2022-07-16T16:38:46Z",
              "labels": {
                "beta.kubernetes.io/arch": "amd64",
                "beta.kubernetes.io/os": "linux",
                "feature.node.kubernetes.io/network-sriov.capable": "true",
                "kubernetes.io/arch": "amd64",
                "kubernetes.io/hostname": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                "kubernetes.io/os": "linux",
                "node-role.kubernetes.io/master": "",
                "node-role.kubernetes.io/worker": "",
                "node.openshift.io/os_id": "rhcos"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/l3-gateway-config": {},
                        "f:k8s.ovn.org/node-chassis-id": {},
                        "f:k8s.ovn.org/node-mgmt-port-mac-address": {},
                        "f:k8s.ovn.org/node-primary-ifaddr": {},
                        "f:k8s.ovn.org/node-subnets": {},
                        "f:k8s.ovn.org/topology-version": {},
                        "f:machine.openshift.io/machine": {}
                      }
                    },
                    "f:spec": {
                      "f:providerID": {}
                    }
                  },
                  "manager": "ancient-changes",
                  "operation": "Update",
                  "time": "2022-07-17T02:57:59Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:volumes.kubernetes.io/controller-managed-attach-detach": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:beta.kubernetes.io/arch": {},
                        "f:beta.kubernetes.io/os": {},
                        "f:kubernetes.io/arch": {},
                        "f:kubernetes.io/hostname": {},
                        "f:kubernetes.io/os": {},
                        "f:node-role.kubernetes.io/master": {},
                        "f:node.openshift.io/os_id": {}
                      }
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "time": "2022-08-10T14:54:02Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:machineconfiguration.openshift.io/currentConfig": {},
                        "f:machineconfiguration.openshift.io/reason": {},
                        "f:machineconfiguration.openshift.io/state": {}
                      }
                    }
                  },
                  "manager": "machine-config-daemon",
                  "operation": "Update",
                  "time": "2022-09-15T22:38:02Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:sriovnetwork.openshift.io/state": {}
                      }
                    }
                  },
                  "manager": "sriov-network-config-daemon",
                  "operation": "Update",
                  "time": "2022-10-06T11:11:33Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:labels": {
                        "f:feature.node.kubernetes.io/network-sriov.capable": {}
                      }
                    }
                  },
                  "manager": "Mozilla",
                  "operation": "Update",
                  "time": "2022-10-07T13:58:40Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:allocatable": {
                        "f:cpu": {},
                        "f:ephemeral-storage": {},
                        "f:hugepages-1Gi": {},
                        "f:hugepages-2Mi": {},
                        "f:memory": {},
                        "f:openshift.io/onboardDPDK": {},
                        "f:openshift.io/pcieSRIOV": {}
                      },
                      "f:capacity": {
                        "f:hugepages-1Gi": {},
                        "f:hugepages-2Mi": {},
                        "f:memory": {},
                        "f:openshift.io/onboardDPDK": {},
                        "f:openshift.io/pcieSRIOV": {}
                      },
                      "f:conditions": {
                        "k:{\"type\":\"DiskPressure\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        },
                        "k:{\"type\":\"MemoryPressure\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        },
                        "k:{\"type\":\"PIDPressure\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        }
                      },
                      "f:images": {},
                      "f:nodeInfo": {
                        "f:bootID": {},
                        "f:containerRuntimeVersion": {},
                        "f:kernelVersion": {}
                      }
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-10-07T14:51:24Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/host-addresses": {}
                      }
                    }
                  },
                  "manager": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-08T22:15:23Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:machineconfiguration.openshift.io/controlPlaneTopology": {},
                        "f:machineconfiguration.openshift.io/desiredConfig": {}
                      },
                      "f:labels": {
                        "f:node-role.kubernetes.io/worker": {}
                      }
                    }
                  },
                  "manager": "machine-config-controller",
                  "operation": "Update",
                  "time": "2022-11-09T17:18:08Z"
                }
              ],
              "name": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
              "resourceVersion": "57842162",
              "uid": "51cfa58d-ec2d-4955-bd64-4a2791e5e695"
            },
            "spec": {
              "providerID": "baremetalhost:///openshift-machine-api/worker-0/6ee39a54-a1bd-44ad-9228-b5e72808f955"
            },
            "status": {
              "addresses": [
                {
                  "address": "10.1.24.4",
                  "type": "InternalIP"
                },
                {
                  "address": "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "type": "Hostname"
                }
              ],
              "allocatable": {
                "cpu": "38",
                "ephemeral-storage": "1874806084Ki",
                "hugepages-1Gi": "2Gi",
                "hugepages-2Mi": "2000Mi",
                "memory": "192435120Ki",
                "openshift.io/onboardDPDK": "20",
                "openshift.io/pcieSRIOV": "100",
                "pods": "250"
              },
              "capacity": {
                "cpu": "40",
                "ephemeral-storage": "1874806084Ki",
                "hugepages-1Gi": "2Gi",
                "hugepages-2Mi": "2000Mi",
                "memory": "197706672Ki",
                "openshift.io/onboardDPDK": "20",
                "openshift.io/pcieSRIOV": "100",
                "pods": "250"
              },
              "conditions": [
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:24Z",
                  "lastTransitionTime": "2022-09-15T22:46:23Z",
                  "message": "kubelet has sufficient memory available",
                  "reason": "KubeletHasSufficientMemory",
                  "status": "False",
                  "type": "MemoryPressure"
                },
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:24Z",
                  "lastTransitionTime": "2022-09-15T22:46:23Z",
                  "message": "kubelet has no disk pressure",
                  "reason": "KubeletHasNoDiskPressure",
                  "status": "False",
                  "type": "DiskPressure"
                },
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:24Z",
                  "lastTransitionTime": "2022-09-15T22:46:23Z",
                  "message": "kubelet has sufficient PID available",
                  "reason": "KubeletHasSufficientPID",
                  "status": "False",
                  "type": "PIDPressure"
                },
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:24Z",
                  "lastTransitionTime": "2022-09-15T22:46:34Z",
                  "message": "kubelet is posting ready status",
                  "reason": "KubeletReady",
                  "status": "True",
                  "type": "Ready"
                }
              ],
              "daemonEndpoints": {
                "kubeletEndpoint": {
                  "Port": 10250
                }
              },
              "images": [
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0c12ce723d41af21546a6ac538f336861d307882dfc703cf675ec8b10ba46a6e"
                  ],
                  "sizeBytes": 1407474762
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:be0d46f5a50a9d4770947e8c8eea773893a7e39b9a0629badbe86f1d3f00a594"
                  ],
                  "sizeBytes": 1304317045
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:11a4f413212bddf9034d92a561acf66a816f2601656fbbde3e35b6f83ff72881"
                  ],
                  "sizeBytes": 1053081717
                },
                {
                  "names": [
                    "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                    "quay.io/testnetworkfunction/cnf-test-partner:latest"
                  ],
                  "sizeBytes": 1023837255
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bb336a7d3c3da934aab9ec31035f0ec0e27446b1c3e8a83ca3566914e5a9f2c0"
                  ],
                  "sizeBytes": 849958063
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/certified-operator-index@sha256:51f6316629edf58178f7729e2826adeae54075f497ed8e3fc78720082d13d049",
                    "registry.redhat.io/redhat/certified-operator-index@sha256:ccd2d75c8eb9dcb38d632f99b3b1479457b688496bd2e07148512bd8626ab687",
                    "registry.redhat.io/redhat/certified-operator-index:v4.10"
                  ],
                  "sizeBytes": 794276745
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c112ea4839c6540d2e95cae47a757d4effe43f03cbf26850dccf34496bd4ac66"
                  ],
                  "sizeBytes": 782884268
                },
                {
                  "names": [
                    "registry.redhat.io/redhat/redhat-marketplace-index@sha256:1aec622b20815131c37767ee2147e4c5f227dd8b65b738e8f09123cdb74be069",
                    "registry.redhat.io/redhat/redhat-marketplace-index@sha256:569f757ac6b5e3fa9fd61b032317c2c370598f102f66784d37ca069382c240f9",
                    "registry.redhat.io/redhat/redhat-marketplace-index:v4.10"
                  ],
                  "sizeBytes": 769123197
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-network-config-daemon@sha256:0ceb3417f575b4f1a9f0bc573aa1344aa5edab33c9db870ffdb0183d2c97f46c",
                    "registry.redhat.io/openshift4/ose-sriov-network-config-daemon@sha256:40c72f12b43bf9122a88744b7d095d7c38d5562fc0e0d80fa1e22f860a470e59"
                  ],
                  "sizeBytes": 757031780
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ed52f6768fec23920a69e831f516bd016a358a193527f852b9813ddb7a49cae7"
                  ],
                  "sizeBytes": 657367174
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0735d3d8e6d50ad3934e512dcf51717b161c1e3de4f79b278465c3dbc3473b93"
                  ],
                  "sizeBytes": 629526552
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:87a166dd8f21d8ba612ee0f49dc8839cb222f77156dcb67ed82e1c3ed13127cb"
                  ],
                  "sizeBytes": 550953051
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e98105dd0ee81c9c5da6772504ffe610850af371075421f16fd2389b37c69a70"
                  ],
                  "sizeBytes": 514313304
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4961daab3005237fdc1283eb091882b6a0b589ef21faac2ad92b4927ada26296"
                  ],
                  "sizeBytes": 497758868
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8b6857a6b10bff8e941a8c51ddc2f22a821f42fef25e4ed9a7024b1de97a2000"
                  ],
                  "sizeBytes": 474093011
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:253b4a7e89bee87c58d26ce52504750bddeb4b7a4bb8e5d6d9ffcad04880e288"
                  ],
                  "sizeBytes": 471664673
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7680ef83f71e2e5d646d8fb067dc6409b83efe178c3c9a44f9ec40a8477e937a"
                  ],
                  "sizeBytes": 470817979
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:56a1dcfe82cd3aa9ec44bdcc77df93163faf48bb5d1a38d4f023d48a34c8cab6"
                  ],
                  "sizeBytes": 464298151
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6119a71fbf48dc417da82b53e2f7fcc39b72689b0cd79377433239ba6d755f79"
                  ],
                  "sizeBytes": 458398173
                },
                {
                  "names": [
                    "quay.io/testnetworkfunction/l2discovery@sha256:bdbbbee7d8b939b59d0378a3f0073f9675d50431394bf023563c7966a1798e22",
                    "quay.io/testnetworkfunction/l2discovery:v5"
                  ],
                  "sizeBytes": 458196505
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-dp-admission-controller@sha256:3bb131aa07a074cd60f90a37e04d4c282b3b907cde1b372d2ed29f712ee8c904",
                    "registry.redhat.io/openshift4/ose-sriov-dp-admission-controller@sha256:b0231f9eb1291f258c553a30cd9986181a0f02a9aa65e6ba0b43acaf0d49cfb3"
                  ],
                  "sizeBytes": 456539792
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/dpdk-base-rhel8@sha256:79b690854f6befdbd99071f444e0465216940aa6cad64a2311f31dc21669e8d8",
                    "registry.redhat.io/openshift4/dpdk-base-rhel8@sha256:c89babe1159dc7f084a968a290f70f2c62d0c1c526c6243a0099d1b7f57a3e0a",
                    "registry.redhat.io/openshift4/dpdk-base-rhel8:v4.9"
                  ],
                  "sizeBytes": 452046519
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:84be7ff78010f7a6127ee6dcc13082fff11afb502e18ebe18e258fb3f5ece84a"
                  ],
                  "sizeBytes": 451779575
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b41684d64f1f0ff932f994d8d37b96c91c19f1b725b97bbb31b5faa3656eb5"
                  ],
                  "sizeBytes": 445037368
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:83fc8253611fc117513c9b5381d1849b3fe57d24300618cfc7def83fdc7fdb88"
                  ],
                  "sizeBytes": 439670877
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ce0c29a0a607a6b5ac3ea392e8b29da156b662e11ca601a40689ba7da4af691b"
                  ],
                  "sizeBytes": 438333130
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:79cfdf0364d05a02840622bf801f80c5832ddad8afd820b323f95b3f96b57354"
                  ],
                  "sizeBytes": 433782377
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:4d508967b1f1828c8aa7899dffcd2a6f08c122997c71635041515c9d2792ae2f",
                    "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:7d70a855d18d7b88815136fe1fb5dddf2707b8148f96278395cc703e38265211"
                  ],
                  "sizeBytes": 428987086
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2597f77e2a8757e8ff6e15eb5a7ab65113aa44f0382b9199c0f2553daac38487"
                  ],
                  "sizeBytes": 428230222
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:748fbfabc432acef10b37e564688ba5e0fe934361ecb1913e40fa4d34cdd6bd3"
                  ],
                  "sizeBytes": 426443111
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ba72e9a498eff6b1e377564f5766cc1cb5e371d107ce6e81de73b8ea66d1c9d"
                  ],
                  "sizeBytes": 420939876
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:57c07728c6c522e476fb56b6a75fea063f8d5b71b7ed90e16f95799c6e70fdc7"
                  ],
                  "sizeBytes": 420925463
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1b5f6a51eccc5c3f56389f3f423858f31c27ea7c6dc25d139196e9852d7b8d2d"
                  ],
                  "sizeBytes": 419650181
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cc83500a51c225da8f897a506be19c8271bdc7839b3d1e47d9f870d00025edb6"
                  ],
                  "sizeBytes": 418584738
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ba88a2ea6c14472b499d9e0092456cbd07ee79a5378ec3cb24c4749600eace41"
                  ],
                  "sizeBytes": 418282992
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:812af35a109e30a2bd2a084d220894fc14b59bab2f58d28b616d3796fba809b4"
                  ],
                  "sizeBytes": 418177602
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:146b25bd783a4ef26de48ba3d984a6c9799edbacb0cf2895b26d924fe0982d0d"
                  ],
                  "sizeBytes": 417334337
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-network-webhook@sha256:33fe22ef370ca0c5a63cb7c76814538a5d121347ff5820bbdad754ed6afc3616",
                    "registry.redhat.io/openshift4/ose-sriov-network-webhook@sha256:4f5d53d74bfeec627d9fa1081a194fc7bcd0f60731ea104c6d8b0fcf6eb0ba0c"
                  ],
                  "sizeBytes": 416527290
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2787d50587694a64c146026cf9f764f8526599589504d9a43bbaa9d4bff796ae"
                  ],
                  "sizeBytes": 416408757
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bda0266de7f68d6e368d15895f16e2201ed7a777fcf5479ead4a2ca0038754b4"
                  ],
                  "sizeBytes": 416117850
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:65e6a5433b03f5be3e11798c4b6874ecc30bc81535712c240d9aa282e00228e5"
                  ],
                  "sizeBytes": 415540772
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:841a035526ab33d076bc785dc1c430bde77d773765f2ef2e4a33452e01d26ab3"
                  ],
                  "sizeBytes": 415224883
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6eb2d82ed0bd65de1ecca019b2483b01ade5954b79d53c342449f8fcbe77044a"
                  ],
                  "sizeBytes": 413998134
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0f00662ef8bfd9cf36b7f5a7bf5321d71eb57c1a91aaf8b770b0f0b3fd931550"
                  ],
                  "sizeBytes": 413287027
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0461810622791c98ab3ad77c541d9a866d3e14eaa18ce673ca5c1cb2733894e4"
                  ],
                  "sizeBytes": 413215264
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ddd29a22d824dd1ed3623656f53f608909a23c53d99a1fec10df39f1f30f8e3a"
                  ],
                  "sizeBytes": 409685437
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:717c4a3cdc726abfbb1037a2a62fa3566e8575a05a328001e39e14d9677f5d8a"
                  ],
                  "sizeBytes": 408791356
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4c6a585c8a4f3944ab010bb89ab4fc89cc87ba9ce5428a463cfd68c9a5649f48"
                  ],
                  "sizeBytes": 401546618
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5085b404248def7058806ad61102dad09a02208777bf15fd4e275c435bd6031a"
                  ],
                  "sizeBytes": 400106412
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-release@sha256:62c995079672535662ee94ef2358ee6b0e700475c38f6502ca2d3d13d9d7de5b"
                  ],
                  "sizeBytes": 398746954
                }
              ],
              "nodeInfo": {
                "architecture": "amd64",
                "bootID": "a39ac6c6-ed19-453d-85d4-c7b6da3eb9eb",
                "containerRuntimeVersion": "cri-o://1.23.3-10.rhaos4.10.git84a5d4b.el8",
                "kernelVersion": "4.18.0-305.49.1.rt7.121.el8_4.x86_64",
                "kubeProxyVersion": "v1.23.5+3afdacb",
                "kubeletVersion": "v1.23.5+3afdacb",
                "machineID": "8689877df3ec4d24896c7b3a24f4fc1f",
                "operatingSystem": "linux",
                "osImage": "Red Hat Enterprise Linux CoreOS 410.84.202207051718-0 (Ootpa)",
                "systemUUID": "39373638-3935-584d-5130-303330324c56"
              }
            }
          },
          "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com": {
            "metadata": {
              "annotations": {
                "k8s.ovn.org/host-addresses": "[\"10.1.24.5\",\"2620:52:0:118:4adf:37ff:febc:f0e0\"]",
                "k8s.ovn.org/l3-gateway-config": "{\"default\":{\"mode\":\"shared\",\"interface-id\":\"br-ex_worker-1.clus0.t5g.lab.eng.rdu2.redhat.com\",\"mac-address\":\"48:df:37:bc:f0:e0\",\"ip-addresses\":[\"10.1.24.5/24\"],\"ip-address\":\"10.1.24.5/24\",\"next-hops\":[\"10.1.24.254\"],\"next-hop\":\"10.1.24.254\",\"node-port-enable\":\"true\",\"vlan-id\":\"0\"}}",
                "k8s.ovn.org/node-chassis-id": "26805366-203b-4697-8f59-9d702201fbfb",
                "k8s.ovn.org/node-mgmt-port-mac-address": "ce:48:24:05:09:9b",
                "k8s.ovn.org/node-primary-ifaddr": "{\"ipv4\":\"10.1.24.5/24\"}",
                "k8s.ovn.org/node-subnets": "{\"default\":\"10.129.0.0/23\"}",
                "k8s.ovn.org/topology-version": "5",
                "machine.openshift.io/machine": "openshift-machine-api/clus0-5n49n-master-2",
                "machineconfiguration.openshift.io/controlPlaneTopology": "HighlyAvailable",
                "machineconfiguration.openshift.io/currentConfig": "rendered-master-07bc6dbd48995ea0a35bff49c230d3a5",
                "machineconfiguration.openshift.io/desiredConfig": "rendered-master-07bc6dbd48995ea0a35bff49c230d3a5",
                "machineconfiguration.openshift.io/reason": "",
                "machineconfiguration.openshift.io/state": "Done",
                "sriovnetwork.openshift.io/state": "Draining_MCP_Paused",
                "volumes.kubernetes.io/controller-managed-attach-detach": "true"
              },
              "creationTimestamp": "2022-07-16T16:39:28Z",
              "labels": {
                "beta.kubernetes.io/arch": "amd64",
                "beta.kubernetes.io/os": "linux",
                "feature.node.kubernetes.io/network-sriov.capable": "true",
                "kubernetes.io/arch": "amd64",
                "kubernetes.io/hostname": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
                "kubernetes.io/os": "linux",
                "node-role.kubernetes.io/master": "",
                "node-role.kubernetes.io/worker": "",
                "node.openshift.io/os_id": "rhcos"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/l3-gateway-config": {},
                        "f:k8s.ovn.org/node-chassis-id": {},
                        "f:k8s.ovn.org/node-mgmt-port-mac-address": {},
                        "f:k8s.ovn.org/node-primary-ifaddr": {},
                        "f:k8s.ovn.org/node-subnets": {},
                        "f:k8s.ovn.org/topology-version": {},
                        "f:machine.openshift.io/machine": {}
                      }
                    },
                    "f:spec": {
                      "f:providerID": {}
                    }
                  },
                  "manager": "ancient-changes",
                  "operation": "Update",
                  "time": "2022-07-17T03:08:20Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:volumes.kubernetes.io/controller-managed-attach-detach": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:beta.kubernetes.io/arch": {},
                        "f:beta.kubernetes.io/os": {},
                        "f:kubernetes.io/arch": {},
                        "f:kubernetes.io/hostname": {},
                        "f:kubernetes.io/os": {},
                        "f:node-role.kubernetes.io/master": {},
                        "f:node.openshift.io/os_id": {}
                      }
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "time": "2022-08-10T14:54:01Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:machineconfiguration.openshift.io/currentConfig": {},
                        "f:machineconfiguration.openshift.io/reason": {},
                        "f:machineconfiguration.openshift.io/state": {}
                      }
                    }
                  },
                  "manager": "machine-config-daemon",
                  "operation": "Update",
                  "time": "2022-09-15T21:38:01Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:labels": {
                        "f:feature.node.kubernetes.io/network-sriov.capable": {}
                      }
                    }
                  },
                  "manager": "Mozilla",
                  "operation": "Update",
                  "time": "2022-10-07T13:59:05Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:k8s.ovn.org/host-addresses": {}
                      }
                    }
                  },
                  "manager": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "operation": "Update",
                  "time": "2022-11-08T22:15:23Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:status": {
                      "f:allocatable": {
                        "f:cpu": {},
                        "f:ephemeral-storage": {},
                        "f:hugepages-1Gi": {},
                        "f:hugepages-2Mi": {},
                        "f:memory": {},
                        "f:openshift.io/onboardDPDK": {},
                        "f:openshift.io/pcieSRIOV": {}
                      },
                      "f:capacity": {
                        "f:hugepages-1Gi": {},
                        "f:hugepages-2Mi": {},
                        "f:memory": {},
                        "f:openshift.io/onboardDPDK": {},
                        "f:openshift.io/pcieSRIOV": {}
                      },
                      "f:conditions": {
                        "k:{\"type\":\"DiskPressure\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        },
                        "k:{\"type\":\"MemoryPressure\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        },
                        "k:{\"type\":\"PIDPressure\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        },
                        "k:{\"type\":\"Ready\"}": {
                          "f:lastHeartbeatTime": {},
                          "f:lastTransitionTime": {},
                          "f:message": {},
                          "f:reason": {},
                          "f:status": {}
                        }
                      },
                      "f:images": {},
                      "f:nodeInfo": {
                        "f:bootID": {},
                        "f:kernelVersion": {}
                      }
                    }
                  },
                  "manager": "Go-http-client",
                  "operation": "Update",
                  "subresource": "status",
                  "time": "2022-11-08T22:32:15Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:sriovnetwork.openshift.io/state": {}
                      }
                    }
                  },
                  "manager": "sriov-network-config-daemon",
                  "operation": "Update",
                  "time": "2022-11-09T09:42:34Z"
                },
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        "f:machineconfiguration.openshift.io/controlPlaneTopology": {},
                        "f:machineconfiguration.openshift.io/desiredConfig": {}
                      },
                      "f:labels": {
                        "f:node-role.kubernetes.io/worker": {}
                      }
                    }
                  },
                  "manager": "machine-config-controller",
                  "operation": "Update",
                  "time": "2022-11-09T17:18:08Z"
                }
              ],
              "name": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
              "resourceVersion": "57842135",
              "uid": "758978c3-cd28-4bb1-87aa-dec3b4e812d1"
            },
            "spec": {
              "providerID": "baremetalhost:///openshift-machine-api/worker-1/b4883eca-73f8-4ba0-8f51-e7cc334766a8"
            },
            "status": {
              "addresses": [
                {
                  "address": "10.1.24.5",
                  "type": "InternalIP"
                },
                {
                  "address": "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com",
                  "type": "Hostname"
                }
              ],
              "allocatable": {
                "cpu": "38",
                "ephemeral-storage": "1874806084Ki",
                "hugepages-1Gi": "2Gi",
                "hugepages-2Mi": "2000Mi",
                "memory": "192442796Ki",
                "openshift.io/onboardDPDK": "20",
                "openshift.io/pcieSRIOV": "100",
                "pods": "250"
              },
              "capacity": {
                "cpu": "40",
                "ephemeral-storage": "1874806084Ki",
                "hugepages-1Gi": "2Gi",
                "hugepages-2Mi": "2000Mi",
                "memory": "197714348Ki",
                "openshift.io/onboardDPDK": "20",
                "openshift.io/pcieSRIOV": "100",
                "pods": "250"
              },
              "conditions": [
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:20Z",
                  "lastTransitionTime": "2022-11-08T22:32:15Z",
                  "message": "kubelet has sufficient memory available",
                  "reason": "KubeletHasSufficientMemory",
                  "status": "False",
                  "type": "MemoryPressure"
                },
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:20Z",
                  "lastTransitionTime": "2022-11-08T22:32:15Z",
                  "message": "kubelet has no disk pressure",
                  "reason": "KubeletHasNoDiskPressure",
                  "status": "False",
                  "type": "DiskPressure"
                },
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:20Z",
                  "lastTransitionTime": "2022-11-08T22:32:15Z",
                  "message": "kubelet has sufficient PID available",
                  "reason": "KubeletHasSufficientPID",
                  "status": "False",
                  "type": "PIDPressure"
                },
                {
                  "lastHeartbeatTime": "2022-11-09T18:25:20Z",
                  "lastTransitionTime": "2022-11-08T22:32:15Z",
                  "message": "kubelet is posting ready status",
                  "reason": "KubeletReady",
                  "status": "True",
                  "type": "Ready"
                }
              ],
              "daemonEndpoints": {
                "kubeletEndpoint": {
                  "Port": 10250
                }
              },
              "images": [
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0c12ce723d41af21546a6ac538f336861d307882dfc703cf675ec8b10ba46a6e"
                  ],
                  "sizeBytes": 1407474762
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:11a4f413212bddf9034d92a561acf66a816f2601656fbbde3e35b6f83ff72881"
                  ],
                  "sizeBytes": 1053081717
                },
                {
                  "names": [
                    "quay.io/testnetworkfunction/cnf-test-partner@sha256:8efce7f291b8756c22a06adce220cb7da01c3464bb643b9a2370eeb9924df5b9",
                    "quay.io/testnetworkfunction/cnf-test-partner:latest"
                  ],
                  "sizeBytes": 1023837255
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bb336a7d3c3da934aab9ec31035f0ec0e27446b1c3e8a83ca3566914e5a9f2c0"
                  ],
                  "sizeBytes": 849958063
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c112ea4839c6540d2e95cae47a757d4effe43f03cbf26850dccf34496bd4ac66"
                  ],
                  "sizeBytes": 782884268
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-network-config-daemon@sha256:0ceb3417f575b4f1a9f0bc573aa1344aa5edab33c9db870ffdb0183d2c97f46c",
                    "registry.redhat.io/openshift4/ose-sriov-network-config-daemon@sha256:40c72f12b43bf9122a88744b7d095d7c38d5562fc0e0d80fa1e22f860a470e59"
                  ],
                  "sizeBytes": 757031780
                },
                {
                  "names": [
                    "gcr.io/google-samples/node-hello@sha256:d238d0ab54efb76ec0f7b1da666cefa9b40be59ef34346a761b8adc2dd45459b",
                    "gcr.io/google-samples/node-hello:1.0"
                  ],
                  "sizeBytes": 664710780
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ed52f6768fec23920a69e831f516bd016a358a193527f852b9813ddb7a49cae7"
                  ],
                  "sizeBytes": 657367174
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0735d3d8e6d50ad3934e512dcf51717b161c1e3de4f79b278465c3dbc3473b93"
                  ],
                  "sizeBytes": 629526552
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7dd4fca1f03f65c7837e3b3420d1df10ff612ac36f5f1e8ecbec0d6fc0c49659"
                  ],
                  "sizeBytes": 570251618
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:87a166dd8f21d8ba612ee0f49dc8839cb222f77156dcb67ed82e1c3ed13127cb"
                  ],
                  "sizeBytes": 550953051
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e98105dd0ee81c9c5da6772504ffe610850af371075421f16fd2389b37c69a70"
                  ],
                  "sizeBytes": 514313304
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4961daab3005237fdc1283eb091882b6a0b589ef21faac2ad92b4927ada26296"
                  ],
                  "sizeBytes": 497758868
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8b6857a6b10bff8e941a8c51ddc2f22a821f42fef25e4ed9a7024b1de97a2000"
                  ],
                  "sizeBytes": 474093011
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:253b4a7e89bee87c58d26ce52504750bddeb4b7a4bb8e5d6d9ffcad04880e288"
                  ],
                  "sizeBytes": 471664673
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7680ef83f71e2e5d646d8fb067dc6409b83efe178c3c9a44f9ec40a8477e937a"
                  ],
                  "sizeBytes": 470817979
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:56a1dcfe82cd3aa9ec44bdcc77df93163faf48bb5d1a38d4f023d48a34c8cab6"
                  ],
                  "sizeBytes": 464298151
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6119a71fbf48dc417da82b53e2f7fcc39b72689b0cd79377433239ba6d755f79"
                  ],
                  "sizeBytes": 458398173
                },
                {
                  "names": [
                    "quay.io/testnetworkfunction/l2discovery@sha256:bdbbbee7d8b939b59d0378a3f0073f9675d50431394bf023563c7966a1798e22",
                    "quay.io/testnetworkfunction/l2discovery:v5"
                  ],
                  "sizeBytes": 458196505
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-dp-admission-controller@sha256:3bb131aa07a074cd60f90a37e04d4c282b3b907cde1b372d2ed29f712ee8c904",
                    "registry.redhat.io/openshift4/ose-sriov-dp-admission-controller@sha256:b0231f9eb1291f258c553a30cd9986181a0f02a9aa65e6ba0b43acaf0d49cfb3"
                  ],
                  "sizeBytes": 456539792
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:83fc8253611fc117513c9b5381d1849b3fe57d24300618cfc7def83fdc7fdb88"
                  ],
                  "sizeBytes": 439670877
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:4d508967b1f1828c8aa7899dffcd2a6f08c122997c71635041515c9d2792ae2f",
                    "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:7d70a855d18d7b88815136fe1fb5dddf2707b8148f96278395cc703e38265211"
                  ],
                  "sizeBytes": 428987086
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:748fbfabc432acef10b37e564688ba5e0fe934361ecb1913e40fa4d34cdd6bd3"
                  ],
                  "sizeBytes": 426443111
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c3019d158b2671e8c37de7cc8fb03fd925387ecc6109ff3597af52d7a0feef14",
                    "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:fb9d3a8d73ae5c3258f24abe1a10b1223f648337278ff27d3dbb878341cd18f5"
                  ],
                  "sizeBytes": 424849780
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ba72e9a498eff6b1e377564f5766cc1cb5e371d107ce6e81de73b8ea66d1c9d"
                  ],
                  "sizeBytes": 420939876
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:57c07728c6c522e476fb56b6a75fea063f8d5b71b7ed90e16f95799c6e70fdc7"
                  ],
                  "sizeBytes": 420925463
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-network-operator@sha256:324f8621c5dd6a02380728d11c41fc439a52eeb43db2df8e18abcb99dc181693",
                    "registry.redhat.io/openshift4/ose-sriov-network-operator@sha256:8f66ac1bedf6f2fa56e4b4e3a8fd22fff3fb4f175a05fe82249070abc99ec960"
                  ],
                  "sizeBytes": 420625877
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cc83500a51c225da8f897a506be19c8271bdc7839b3d1e47d9f870d00025edb6"
                  ],
                  "sizeBytes": 418584738
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ba88a2ea6c14472b499d9e0092456cbd07ee79a5378ec3cb24c4749600eace41"
                  ],
                  "sizeBytes": 418282992
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-network-webhook@sha256:33fe22ef370ca0c5a63cb7c76814538a5d121347ff5820bbdad754ed6afc3616",
                    "registry.redhat.io/openshift4/ose-sriov-network-webhook@sha256:4f5d53d74bfeec627d9fa1081a194fc7bcd0f60731ea104c6d8b0fcf6eb0ba0c"
                  ],
                  "sizeBytes": 416527290
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2787d50587694a64c146026cf9f764f8526599589504d9a43bbaa9d4bff796ae"
                  ],
                  "sizeBytes": 416408757
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bda0266de7f68d6e368d15895f16e2201ed7a777fcf5479ead4a2ca0038754b4"
                  ],
                  "sizeBytes": 416117850
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-cluster-nfd-operator@sha256:caa8ed0e86210f1b7a14ed49f84a6b4acb8780a6b6dad8522e5d7f3849014f75",
                    "registry.redhat.io/openshift4/ose-cluster-nfd-operator@sha256:cca2d3e4471b626c24dedb6ebe1beedbd47158ebc8c52fea14c555fe731a909a"
                  ],
                  "sizeBytes": 415020810
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6eb2d82ed0bd65de1ecca019b2483b01ade5954b79d53c342449f8fcbe77044a"
                  ],
                  "sizeBytes": 413998134
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0f00662ef8bfd9cf36b7f5a7bf5321d71eb57c1a91aaf8b770b0f0b3fd931550"
                  ],
                  "sizeBytes": 413287027
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0461810622791c98ab3ad77c541d9a866d3e14eaa18ce673ca5c1cb2733894e4"
                  ],
                  "sizeBytes": 413215264
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ddd29a22d824dd1ed3623656f53f608909a23c53d99a1fec10df39f1f30f8e3a"
                  ],
                  "sizeBytes": 409685437
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:717c4a3cdc726abfbb1037a2a62fa3566e8575a05a328001e39e14d9677f5d8a"
                  ],
                  "sizeBytes": 408791356
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4c6a585c8a4f3944ab010bb89ab4fc89cc87ba9ce5428a463cfd68c9a5649f48"
                  ],
                  "sizeBytes": 401546618
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5085b404248def7058806ad61102dad09a02208777bf15fd4e275c435bd6031a"
                  ],
                  "sizeBytes": 400106412
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e8ccc0bc92245b24afc762c98b24ecbf24a9b28a7d4fe497de790e761633411"
                  ],
                  "sizeBytes": 398484159
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:037a178d5e046fdae2d51a7e758713adcb57348471fde203e0bd3af4c6f7b77b"
                  ],
                  "sizeBytes": 394994101
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-infiniband-cni@sha256:76c5b38743ac8cb770d33971f75228e84408104699b4d63b34ee7326609c2e95",
                    "registry.redhat.io/openshift4/ose-sriov-infiniband-cni@sha256:adcd783ecc04268c30c6bef30f2699e7b928d77c4d3328b4aff3e9fadb8c134d"
                  ],
                  "sizeBytes": 386841596
                },
                {
                  "names": [
                    "registry.redhat.io/openshift4/ose-sriov-cni@sha256:1984f117092cc25c32644dc6c27cc4c1f5abc22ce1045692d70ab7fb5fc9cf4e",
                    "registry.redhat.io/openshift4/ose-sriov-cni@sha256:be738a1ee941e9e802b30e9a3c52c971d22dadb2e2682cc1ad77f1c761926f5a"
                  ],
                  "sizeBytes": 385622200
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e8dc92312868e94d808e36b972a8202d43f3ab3d3ed4088ed3e96f0445f02a37"
                  ],
                  "sizeBytes": 381736628
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d2f400620b99bee4f7aa646df29ccefbba99111aae48a0b8b55579e12c7e9641"
                  ],
                  "sizeBytes": 380533397
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6c7f41cd2202ff4a687baff9133a1ccba8e77311b96cef2a781831353db90be4"
                  ],
                  "sizeBytes": 376828335
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7126d7321ba855bf24aa4e7e03ac92c5ecacc19ad567ab6fbd3b3e2b2b991e4f"
                  ],
                  "sizeBytes": 375692004
                },
                {
                  "names": [
                    "quay.io/openshift/origin-ptp-operator@sha256:ab594f77414926a105a1c54ad1028e4b297258f4501ad6b8a4b732205e8c20a1",
                    "quay.io/openshift/origin-ptp-operator:4.12"
                  ],
                  "sizeBytes": 372388752
                },
                {
                  "names": [
                    "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8b2d4b65d1eed177da19d92889a7258e9c01bb68f2ec678e5402163961f3a61d"
                  ],
                  "sizeBytes": 370314224
                }
              ],
              "nodeInfo": {
                "architecture": "amd64",
                "bootID": "c6dde346-40ec-4a8d-96a1-cbd618fc33a6",
                "containerRuntimeVersion": "cri-o://1.23.3-10.rhaos4.10.git84a5d4b.el8",
                "kernelVersion": "4.18.0-305.49.1.rt7.121.el8_4.x86_64",
                "kubeProxyVersion": "v1.23.5+3afdacb",
                "kubeletVersion": "v1.23.5+3afdacb",
                "machineID": "206fcb3911a440eca9e815bba788e49b",
                "operatingSystem": "linux",
                "osImage": "Red Hat Enterprise Linux CoreOS 410.84.202207051718-0 (Ootpa)",
                "systemUUID": "39373638-3935-584d-5130-303330324c53"
              }
            }
          }
        },
        "nodesHwInfo": {
          "master-2.clus0.t5g.lab.eng.rdu2.redhat.com": {
            "Lscpu": null,
            "IPconfig": null,
            "Lsblk": null,
            "Lspci": null
          },
          "worker-0.clus0.t5g.lab.eng.rdu2.redhat.com": {
            "Lscpu": null,
            "IPconfig": null,
            "Lsblk": null,
            "Lspci": null
          },
          "worker-1.clus0.t5g.lab.eng.rdu2.redhat.com": {
            "Lscpu": null,
            "IPconfig": null,
            "Lsblk": null,
            "Lspci": null
          }
        }
      },
      "rawResults": {
        "cnf-certification-test": {
          "testsuites": {
            "-disabled": "70",
            "-errors": "0",
            "-failures": "1",
            "-tests": "76",
            "-time": "1.667900075",
            "testsuite": {
              "-disabled": "0",
              "-errors": "0",
              "-failures": "1",
              "-name": "CNF Certification Test Suite",
              "-package": "/Users/amal/tnf/cnf-certification-test/cnf-certification-test",
              "-skipped": "70",
              "-tests": "76",
              "-time": "1.667900075",
              "-timestamp": "2022-10-24T15:10:51",
              "properties": {
                "property": [
                  {
                    "-name": "SuiteSucceeded",
                    "-value": "false"
                  },
                  {
                    "-name": "SuiteHasProgrammaticFocus",
                    "-value": "false"
                  },
                  {
                    "-name": "SpecialSuiteFailureReason",
                    "-value": ""
                  },
                  {
                    "-name": "SuiteLabels",
                    "-value": "[]"
                  },
                  {
                    "-name": "RandomSeed",
                    "-value": "1666613343"
                  },
                  {
                    "-name": "RandomizeAllSpecs",
                    "-value": "false"
                  },
                  {
                    "-name": "LabelFilter",
                    "-value": "extended"
                  },
                  {
                    "-name": "FocusStrings",
                    "-value": ""
                  },
                  {
                    "-name": "SkipStrings",
                    "-value": ""
                  },
                  {
                    "-name": "FocusFiles",
                    "-value": ""
                  },
                  {
                    "-name": "SkipFiles",
                    "-value": ""
                  },
                  {
                    "-name": "FailOnPending",
                    "-value": "false"
                  },
                  {
                    "-name": "FailFast",
                    "-value": "false"
                  },
                  {
                    "-name": "FlakeAttempts",
                    "-value": "0"
                  },
                  {
                    "-name": "EmitSpecProgress",
                    "-value": "false"
                  },
                  {
                    "-name": "DryRun",
                    "-value": "false"
                  },
                  {
                    "-name": "ParallelTotal",
                    "-value": "1"
                  },
                  {
                    "-name": "OutputInterceptorMode",
                    "-value": ""
                  }
                ]
              },
              "testcase": [
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] observability observability-container-logging [common, observability, observability-container-logging]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] observability observability-crd-status [common, observability, observability-crd-status]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] observability observability-termination-policy [common, observability, observability-termination-policy]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] observability observability-pod-disruption-budget [common, observability, observability-pod-disruption-budget]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-container-shutdown [common, lifecycle, lifecycle-container-shutdown]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-container-startup [common, lifecycle, lifecycle-container-startup]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-image-pull-policy [common, lifecycle, lifecycle-image-pull-policy]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-readiness-probe [common, lifecycle, lifecycle-readiness-probe]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-liveness-probe [common, lifecycle, lifecycle-liveness-probe]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-startup-probe [common, lifecycle, lifecycle-startup-probe]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-pod-owner-type [common, lifecycle, lifecycle-pod-owner-type]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-pod-high-availability [common, lifecycle, lifecycle-pod-high-availability]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-pod-scheduling [common, lifecycle, lifecycle-pod-scheduling]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-pod-recreation [common, lifecycle, lifecycle-pod-recreation]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-deployment-scaling [common, lifecycle, lifecycle-deployment-scaling]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-statefulset-scaling [common, lifecycle, lifecycle-statefulset-scaling]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-persistent-volume-reclaim-policy [common, lifecycle, lifecycle-persistent-volume-reclaim-policy]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-cpu-isolation [common, lifecycle, lifecycle-cpu-isolation]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-affinity-required-pods [extended, lifecycle, lifecycle-affinity-required-pods]",
                  "-status": "skipped",
                  "-time": "0.000272749",
                  "skipped": {
                    "-message": "skipped - Test skipped because there are no []*provider.Pod to test, please check under test labels"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-affinity-required-statefulsets [extended, lifecycle, lifecycle-affinity-required-statefulsets]",
                  "-status": "skipped",
                  "-time": "0.000262351",
                  "skipped": {
                    "-message": "skipped - Test skipped because there are no []*provider.StatefulSet to test, please check under test labels"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] lifecycle lifecycle-affinity-required-deployments [extended, lifecycle, lifecycle-affinity-required-deployments]",
                  "-status": "skipped",
                  "-time": "0.000171841",
                  "skipped": {
                    "-message": "skipped - Test skipped because there are no []*provider.Deployment to test, please check under test labels"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] manageability manageability-containers-image-tag [extended, manageability, manageability-containers-image-tag]",
                  "-status": "passed",
                  "-time": "0.000154618"
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] manageability manageability-container-port-name-format [extended, manageability, manageability-container-port-name-format]",
                  "-status": "passed",
                  "-time": "1.7481e-05"
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] affiliated-certification affiliated-certification-container-is-certified [common, online, affiliated-certification, affiliated-certification-container-is-certified]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] affiliated-certification affiliated-certification-operator-is-certified [common, online, affiliated-certification, affiliated-certification-operator-is-certified]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] affiliated-certification affiliated-certification-helmchart-is-certified [common, online, affiliated-certification, affiliated-certification-helmchart-is-certified]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] affiliated-certification affiliated-certification-container-is-certified-digest [extended, affiliated-certification, affiliated-certification-container-is-certified-digest]",
                  "-status": "failed",
                  "-time": "0.49802374",
                  "failure": {
                    "#content": "/Users/amal/tnf/cnf-certification-test/pkg/testhelper/testhelper.go:82\ngithub.com/test-network-function/cnf-certification-test/pkg/testhelper.AddTestResultLog({0x5d2bf6f, 0xd}, {0x58d30c0, 0xc0016c2018?}, 0x5e5dca8, 0x5e5d880)\n\t/Users/amal/tnf/cnf-certification-test/pkg/testhelper/testhelper.go:82 +0x3c8\ngithub.com/test-network-function/cnf-certification-test/cnf-certification-test/certification.testContainerCertificationStatusByDigest(0x0?)\n\t/Users/amal/tnf/cnf-certification-test/cnf-certification-test/certification/suite.go:171 +0x5f6\ngithub.com/test-network-function/cnf-certification-test/cnf-certification-test/certification.glob..func1.5()\n\t/Users/amal/tnf/cnf-certification-test/cnf-certification-test/certification/suite.go:70 +0x1d",
                    "-message": "Number of Non-compliant []configuration.ContainerImageIdentifier = 4",
                    "-type": "failed"
                  },
                  "system-err": "container: test pod: test-0 ns: tnf is missing digest field, failing validation (repo=testnetworkfunction image=cnf-test-partner)\ncontainer: test pod: test-1 ns: tnf is missing digest field, failing validation (repo=testnetworkfunction image=cnf-test-partner)\ncontainer: test pod: test-599c9ffff9-7m59z ns: tnf is missing digest field, failing validation (repo=testnetworkfunction image=cnf-test-partner)\ncontainer: test pod: test-599c9ffff9-pkrfn ns: tnf is missing digest field, failing validation (repo=testnetworkfunction image=cnf-test-partner)\nNon-compliant []configuration.ContainerImageIdentifier: [{cnf-test-partner testnetworkfunction latest } {cnf-test-partner testnetworkfunction latest } {cnf-test-partner testnetworkfunction latest } {cnf-test-partner testnetworkfunction latest }]"
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-security-context-capabilities-check [common, access-control, access-control-security-context-capabilities-check]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-security-context-non-root-user-check [common, access-control, access-control-security-context-non-root-user-check]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-security-context-privilege-escalation [common, access-control, access-control-security-context-privilege-escalation]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-container-host-port [common, access-control, access-control-container-host-port]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-pod-host-network [common, access-control, access-control-pod-host-network]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-pod-host-path [common, access-control, access-control-pod-host-path]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-pod-host-ipc [common, access-control, access-control-pod-host-ipc]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-pod-host-pid [common, access-control, access-control-pod-host-pid]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-namespace [common, access-control, access-control-namespace]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-pod-service-account [common, access-control, access-control-pod-service-account]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-pod-role-bindings [common, access-control, access-control-pod-role-bindings]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-cluster-role-bindings [common, access-control, access-control-cluster-role-bindings]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-pod-automount-service-account-token [common, access-control, access-control-pod-automount-service-account-token]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-one-process-per-container [common, access-control, access-control-one-process-per-container]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-sys-nice-realtime-capability [common, access-control, access-control-sys-nice-realtime-capability]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-sys-ptrace-capability [common, access-control, access-control-sys-ptrace-capability]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-pod-toleration-bypass [common, access-control, access-control-pod-toleration-bypass]",
                  "-status": "pass",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-ssh-daemons [common, access-control, access-control-ssh-daemons]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-requests-and-limits [common, access-control, access-control-requests-and-limits]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] access-control access-control-no-1337-uid [extended, access-control, access-control-no-1337-uid]",
                  "-status": "passed",
                  "-time": "0.000319168",
                  "system-err": "�[1mSTEP:�[0m Testing pods to ensure none are using UID 1337 �[38;5;243m10/24/22 15:10:52.095�[0m\n�[1mSTEP:�[0m checking if pod test-0 has a securityContext RunAsUser 1337 (ns= tnf) �[38;5;243m10/24/22 15:10:52.095�[0m\n�[1mSTEP:�[0m checking if pod test-1 has a securityContext RunAsUser 1337 (ns= tnf) �[38;5;243m10/24/22 15:10:52.095�[0m\n�[1mSTEP:�[0m checking if pod test-599c9ffff9-7m59z has a securityContext RunAsUser 1337 (ns= tnf) �[38;5;243m10/24/22 15:10:52.095�[0m\n�[1mSTEP:�[0m checking if pod test-599c9ffff9-pkrfn has a securityContext RunAsUser 1337 (ns= tnf) �[38;5;243m10/24/22 15:10:52.095�[0m",
                  "system-out": "Report Entries:\nBy Step\n/Users/amal/tnf/cnf-certification-test/cnf-certification-test/accesscontrol/suite.go:601\n2022-10-24T15:10:52.095291+03:00\n\u0026{Text:Testing pods to ensure none are using UID 1337 Duration:0s}\n--\nBy Step\n/Users/amal/tnf/cnf-certification-test/cnf-certification-test/accesscontrol/suite.go:605\n2022-10-24T15:10:52.095373+03:00\n\u0026{Text:checking if pod test-0 has a securityContext RunAsUser 1337 (ns= tnf) Duration:0s}\n--\nBy Step\n/Users/amal/tnf/cnf-certification-test/cnf-certification-test/accesscontrol/suite.go:605\n2022-10-24T15:10:52.095403+03:00\n\u0026{Text:checking if pod test-1 has a securityContext RunAsUser 1337 (ns= tnf) Duration:0s}\n--\nBy Step\n/Users/amal/tnf/cnf-certification-test/cnf-certification-test/accesscontrol/suite.go:605\n2022-10-24T15:10:52.095452+03:00\n\u0026{Text:checking if pod test-599c9ffff9-7m59z has a securityContext RunAsUser 1337 (ns= tnf) Duration:0s}\n--\nBy Step\n/Users/amal/tnf/cnf-certification-test/cnf-certification-test/accesscontrol/suite.go:605\n2022-10-24T15:10:52.095491+03:00\n\u0026{Text:checking if pod test-599c9ffff9-pkrfn has a securityContext RunAsUser 1337 (ns= tnf) Duration:0s}"
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] operator operator-install-status-succeeded [common, operator, operator-install-status-succeeded]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] operator operator-install-status-no-privileges [common, operator, operator-install-status-no-privileges]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] operator operator-install-source [common, operator, operator-install-source]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] chaostesting chaostesting-pod-delete [common, chaostesting, chaostesting-pod-delete]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] platform-alteration platform-alteration-base-image [common, platform-alteration, platform-alteration-base-image]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] platform-alteration platform-alteration-tainted-node-kernel [common, platform-alteration, platform-alteration-tainted-node-kernel]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] platform-alteration platform-alteration-isredhat-release [common, platform-alteration, platform-alteration-isredhat-release]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] platform-alteration platform-alteration-is-selinux-enforcing [common, platform-alteration, platform-alteration-is-selinux-enforcing]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] platform-alteration platform-alteration-hugepages-config [common, platform-alteration, platform-alteration-hugepages-config]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] platform-alteration platform-alteration-boot-params [common, platform-alteration, platform-alteration-boot-params]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] platform-alteration platform-alteration-sysctl-config [common, platform-alteration, platform-alteration-sysctl-config]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] platform-alteration platform-alteration-service-mesh-usage [common, platform-alteration, platform-alteration-service-mesh-usage]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] platform-alteration platform-alteration-ocp-lifecycle [common, platform-alteration, platform-alteration-ocp-lifecycle]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] platform-alteration platform-alteration-ocp-node-os-lifecycle [common, platform-alteration, platform-alteration-ocp-node-os-lifecycle]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] platform-alteration platform-alteration-hugepages-2m-only [extended, platform-alteration, platform-alteration-hugepages-2m-only]",
                  "-status": "passed",
                  "-time": "2.2029e-05"
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] cnfextensions cnfextensions-example [mytag, pre_release, cnfextensions, cnfextensions-example]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-icmpv4-connectivity [common, networking, networking-icmpv4-connectivity]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-icmpv4-connectivity-multus [common, networking, networking-icmpv4-connectivity-multus]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-icmpv6-connectivity [common, networking, networking-icmpv6-connectivity]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-icmpv6-connectivity-multus [common, networking, networking-icmpv6-connectivity-multus]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-undeclared-container-ports-usage [common, networking, networking-undeclared-container-ports-usage]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-service-type [common, networking, networking-service-type]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-ocp-reserved-ports-usage [common, networking, networking-ocp-reserved-ports-usage]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-dual-stack-service [common, networking, networking-dual-stack-service]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-nftables [common, networking, networking-nftables]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-iptables [common, networking, networking-iptables]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-network-policy-deny-all [common, networking, networking-network-policy-deny-all]",
                  "-status": "skipped",
                  "-time": "0",
                  "skipped": {
                    "-message": "skipped"
                  }
                },
                {
                  "-classname": "CNF Certification Test Suite",
                  "-name": "[It] networking networking-reserved-partner-ports [extended, networking, networking-reserved-partner-ports]",
                  "-status": "passed",
                  "-time": "1.165313187"
                }
              ]
            }
          }
        },
        "testsExtraInfo": ""
      },
      "results": {
        "access-control-cluster-role-bindings": [
          {
            "CapturedTestOutput": "",
            "duration": 1294064068,
            "endTime": "2022-11-09 20:27:53.4149 +0200 IST m=+46.689290175",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:52.120842 +0200 IST m=+45.395226107",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/cluster-role-bindings",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/cluster-role-bindings Tests that a Pod does not specify ClusterRoleBindings."
          }
        ],
        "access-control-container-host-port": [
          {
            "CapturedTestOutput": "",
            "duration": 27316,
            "endTime": "2022-11-09 20:27:50.832099 +0200 IST m=+44.106477434",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.832071 +0200 IST m=+44.106450118",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/container-host-port",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/container-host-port Verifies if containers define a hostPort."
          }
        ],
        "access-control-namespace": [
          {
            "CapturedTestOutput": "",
            "duration": 165831084,
            "endTime": "2022-11-09 20:27:50.998194 +0200 IST m=+44.272573454",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.832364 +0200 IST m=+44.106742370",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/namespace",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/namespace Tests that all CNF's resources (PUTs and CRs) belong to valid namespaces. A valid namespace meets\nthe following conditions: (1) It was declared in the yaml config file under the targetNameSpaces\ntag. (2) It doesn't have any of the following prefixes: default, openshift-, istio- and aspenmesh-"
          }
        ],
        "access-control-namespace-resource-quota": [
          {
            "CapturedTestOutput": "",
            "duration": 70991,
            "endTime": "2022-11-09 20:28:08.41383 +0200 IST m=+61.688286696",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:08.413759 +0200 IST m=+61.688215705",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/namespace-resource-quota",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/namespace-resource-quota Checks to see if CNF workload pods are running in namespaces that have resource quotas applied."
          }
        ],
        "access-control-no-1337-uid": [
          {
            "CapturedTestOutput": "",
            "duration": 118193,
            "endTime": "2022-11-09 20:28:14.971836 +0200 IST m=+68.246321736",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.971718 +0200 IST m=+68.246203543",
            "state": "passed",
            "testID": {
              "tags": "extended",
              "url": "http://test-network-function.com/testcases/access-control/no-1337-uid",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/no-1337-uid Checks that all pods are not using the securityContext UID 1337"
          }
        ],
        "access-control-one-process-per-container": [
          {
            "CapturedTestOutput": "",
            "duration": 14008564769,
            "endTime": "2022-11-09 20:28:08.41237 +0200 IST m=+61.686827290",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:54.403868 +0200 IST m=+47.678262521",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/one-process-per-container",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/one-process-per-container Check that all containers under test have only one process running"
          }
        ],
        "access-control-pod-automount-service-account-token": [
          {
            "CapturedTestOutput": "",
            "duration": 988686278,
            "endTime": "2022-11-09 20:27:54.40371 +0200 IST m=+47.678104650",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:53.415028 +0200 IST m=+46.689418372",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/pod-automount-service-account-token",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/pod-automount-service-account-token Check that all pods under test have automountServiceAccountToken set to false"
          }
        ],
        "access-control-pod-host-ipc": [
          {
            "CapturedTestOutput": "",
            "duration": 21913,
            "endTime": "2022-11-09 20:27:50.832281 +0200 IST m=+44.106659485",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.832259 +0200 IST m=+44.106637572",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/pod-host-ipc",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/pod-host-ipc Verifies that the spec.HostIpc parameter is set to false"
          }
        ],
        "access-control-pod-host-network": [
          {
            "CapturedTestOutput": "",
            "duration": 24792,
            "endTime": "2022-11-09 20:27:50.832161 +0200 IST m=+44.106540135",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.832137 +0200 IST m=+44.106515343",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/pod-host-network",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/pod-host-network Verifies that the spec.HostNetwork parameter is set to false"
          }
        ],
        "access-control-pod-host-path": [
          {
            "CapturedTestOutput": "",
            "duration": 31360,
            "endTime": "2022-11-09 20:27:50.832224 +0200 IST m=+44.106603144",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.832193 +0200 IST m=+44.106571784",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/pod-host-path",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/pod-host-path Verifies that the spec.HostPath parameter is not set (not present)"
          }
        ],
        "access-control-pod-host-pid": [
          {
            "CapturedTestOutput": "",
            "duration": 23384,
            "endTime": "2022-11-09 20:27:50.832334 +0200 IST m=+44.106712447",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.83231 +0200 IST m=+44.106689063",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/pod-host-pid",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/pod-host-pid Verifies that the spec.HostPid parameter is set to false"
          }
        ],
        "access-control-pod-role-bindings": [
          {
            "CapturedTestOutput": "",
            "duration": 1122092314,
            "endTime": "2022-11-09 20:27:52.120653 +0200 IST m=+45.395037447",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.998566 +0200 IST m=+44.272945133",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/pod-role-bindings",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/pod-role-bindings Ensures that a CNF does not utilize RoleBinding(s) in a non-CNF Namespace."
          }
        ],
        "access-control-pod-service-account": [
          {
            "CapturedTestOutput": "",
            "duration": 107494,
            "endTime": "2022-11-09 20:27:50.998432 +0200 IST m=+44.272811077",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.998324 +0200 IST m=+44.272703583",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/pod-service-account",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/pod-service-account Tests that each CNF Pod utilizes a valid Service Account."
          }
        ],
        "access-control-pod-toleration-bypass": [
          {
            "CapturedTestOutput": "",
            "duration": 46089,
            "endTime": "2022-11-09 20:28:08.413937 +0200 IST m=+61.688394022",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:08.413891 +0200 IST m=+61.688347933",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/pod-toleration-bypass",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/pod-toleration-bypass Check that pods do not have NoExecute, PreferNoSchedule, or NoSchedule tolerations that have been modified from the default."
          }
        ],
        "access-control-requests-and-limits": [
          {
            "CapturedTestOutput": "Container has been found missing resource limits: container: test pod: secontextpodcat1uid0 ns: tnf\nContainer has been found missing resource requests: container: test pod: secontextpodcat1uid0 ns: tnf\nContainer has been found missing resource limits: container: test pod: secontextpodcat3 ns: tnf\nContainer has been found missing resource requests: container: test pod: secontextpodcat3 ns: tnf\nNon-compliant []string: [container: test pod: secontextpodcat1uid0 ns: tnf container: test pod: secontextpodcat3 ns: tnf]\n",
            "duration": 461812,
            "endTime": "2022-11-09 20:28:14.971125 +0200 IST m=+68.245610658",
            "failureLineContent": "\t\tfail(fmt.Sprintf(\"Number of %s %s = %d\", prefix, reflect.TypeOf(object), s.Len()))",
            "failureLocation": "/Users/amal/tnf/cnf-certification-test/pkg/testhelper/testhelper.go:82",
            "failureReason": "Number of Non-compliant []string = 2",
            "startTime": "2022-11-09 20:28:14.970663 +0200 IST m=+68.245148846",
            "state": "failed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/requests-and-limits",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/requests-and-limits Check that containers have resource requests and limits specified in their spec."
          }
        ],
        "access-control-security-context": [
          {
            "CapturedTestOutput": "containerSCC container: test pod: secontextpodcat1uid0 ns: tnf is {HostDirVolumePluginPresent:false HostIPC:false HostNetwork:false HostPID:false HostPorts:false PrivilegeEscalation:true PrivilegedContainer:false RunAsUserPresent:true ReadOnlyRootFilesystem:false RunAsNonRoot:true FsGroupPresent:true SeLinuxContextPresent:true CapabilitiesCategory:CategoryID1(limited access granted automatically) RequiredDropCapabilitiesPresent:true AllVolumeAllowed:true}\nTesting if pod belongs to category CategoryID1(limited access granted automatically)\nAllVolumeAllowed = true - OK\nRunAsUserPresent = true - OK\nRunAsNonRoot = true but expected  false - NOK\nFsGroupPresent  = true - OK\nDropCapabilities list - OK\nHostDirVolumePluginPresent = false - OK\nHostIPC = false - OK\nHostNetwork = false - OK\nHostPID = false - OK\nHostPorts = false - OK\nHostNetwork = false - OK\nPrivilegedContainer = false - OK\nReadOnlyRootFilesystem = false - OK\nSeLinuxContextPresent  is not nil - OK\nCapabilitiesCategory  list is as expected CategoryID1(limited access granted automatically) - OK\nTesting if pod belongs to category CategoryID1NoUID0(automatically granted, basic rights with mesh networks)\nAllVolumeAllowed = true - OK\nRunAsUserPresent = true - OK\nRunAsNonRoot = true - OK\nFsGroupPresent  = true - OK\nDropCapabilities list - OK\nHostDirVolumePluginPresent = false - OK\nHostIPC = false - OK\nHostNetwork = false - OK\nHostPID = false - OK\nHostPorts = false - OK\nHostNetwork = false - OK\nPrivilegedContainer = false - OK\nReadOnlyRootFilesystem = false - OK\nSeLinuxContextPresent  is not nil - OK\nCapabilitiesCategory  list is as expected CategoryID1(limited access granted automatically) - OK\nTesting if pod belongs to category1NoUID0 \ncontainerSCC container: test pod: secontextpodcat3 ns: tnf is {HostDirVolumePluginPresent:false HostIPC:false HostNetwork:false HostPID:false HostPorts:false PrivilegeEscalation:true PrivilegedContainer:false RunAsUserPresent:true ReadOnlyRootFilesystem:false RunAsNonRoot:false FsGroupPresent:true SeLinuxContextPresent:true CapabilitiesCategory:CategoryID3(SRIOV and DPDK) RequiredDropCapabilitiesPresent:true AllVolumeAllowed:true}\nTesting if pod belongs to category CategoryID1(limited access granted automatically)\nAllVolumeAllowed = true - OK\nRunAsUserPresent = true - OK\nRunAsNonRoot = false - OK\nFsGroupPresent  = true - OK\nDropCapabilities list - OK\nHostDirVolumePluginPresent = false - OK\nHostIPC = false - OK\nHostNetwork = false - OK\nHostPID = false - OK\nHostPorts = false - OK\nHostNetwork = false - OK\nPrivilegedContainer = false - OK\nReadOnlyRootFilesystem = false - OK\nSeLinuxContextPresent  is not nil - OK\nCapabilitiesCategory = CategoryID3(SRIOV and DPDK) but expected  CategoryID1(limited access granted automatically) - NOK\nTesting if pod belongs to category CategoryID1NoUID0(automatically granted, basic rights with mesh networks)\nAllVolumeAllowed = true - OK\nRunAsUserPresent = true - OK\nRunAsNonRoot = false - OK\nFsGroupPresent  = true - OK\nDropCapabilities list - OK\nHostDirVolumePluginPresent = false - OK\nHostIPC = false - OK\nHostNetwork = false - OK\nHostPID = false - OK\nHostPorts = false - OK\nHostNetwork = false - OK\nPrivilegedContainer = false - OK\nReadOnlyRootFilesystem = false - OK\nSeLinuxContextPresent  is not nil - OK\nCapabilitiesCategory = CategoryID3(SRIOV and DPDK) but expected  CategoryID1(limited access granted automatically) - NOK\nTesting if pod belongs to category CategoryID2(advanced networking (vlan tag, dscp, priority))\nAllVolumeAllowed = true - OK\nRunAsUserPresent = true - OK\nRunAsNonRoot = false - OK\nFsGroupPresent  = true - OK\nDropCapabilities list - OK\nHostDirVolumePluginPresent = false - OK\nHostIPC = false - OK\nHostNetwork = false - OK\nHostPID = false - OK\nHostPorts = false - OK\nHostNetwork = false - OK\nPrivilegedContainer = false - OK\nReadOnlyRootFilesystem = false - OK\nSeLinuxContextPresent  is not nil - OK\nCapabilitiesCategory = CategoryID3(SRIOV and DPDK) but expected  CategoryID2(advanced networking (vlan tag, dscp, priority)) - NOK\nTesting if pod belongs to category CategoryID3(SRIOV and DPDK)\nAllVolumeAllowed = true - OK\nRunAsUserPresent = true - OK\nRunAsNonRoot = false - OK\nFsGroupPresent  = true - OK\nDropCapabilities list - OK\nHostDirVolumePluginPresent = false - OK\nHostIPC = false - OK\nHostNetwork = false - OK\nHostPID = false - OK\nHostPorts = false - OK\nHostNetwork = false - OK\nPrivilegedContainer = false - OK\nReadOnlyRootFilesystem = false - OK\nSeLinuxContextPresent  is not nil - OK\nCapabilitiesCategory  list is as expected CategoryID3(SRIOV and DPDK) - OK\ncontainerSCC container: test pod: test-0 ns: tnf is {HostDirVolumePluginPresent:false HostIPC:false HostNetwork:false HostPID:false HostPorts:false PrivilegeEscalation:false PrivilegedContainer:false RunAsUserPresent:true ReadOnlyRootFilesystem:false RunAsNonRoot:false FsGroupPresent:true SeLinuxContextPresent:true CapabilitiesCategory:CategoryID1(limited access granted automatically) RequiredDropCapabilitiesPresent:true AllVolumeAllowed:true}\nTesting if pod belongs to category CategoryID1(limited access granted automatically)\nAllVolumeAllowed = true - OK\nRunAsUserPresent = true - OK\nRunAsNonRoot = false - OK\nFsGroupPresent  = true - OK\nDropCapabilities list - OK\nHostDirVolumePluginPresent = false - OK\nHostIPC = false - OK\nHostNetwork = false - OK\nHostPID = false - OK\nHostPorts = false - OK\nHostNetwork = false - OK\nPrivilegedContainer = false - OK\nReadOnlyRootFilesystem = false - OK\nSeLinuxContextPresent  is not nil - OK\nCapabilitiesCategory  list is as expected CategoryID1(limited access granted automatically) - OK\nTesting if pod belongs to category1 \ncontainerSCC container: test pod: test-1 ns: tnf is {HostDirVolumePluginPresent:false HostIPC:false HostNetwork:false HostPID:false HostPorts:false PrivilegeEscalation:false PrivilegedContainer:false RunAsUserPresent:true ReadOnlyRootFilesystem:false RunAsNonRoot:false FsGroupPresent:true SeLinuxContextPresent:true CapabilitiesCategory:CategoryID1(limited access granted automatically) RequiredDropCapabilitiesPresent:true AllVolumeAllowed:true}\nTesting if pod belongs to category CategoryID1(limited access granted automatically)\nAllVolumeAllowed = true - OK\nRunAsUserPresent = true - OK\nRunAsNonRoot = false - OK\nFsGroupPresent  = true - OK\nDropCapabilities list - OK\nHostDirVolumePluginPresent = false - OK\nHostIPC = false - OK\nHostNetwork = false - OK\nHostPID = false - OK\nHostPorts = false - OK\nHostNetwork = false - OK\nPrivilegedContainer = false - OK\nReadOnlyRootFilesystem = false - OK\nSeLinuxContextPresent  is not nil - OK\nCapabilitiesCategory  list is as expected CategoryID1(limited access granted automatically) - OK\nTesting if pod belongs to category1 \ncontainerSCC container: test pod: test-6787875cc7-bsl8s ns: tnf is {HostDirVolumePluginPresent:false HostIPC:false HostNetwork:false HostPID:false HostPorts:false PrivilegeEscalation:false PrivilegedContainer:false RunAsUserPresent:true ReadOnlyRootFilesystem:false RunAsNonRoot:false FsGroupPresent:true SeLinuxContextPresent:true CapabilitiesCategory:CategoryID1(limited access granted automatically) RequiredDropCapabilitiesPresent:true AllVolumeAllowed:true}\nTesting if pod belongs to category CategoryID1(limited access granted automatically)\nAllVolumeAllowed = true - OK\nRunAsUserPresent = true - OK\nRunAsNonRoot = false - OK\nFsGroupPresent  = true - OK\nDropCapabilities list - OK\nHostDirVolumePluginPresent = false - OK\nHostIPC = false - OK\nHostNetwork = false - OK\nHostPID = false - OK\nHostPorts = false - OK\nHostNetwork = false - OK\nPrivilegedContainer = false - OK\nReadOnlyRootFilesystem = false - OK\nSeLinuxContextPresent  is not nil - OK\nCapabilitiesCategory  list is as expected CategoryID1(limited access granted automatically) - OK\nTesting if pod belongs to category1 \ncontainerSCC container: test pod: test-6787875cc7-s4ww6 ns: tnf is {HostDirVolumePluginPresent:false HostIPC:false HostNetwork:false HostPID:false HostPorts:false PrivilegeEscalation:false PrivilegedContainer:false RunAsUserPresent:true ReadOnlyRootFilesystem:false RunAsNonRoot:false FsGroupPresent:true SeLinuxContextPresent:true CapabilitiesCategory:CategoryID1(limited access granted automatically) RequiredDropCapabilitiesPresent:true AllVolumeAllowed:true}\nTesting if pod belongs to category CategoryID1(limited access granted automatically)\nAllVolumeAllowed = true - OK\nRunAsUserPresent = true - OK\nRunAsNonRoot = false - OK\nFsGroupPresent  = true - OK\nDropCapabilities list - OK\nHostDirVolumePluginPresent = false - OK\nHostIPC = false - OK\nHostNetwork = false - OK\nHostPID = false - OK\nHostPorts = false - OK\nHostNetwork = false - OK\nPrivilegedContainer = false - OK\nReadOnlyRootFilesystem = false - OK\nSeLinuxContextPresent  is not nil - OK\nCapabilitiesCategory  list is as expected CategoryID1(limited access granted automatically) - OK\nTesting if pod belongs to category1 \nCNF category (highest container category across all containers):  CategoryID3(SRIOV and DPDK) \n\nList of containers that are Category1 or CategoryNoUID0 [Containername: test Podname: secontextpodcat1uid0 NameSpace: tnf Category: CategoryID1NoUID0(automatically granted, basic rights with mesh networks) \n  Containername: test Podname: test-0 NameSpace: tnf Category: CategoryID1(limited access granted automatically) \n  Containername: test Podname: test-1 NameSpace: tnf Category: CategoryID1(limited access granted automatically) \n  Containername: test Podname: test-6787875cc7-bsl8s NameSpace: tnf Category: CategoryID1(limited access granted automatically) \n  Containername: test Podname: test-6787875cc7-s4ww6 NameSpace: tnf Category: CategoryID1(limited access granted automatically) \n ] \n\nList of non-compliant containers that are not from Category1 or CategoryNoUID0 -  []securitycontextcontainer.PodListcategory: [Containername: test Podname: secontextpodcat3 NameSpace: tnf Category: CategoryID3(SRIOV and DPDK) \n ]\n",
            "duration": 778670,
            "endTime": "2022-11-09 20:27:50.830868 +0200 IST m=+44.105247074",
            "failureLineContent": "\t\tfail(fmt.Sprintf(\"Number of %s %s = %d\", prefix, reflect.TypeOf(object), s.Len()))",
            "failureLocation": "/Users/amal/tnf/cnf-certification-test/pkg/testhelper/testhelper.go:82",
            "failureReason": "Number of List of non-compliant containers that are not from Category1 or CategoryNoUID0 -  []securitycontextcontainer.PodListcategory = 1",
            "startTime": "2022-11-09 20:27:50.83009 +0200 IST m=+44.104468404",
            "state": "failed",
            "testID": {
              "tags": "extended",
              "url": "http://test-network-function.com/testcases/access-control/security-context",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/security-context Checks the security context is match one of the 4 categories"
          }
        ],
        "access-control-security-context-capabilities-check": [
          {
            "CapturedTestOutput": "Non compliant NET_ADMIN capability detected in container container: test pod: secontextpodcat3 ns: tnf. All container caps: \u0026Capabilities{Add:[NET_ADMIN NET_RAW IPC_LOCK],Drop:[KILL MKNOD SETUID SETGID],}\nNon compliant NET_RAW capability detected in container container: test pod: secontextpodcat3 ns: tnf. All container caps: \u0026Capabilities{Add:[NET_ADMIN NET_RAW IPC_LOCK],Drop:[KILL MKNOD SETUID SETGID],}\nNon compliant IPC_LOCK capability detected in container container: test pod: secontextpodcat3 ns: tnf. All container caps: \u0026Capabilities{Add:[NET_ADMIN NET_RAW IPC_LOCK],Drop:[KILL MKNOD SETUID SETGID],}\nNon-compliant []string: [container: test pod: secontextpodcat3 ns: tnf container: test pod: secontextpodcat3 ns: tnf container: test pod: secontextpodcat3 ns: tnf]\n",
            "duration": 318281,
            "endTime": "2022-11-09 20:27:50.831622 +0200 IST m=+44.106000717",
            "failureLineContent": "\t\tfail(fmt.Sprintf(\"Number of %s %s = %d\", prefix, reflect.TypeOf(object), s.Len()))",
            "failureLocation": "/Users/amal/tnf/cnf-certification-test/pkg/testhelper/testhelper.go:82",
            "failureReason": "Number of Non-compliant []string = 3",
            "startTime": "2022-11-09 20:27:50.831304 +0200 IST m=+44.105682436",
            "state": "failed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/security-context-capabilities-check",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/security-context-capabilities-check Tests that the following capabilities are not granted:\n\t\t\t- NET_ADMIN\n\t\t\t- SYS_ADMIN\n\t\t\t- NET_RAW\n\t\t\t- IPC_LOCK\n"
          }
        ],
        "access-control-security-context-non-root-user-check": [
          {
            "CapturedTestOutput": "",
            "duration": 49597,
            "endTime": "2022-11-09 20:27:50.831963 +0200 IST m=+44.106342074",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.831914 +0200 IST m=+44.106292477",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/security-context-non-root-user-check",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/security-context-non-root-user-check Checks the security context runAsUser parameter in pods and containers to make sure it is not set to uid root(0)"
          }
        ],
        "access-control-security-context-privilege-escalation": [
          {
            "CapturedTestOutput": "",
            "duration": 26444,
            "endTime": "2022-11-09 20:27:50.832034 +0200 IST m=+44.106413047",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.832008 +0200 IST m=+44.106386603",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/security-context-privilege-escalation",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/security-context-privilege-escalation Checks if privileged escalation is enabled (AllowPrivilegeEscalation=true)"
          }
        ],
        "access-control-ssh-daemons": [
          {
            "CapturedTestOutput": "",
            "duration": 6556510065,
            "endTime": "2022-11-09 20:28:14.970484 +0200 IST m=+68.244970168",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:08.414003 +0200 IST m=+61.688460103",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/ssh-daemons",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/ssh-daemons Check that pods do not run SSH daemons."
          }
        ],
        "access-control-sys-nice-realtime-capability": [
          {
            "CapturedTestOutput": "container: test pod: secontextpodcat1uid0 ns: tnf has been found running on a realtime kernel enabled node without SYS_NICE capability.\ncontainer: test pod: secontextpodcat3 ns: tnf has been found running on a realtime kernel enabled node without SYS_NICE capability.\ncontainer: test pod: test-0 ns: tnf has been found running on a realtime kernel enabled node without SYS_NICE capability.\ncontainer: test pod: test-1 ns: tnf has been found running on a realtime kernel enabled node without SYS_NICE capability.\ncontainer: test pod: test-6787875cc7-bsl8s ns: tnf has been found running on a realtime kernel enabled node without SYS_NICE capability.\ncontainer: test pod: test-6787875cc7-s4ww6 ns: tnf has been found running on a realtime kernel enabled node without SYS_NICE capability.\nNon-compliant []string: [container: test pod: secontextpodcat1uid0 ns: tnf container: test pod: secontextpodcat3 ns: tnf container: test pod: test-0 ns: tnf container: test pod: test-1 ns: tnf container: test pod: test-6787875cc7-bsl8s ns: tnf container: test pod: test-6787875cc7-s4ww6 ns: tnf]\n",
            "duration": 470814,
            "endTime": "2022-11-09 20:28:08.413011 +0200 IST m=+61.687467549",
            "failureLineContent": "\t\tfail(fmt.Sprintf(\"Number of %s %s = %d\", prefix, reflect.TypeOf(object), s.Len()))",
            "failureLocation": "/Users/amal/tnf/cnf-certification-test/pkg/testhelper/testhelper.go:82",
            "failureReason": "Number of Non-compliant []string = 6",
            "startTime": "2022-11-09 20:28:08.41254 +0200 IST m=+61.686996735",
            "state": "failed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/sys-nice-realtime-capability",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/sys-nice-realtime-capability Check that pods running on nodes with realtime kernel enabled have the SYS_NICE capability enabled in their spec."
          }
        ],
        "access-control-sys-ptrace-capability": [
          {
            "CapturedTestOutput": "",
            "duration": 92202,
            "endTime": "2022-11-09 20:28:08.413657 +0200 IST m=+61.688114185",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:08.413565 +0200 IST m=+61.688021983",
            "state": "passed",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/access-control/sys-ptrace-capability",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/access-control/sys-ptrace-capability Check that if process namespace sharing is enabled for a Pod then the SYS_PTRACE capability is allowed"
          }
        ],
        "affiliated-certification-container-is-certified": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829095 +0200 IST m=+44.103473873",
            "state": "skipped",
            "testID": {
              "tags": "common,online",
              "url": "http://test-network-function.com/testcases/affiliated-certification/container-is-certified",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/affiliated-certification/container-is-certified Tests whether container images listed in the configuration file have passed the Red Hat Container Certification Program (CCP)."
          }
        ],
        "affiliated-certification-container-is-certified-digest": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829402 +0200 IST m=+44.103781181",
            "state": "skipped",
            "testID": {
              "tags": "extended",
              "url": "http://test-network-function.com/testcases/affiliated-certification/container-is-certified-digest",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/affiliated-certification/container-is-certified-digest Tests whether container images that are autodiscovered have passed the Red Hat Container Certification Program by their digest(CCP)."
          }
        ],
        "affiliated-certification-helmchart-is-certified": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829256 +0200 IST m=+44.103634640",
            "state": "skipped",
            "testID": {
              "tags": "common,online",
              "url": "http://test-network-function.com/testcases/affiliated-certification/helmchart-is-certified",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/affiliated-certification/helmchart-is-certified Tests whether helm charts listed in the cluster passed the Red Hat Helm Certification Program."
          }
        ],
        "affiliated-certification-operator-is-certified": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829159 +0200 IST m=+44.103538108",
            "state": "skipped",
            "testID": {
              "tags": "common,online",
              "url": "http://test-network-function.com/testcases/affiliated-certification/operator-is-certified",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/affiliated-certification/operator-is-certified Tests whether CNF Operators listed in the configuration file have passed the Red Hat Operator Certification Program (OCP)."
          }
        ],
        "chaostesting-pod-delete": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.971925 +0200 IST m=+68.246410593",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/chaostesting/pod-delete",
              "version": "v1.0.0"
            },
            "testText": ""
          }
        ],
        "cnfextensions-example": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829024 +0200 IST m=+44.103402680",
            "state": "skipped",
            "testID": {
              "tags": "mytag,pre_release",
              "url": "http://test-network-function.com/testcases/cnfextensions/example",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/cnfextensions/example this is an example test case"
          }
        ],
        "lifecycle-affinity-required-pods": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.82894 +0200 IST m=+44.103318644",
            "state": "skipped",
            "testID": {
              "tags": "extended",
              "url": "http://test-network-function.com/testcases/lifecycle/affinity-required-pods",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/affinity-required-pods Checks that affinity rules are in place if AffinityRequired: 'true' labels are set on Pods."
          }
        ],
        "lifecycle-container-shutdown": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.827921 +0200 IST m=+44.102300137",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/container-shutdown",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/container-shutdown Ensure that the containers lifecycle preStop management feature is configured."
          }
        ],
        "lifecycle-container-startup": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.827991 +0200 IST m=+44.102369848",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/container-startup",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/container-startup Ensure that the containers lifecycle postStart management feature is configured."
          }
        ],
        "lifecycle-cpu-isolation": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828871 +0200 IST m=+44.103249289",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/cpu-isolation",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/cpu-isolation CPU isolation requires: For each container within the pod, resource requests and limits must be identical.\n\t\tRequest and Limits are in the form of whole CPUs. The runTimeClassName must be specified. Annotations required disabling CPU and IRQ load-balancing."
          }
        ],
        "lifecycle-deployment-scaling": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828651 +0200 IST m=+44.103029431",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/deployment-scaling",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/deployment-scaling Tests that CNF deployments support scale in/out operations.\n\t\t\tFirst, The test starts getting the current replicaCount (N) of the deployment/s with the Pod Under Test. Then, it executes the\n\t\t\tscale-in oc command for (N-1) replicas. Lastly, it executes the scale-out oc command, restoring the original replicaCount of the deployment/s.\n\t\t    In case of deployments that are managed by HPA the test is changing the min and max value to deployment Replica - 1 during scale-in and the\n\t\t\toriginal replicaCount again for both min/max during the scale-out stage. lastly its restoring the original min/max replica of the deployment/s"
          }
        ],
        "lifecycle-image-pull-policy": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828055 +0200 IST m=+44.102434081",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/image-pull-policy",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/image-pull-policy Ensure that the containers under test are using IfNotPresent as Image Pull Policy.."
          }
        ],
        "lifecycle-liveness-probe": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828217 +0200 IST m=+44.102595541",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/liveness-probe",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/liveness-probe Check that all containers under test a have liveness probe defined"
          }
        ],
        "lifecycle-persistent-volume-reclaim-policy": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828789 +0200 IST m=+44.103167742",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/persistent-volume-reclaim-policy",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/persistent-volume-reclaim-policy Check that the persistent volumes the CNF pods are using have a reclaim policy of delete."
          }
        ],
        "lifecycle-pod-high-availability": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828431 +0200 IST m=+44.102809841",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/pod-high-availability",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/pod-high-availability Ensures that CNF Pods specify podAntiAffinity rules and replica value is set to more than 1."
          }
        ],
        "lifecycle-pod-owner-type": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828347 +0200 IST m=+44.102726299",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/pod-owner-type",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/pod-owner-type Tests that CNF Pod(s) are deployed as part of a ReplicaSet(s)/StatefulSet(s)."
          }
        ],
        "lifecycle-pod-recreation": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828584 +0200 IST m=+44.102963195",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/pod-recreation",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/pod-recreation Tests that a CNF is configured to support High Availability.\n\t\t\tFirst, this test cordons and drains a Node that hosts the CNF Pod.\n\t\t\tNext, the test ensures that OpenShift can re-instantiate the Pod on another Node,\n\t\t\tand that the actual replica count matches the desired replica count."
          }
        ],
        "lifecycle-pod-scheduling": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828517 +0200 IST m=+44.102895992",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/pod-scheduling",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/pod-scheduling Ensures that CNF Pods do not specify nodeSelector or nodeAffinity.  In most cases, Pods should allow for\ninstantiation on any underlying Node."
          }
        ],
        "lifecycle-readiness-probe": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828144 +0200 IST m=+44.102522564",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/readiness-probe",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/readiness-probe Check that all containers under test a have readiness probe defined"
          }
        ],
        "lifecycle-startup-probe": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828283 +0200 IST m=+44.102661820",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/startup-probe",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/startup-probe Check that all containers under test a have startup probe defined"
          }
        ],
        "lifecycle-statefulset-scaling": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.828717 +0200 IST m=+44.103095415",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/lifecycle/statefulset-scaling",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/statefulset-scaling Tests that CNF statefulsets support scale in/out operations.\n\t\t\tFirst, The test starts getting the current replicaCount (N) of the statefulset/s with the Pod Under Test. Then, it executes the\n\t\t\tscale-in oc command for (N-1) replicas. Lastly, it executes the scale-out oc command, restoring the original replicaCount of the statefulset/s.\n\t\t\tIn case of statefulsets that are managed by HPA the test is changing the min and max value to statefulset Replica - 1 during scale-in and the\n\t\t\toriginal replicaCount again for both min/max during the scale-out stage. lastly its restoring the original min/max replica of the statefulset/s"
          }
        ],
        "manageability-container-port-name-format": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.827832 +0200 IST m=+44.102210861",
            "state": "skipped",
            "testID": {
              "tags": "extended",
              "url": "http://test-network-function.com/testcases/manageability/container-port-name-format",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/manageability/container-port-name-format Check that the container's ports name follow the naming conventions."
          }
        ],
        "manageability-containers-image-tag": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.827623 +0200 IST m=+44.102001744",
            "state": "skipped",
            "testID": {
              "tags": "extended",
              "url": "http://test-network-function.com/testcases/manageability/containers-image-tag",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/manageability/containers-image-tag Check that image tag exists on containers."
          }
        ],
        "networking-dpdk-cpu-pinning-exec-probe": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.973131 +0200 IST m=+68.247617410",
            "state": "skipped",
            "testID": {
              "tags": "extended",
              "url": "http://test-network-function.com/testcases/networking/dpdk-cpu-pinning-exec-probe",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/dpdk-cpu-pinning-exec-probe If a CNF is doing CPI pinning, exec probes may not be used."
          }
        ],
        "networking-dual-stack-service": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.97286 +0200 IST m=+68.247346286",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/networking/dual-stack-service",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/dual-stack-service Checks that all services in namespaces under test are either ipv6 single stack or dual stack. This\ntest case requires the deployment of the debug daemonset."
          }
        ],
        "networking-icmpv4-connectivity": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.972234 +0200 IST m=+68.246720158",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/networking/icmpv4-connectivity",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/icmpv4-connectivity Checks that each CNF Container is able to communicate via ICMPv4 on the Default OpenShift network.\nThis test case requires the Deployment of the debug daemonset."
          }
        ],
        "networking-icmpv4-connectivity-multus": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.972297 +0200 IST m=+68.246782707",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/networking/icmpv4-connectivity-multus",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/icmpv4-connectivity-multus Checks that each CNF Container is able to communicate via ICMPv4 on the Multus network(s).  This\ntest case requires the Deployment of the debug daemonset."
          }
        ],
        "networking-icmpv6-connectivity": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.972366 +0200 IST m=+68.246852041",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/networking/icmpv6-connectivity",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/icmpv6-connectivity Checks that each CNF Container is able to communicate via ICMPv6 on the Default OpenShift network.  This\ntest case requires the Deployment of the debug daemonset."
          }
        ],
        "networking-icmpv6-connectivity-multus": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.97249 +0200 IST m=+68.246976208",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/networking/icmpv6-connectivity-multus",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/icmpv6-connectivity-multus Checks that each CNF Container is able to communicate via ICMPv6 on the Multus network(s).  This\ntest case requires the Deployment of the debug daemonset."
          }
        ],
        "networking-iptables": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.97295 +0200 IST m=+68.247435866",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/networking/iptables",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/iptables Checks that the output of \"iptables-save\" is empty, e.g. there is no iptables configuration on any CNF containers."
          }
        ],
        "networking-network-policy-deny-all": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.973033 +0200 IST m=+68.247519183",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/networking/network-policy-deny-all",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/network-policy-deny-all Check that network policies attached to namespaces running CNF pods contain a default deny-all rule for both ingress and egress traffic"
          }
        ],
        "networking-nftables": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.972915 +0200 IST m=+68.247401346",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/networking/nftables",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/nftables Checks that the output of \"nft list ruleset\" is empty, e.g. there is no nftables configuration on any CNF containers."
          }
        ],
        "networking-ocp-reserved-ports-usage": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.972744 +0200 IST m=+68.247229820",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/networking/ocp-reserved-ports-usage",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/ocp-reserved-ports-usage Check that containers do not listen on ports that are reserved by OpenShift"
          }
        ],
        "networking-reserved-partner-ports": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.973093 +0200 IST m=+68.247579092",
            "state": "skipped",
            "testID": {
              "tags": "extended",
              "url": "http://test-network-function.com/testcases/networking/reserved-partner-ports",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/reserved-partner-ports Checks that pods and containers are not consuming ports designated as reserved by partner"
          }
        ],
        "networking-service-type": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.97264 +0200 IST m=+68.247126370",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/networking/service-type",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/service-type Tests that each CNF Service does not utilize NodePort(s)."
          }
        ],
        "networking-undeclared-container-ports-usage": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.972576 +0200 IST m=+68.247061717",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/networking/undeclared-container-ports-usage",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/networking/undeclared-container-ports-usage Check that containers do not listen on ports that weren't declared in their specification"
          }
        ],
        "observability-container-logging": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.971999 +0200 IST m=+68.246485500",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/observability/container-logging",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/observability/container-logging Check that all containers under test use standard input output and standard error when logging"
          }
        ],
        "observability-crd-status": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.972067 +0200 IST m=+68.246553329",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/observability/crd-status",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/observability/crd-status Checks that all CRDs have a status subresource specification (Spec.versions[].Schema.OpenAPIV3Schema.Properties[\"status\"])."
          }
        ],
        "observability-pod-disruption-budget": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.972185 +0200 IST m=+68.246670713",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/observability/pod-disruption-budget",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/observability/pod-disruption-budget Checks to see if pod disruption budgets have allowed values for minAvailable and maxUnavailable"
          }
        ],
        "observability-termination-policy": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:28:14.972125 +0200 IST m=+68.246611508",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/observability/termination-policy",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/observability/termination-policy Check that all containers are using terminationMessagePolicy: FallbackToLogsOnError"
          }
        ],
        "operator-install-source": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.830057 +0200 IST m=+44.104435332",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/operator/install-source",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/operator/install-source Tests whether a CNF Operator is installed via OLM."
          }
        ],
        "operator-install-status-no-privileges": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.830021 +0200 IST m=+44.104399840",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/operator/install-status-no-privileges",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/operator/install-status-no-privileges The operator is not installed with privileged rights. Test passes if clusterPermissions is not present in the CSV manifest or is present\nwith no resourceNames under its rules."
          }
        ],
        "operator-install-status-succeeded": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829984 +0200 IST m=+44.104362878",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/operator/install-status-succeeded",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/operator/install-status-succeeded Ensures that the target CNF operators report \"Succeeded\" as their installation status."
          }
        ],
        "platform-alteration-base-image": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829476 +0200 IST m=+44.103854419",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/platform-alteration/base-image",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/platform-alteration/base-image Ensures that the Container Base Image is not altered post-startup.  This test is a heuristic, and ensures\nthat there are no changes to the following directories:\n1) /var/lib/rpm\n2) /var/lib/dpkg\n3) /bin\n4) /sbin\n5) /lib\n6) /lib64\n7) /usr/bin\n8) /usr/sbin\n9) /usr/lib\n10) /usr/lib64"
          }
        ],
        "platform-alteration-boot-params": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829762 +0200 IST m=+44.104140644",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/platform-alteration/boot-params",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/platform-alteration/boot-params Tests that boot parameters are set through the MachineConfigOperator, and not set manually on the Node."
          }
        ],
        "platform-alteration-hugepages-2m-only": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829948 +0200 IST m=+44.104327059",
            "state": "skipped",
            "testID": {
              "tags": "extended",
              "url": "http://test-network-function.com/testcases/platform-alteration/hugepages-2m-only",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/platform-alteration/hugepages-2m-only Check that pods using hugepages only use 2Mi size"
          }
        ],
        "platform-alteration-hugepages-config": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829724 +0200 IST m=+44.104102525",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/platform-alteration/hugepages-config",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/platform-alteration/hugepages-config Checks to see that HugePage settings have been configured through MachineConfig, and not manually on the\nunderlying Node.  This test case applies only to Nodes that are configured with the \"worker\" MachineConfigSet.  First,\nthe \"worker\" MachineConfig is polled, and the Hugepage settings are extracted.  Next, the underlying Nodes are polled\nfor configured HugePages through inspection of /proc/meminfo.  The results are compared, and the test passes only if\nthey are the same."
          }
        ],
        "platform-alteration-is-selinux-enforcing": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829691 +0200 IST m=+44.104069670",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/platform-alteration/is-selinux-enforcing",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/platform-alteration/is-selinux-enforcing verifies that all openshift platform/cluster nodes have selinux in \"Enforcing\" mode."
          }
        ],
        "platform-alteration-isredhat-release": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829651 +0200 IST m=+44.104030240",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/platform-alteration/isredhat-release",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/platform-alteration/isredhat-release verifies if the container base image is redhat."
          }
        ],
        "platform-alteration-ocp-lifecycle": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829859 +0200 IST m=+44.104238091",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/platform-alteration/ocp-lifecycle",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/platform-alteration/ocp-lifecycle Tests that the running OCP version is not end of life."
          }
        ],
        "platform-alteration-ocp-node-os-lifecycle": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829907 +0200 IST m=+44.104286034",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/platform-alteration/ocp-node-os-lifecycle",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/platform-alteration/ocp-node-os-lifecycle Tests that the nodes running in the cluster have operating systems\n\t\t\tthat are compatible with the deployed version of OpenShift."
          }
        ],
        "platform-alteration-service-mesh-usage": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829829 +0200 IST m=+44.104207794",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/platform-alteration/service-mesh-usage",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/platform-alteration/service-mesh-usage verifies whether, if available, service mesh is actually being used by the CNF pods"
          }
        ],
        "platform-alteration-sysctl-config": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829793 +0200 IST m=+44.104172109",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/platform-alteration/sysctl-config",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/lifecycle/pod-recreation Tests that no one has changed the node's sysctl configs after the node\n\t\t\twas created, the tests works by checking if the sysctl configs are consistent with the\n\t\t\tMachineConfig CR which defines how the node should be configured"
          }
        ],
        "platform-alteration-tainted-node-kernel": [
          {
            "CapturedTestOutput": "",
            "duration": 0,
            "endTime": "0001-01-01 00:00:00 +0000 UTC",
            "failureLineContent": "",
            "failureLocation": ":0",
            "failureReason": "",
            "startTime": "2022-11-09 20:27:50.829593 +0200 IST m=+44.103971975",
            "state": "skipped",
            "testID": {
              "tags": "common",
              "url": "http://test-network-function.com/testcases/platform-alteration/tainted-node-kernel",
              "version": "v1.0.0"
            },
            "testText": "http://test-network-function.com/testcases/platform-alteration/tainted-node-kernel Ensures that the Node(s) hosting CNFs do not utilize tainted kernels. This test case is especially important\nto support Highly Available CNFs, since when a CNF is re-instantiated on a backup Node, that Node's kernel may not have\nthe same hacks.'"
          }
        ]
      },
      "versions": {
        "k8s": "v1.23.5+3afdacb",
        "ocClient": "n/a, (not using oc or kubectl client)",
        "ocp": "4.10.22",
        "tnf": "Unreleased build post ",
        "tnfGitCommit": ""
      }
    }
  }