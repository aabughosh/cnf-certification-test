{
  "data": [
    {
      "_id": "636ed82b926c875d9a8d224f",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "bundle_path_digest": "sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "fast",
      "creation_date": "2022-11-11T23:18:03.932000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.18.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-11T23:18:03.932000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "cloud-native-postgresql-a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744-annotation"
        },
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.18.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.18.0",
      "version_original": "1.18.0"
    },
    {
      "_id": "636ed82c01b78a1a834a928b",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "bundle_path_digest": "sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.18",
      "creation_date": "2022-11-11T23:18:04.470000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.18.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-11T23:18:04.470000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "cloud-native-postgresql-a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744-annotation"
        },
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.18.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.18.0",
      "version_original": "1.18.0"
    },
    {
      "_id": "636ed9563ff80f2b69da0a1f",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "bundle_path_digest": "sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "fast",
      "creation_date": "2022-11-11T23:23:02.791000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.18.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-11T23:23:02.791000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "cloud-native-postgresql-a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744-annotation"
        },
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.18.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.18.0",
      "version_original": "1.18.0"
    },
    {
      "_id": "636ed9579a7874eaf89bd183",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "bundle_path_digest": "sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.18",
      "creation_date": "2022-11-11T23:23:03.264000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.18.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-11T23:23:03.264000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "cloud-native-postgresql-a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744-annotation"
        },
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.18.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.18.0",
      "version_original": "1.18.0"
    },
    {
      "_id": "636ed9e89a7874eaf89bd289",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "bundle_path_digest": "sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.18",
      "creation_date": "2022-11-11T23:25:28.729000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.18.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-11T23:25:28.729000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "cloud-native-postgresql-a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744-annotation"
        },
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.18.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.18.0",
      "version_original": "1.18.0"
    },
    {
      "_id": "636ed9e901b78a1a834a95de",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "bundle_path_digest": "sha256:d138fd70970f6bbfed1cd2466f44d29061834702b9b263bb71c3d61f494a5a31",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "fast",
      "creation_date": "2022-11-11T23:25:29.686000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.18.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-11T23:25:29.686000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "cloud-native-postgresql-a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744-annotation"
        },
        {
          "digest": "sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:a2f80f3af1966845b24298a525b34cca2027d0f147d876440bb4ca4478399744",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.18.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.18.0",
      "version_original": "1.18.0"
    },
    {
      "_id": "636f0ced13ca4f56b08459a2",
      "alm_examples": [
        {
          "api_version": "charts.nginx.org/v1alpha1",
          "kind": "NginxIngress",
          "metadata": {
            "name": "nginxingress-sample"
          },
          "spec": {
            "controller": {
              "affinity": {},
              "appprotect": {
                "enable": false
              },
              "appprotectdos": {
                "debug": false,
                "enable": false,
                "maxDaemons": 0,
                "maxWorkers": 0,
                "memory": 0
              },
              "config": {
                "annotations": {},
                "entries": {}
              },
              "customConfigMap": "",
              "customPorts": [],
              "defaultTLS": {
                "secret": "nginx-ingress/default-server-secret"
              },
              "enableCertManager": false,
              "enableCustomResources": true,
              "enableLatencyMetrics": false,
              "enableOIDC": false,
              "enablePreviewPolicies": false,
              "enableSnippets": false,
              "enableTLSPassthrough": false,
              "extraContainers": [],
              "globalConfiguration": {
                "create": false,
                "spec": {}
              },
              "healthStatus": false,
              "healthStatusURI": "/nginx-health",
              "hostNetwork": false,
              "image": {
                "pullPolicy": "IfNotPresent",
                "repository": "nginx/nginx-ingress",
                "tag": "2.4.1-ubi"
              },
              "includeYear": false,
              "ingressClass": "nginx",
              "initContainers": [],
              "kind": "deployment",
              "lifecycle": {},
              "logLevel": 1,
              "nginxDebug": false,
              "nginxReloadTimeout": 60000,
              "nginxStatus": {
                "allowCidrs": "127.0.0.1",
                "enable": true,
                "port": 8080
              },
              "nginxplus": false,
              "nodeSelector": {},
              "pod": {
                "annotations": {},
                "extraLabels": {}
              },
              "readyStatus": {
                "enable": true,
                "port": 8081
              },
              "replicaCount": 1,
              "reportIngressStatus": {
                "annotations": {},
                "enable": true,
                "enableLeaderElection": true,
                "ingressLink": ""
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "service": {
                "annotations": {},
                "create": true,
                "customPorts": [],
                "externalIPs": [],
                "externalTrafficPolicy": "Local",
                "extraLabels": {},
                "httpPort": {
                  "enable": true,
                  "nodePort": "",
                  "port": 80,
                  "targetPort": 80
                },
                "httpsPort": {
                  "enable": true,
                  "nodePort": "",
                  "port": 443,
                  "targetPort": 443
                },
                "loadBalancerIP": "",
                "loadBalancerSourceRanges": [],
                "type": "LoadBalancer"
              },
              "serviceAccount": {
                "imagePullSecretName": ""
              },
              "setAsDefaultIngress": false,
              "terminationGracePeriodSeconds": 30,
              "tolerations": [],
              "volumeMounts": [],
              "volumes": [],
              "watchNamespace": "",
              "wildcardTLS": {}
            },
            "disableIPV6": false,
            "nginxServiceMesh": {
              "enable": false,
              "enableEgress": false
            },
            "prometheus": {
              "create": true,
              "port": 9113,
              "scheme": "http",
              "secret": ""
            },
            "rbac": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:af217c9e963783c4c630719b08a3c1cca3d7cead4a50a7c7d624e6e08fe1df59",
      "bundle_path_digest": "sha256:af217c9e963783c4c630719b08a3c1cca3d7cead4a50a7c7d624e6e08fe1df59",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-12T03:03:09.773000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-12T03:03:09.773000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "charts.nginx.org",
          "kind": "NginxIngress",
          "plural": "nginxingresses",
          "version": "v1alpha1"
        }
      ],
      "provider": "NGINX Inc",
      "related_images": [
        {
          "digest": "sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "name": "nginx-ingress-operator-1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664-annotation"
        },
        {
          "digest": "sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "636f0d1a01b78a1a834af5e3",
      "alm_examples": [
        {
          "api_version": "charts.nginx.org/v1alpha1",
          "kind": "NginxIngress",
          "metadata": {
            "name": "nginxingress-sample"
          },
          "spec": {
            "controller": {
              "affinity": {},
              "appprotect": {
                "enable": false
              },
              "appprotectdos": {
                "debug": false,
                "enable": false,
                "maxDaemons": 0,
                "maxWorkers": 0,
                "memory": 0
              },
              "config": {
                "annotations": {},
                "entries": {}
              },
              "customConfigMap": "",
              "customPorts": [],
              "defaultTLS": {
                "secret": "nginx-ingress/default-server-secret"
              },
              "enableCertManager": false,
              "enableCustomResources": true,
              "enableLatencyMetrics": false,
              "enableOIDC": false,
              "enablePreviewPolicies": false,
              "enableSnippets": false,
              "enableTLSPassthrough": false,
              "extraContainers": [],
              "globalConfiguration": {
                "create": false,
                "spec": {}
              },
              "healthStatus": false,
              "healthStatusURI": "/nginx-health",
              "hostNetwork": false,
              "image": {
                "pullPolicy": "IfNotPresent",
                "repository": "nginx/nginx-ingress",
                "tag": "2.4.1-ubi"
              },
              "includeYear": false,
              "ingressClass": "nginx",
              "initContainers": [],
              "kind": "deployment",
              "lifecycle": {},
              "logLevel": 1,
              "nginxDebug": false,
              "nginxReloadTimeout": 60000,
              "nginxStatus": {
                "allowCidrs": "127.0.0.1",
                "enable": true,
                "port": 8080
              },
              "nginxplus": false,
              "nodeSelector": {},
              "pod": {
                "annotations": {},
                "extraLabels": {}
              },
              "readyStatus": {
                "enable": true,
                "port": 8081
              },
              "replicaCount": 1,
              "reportIngressStatus": {
                "annotations": {},
                "enable": true,
                "enableLeaderElection": true,
                "ingressLink": ""
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "service": {
                "annotations": {},
                "create": true,
                "customPorts": [],
                "externalIPs": [],
                "externalTrafficPolicy": "Local",
                "extraLabels": {},
                "httpPort": {
                  "enable": true,
                  "nodePort": "",
                  "port": 80,
                  "targetPort": 80
                },
                "httpsPort": {
                  "enable": true,
                  "nodePort": "",
                  "port": 443,
                  "targetPort": 443
                },
                "loadBalancerIP": "",
                "loadBalancerSourceRanges": [],
                "type": "LoadBalancer"
              },
              "serviceAccount": {
                "imagePullSecretName": ""
              },
              "setAsDefaultIngress": false,
              "terminationGracePeriodSeconds": 30,
              "tolerations": [],
              "volumeMounts": [],
              "volumes": [],
              "watchNamespace": "",
              "wildcardTLS": {}
            },
            "disableIPV6": false,
            "nginxServiceMesh": {
              "enable": false,
              "enableEgress": false
            },
            "prometheus": {
              "create": true,
              "port": 9113,
              "scheme": "http",
              "secret": ""
            },
            "rbac": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:af217c9e963783c4c630719b08a3c1cca3d7cead4a50a7c7d624e6e08fe1df59",
      "bundle_path_digest": "sha256:af217c9e963783c4c630719b08a3c1cca3d7cead4a50a7c7d624e6e08fe1df59",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-12T03:03:54.601000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-12T03:03:54.601000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "charts.nginx.org",
          "kind": "NginxIngress",
          "version": "v1alpha1"
        }
      ],
      "provider": "NGINX Inc",
      "related_images": [
        {
          "digest": "sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "name": "nginx-ingress-operator-1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664-annotation"
        },
        {
          "digest": "sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "636f0d83f277f40b5ce3f3d5",
      "alm_examples": [
        {
          "api_version": "charts.nginx.org/v1alpha1",
          "kind": "NginxIngress",
          "metadata": {
            "name": "nginxingress-sample"
          },
          "spec": {
            "controller": {
              "affinity": {},
              "appprotect": {
                "enable": false
              },
              "appprotectdos": {
                "debug": false,
                "enable": false,
                "maxDaemons": 0,
                "maxWorkers": 0,
                "memory": 0
              },
              "config": {
                "annotations": {},
                "entries": {}
              },
              "customConfigMap": "",
              "customPorts": [],
              "defaultTLS": {
                "secret": "nginx-ingress/default-server-secret"
              },
              "enableCertManager": false,
              "enableCustomResources": true,
              "enableLatencyMetrics": false,
              "enableOIDC": false,
              "enablePreviewPolicies": false,
              "enableSnippets": false,
              "enableTLSPassthrough": false,
              "extraContainers": [],
              "globalConfiguration": {
                "create": false,
                "spec": {}
              },
              "healthStatus": false,
              "healthStatusURI": "/nginx-health",
              "hostNetwork": false,
              "image": {
                "pullPolicy": "IfNotPresent",
                "repository": "nginx/nginx-ingress",
                "tag": "2.4.1-ubi"
              },
              "includeYear": false,
              "ingressClass": "nginx",
              "initContainers": [],
              "kind": "deployment",
              "lifecycle": {},
              "logLevel": 1,
              "nginxDebug": false,
              "nginxReloadTimeout": 60000,
              "nginxStatus": {
                "allowCidrs": "127.0.0.1",
                "enable": true,
                "port": 8080
              },
              "nginxplus": false,
              "nodeSelector": {},
              "pod": {
                "annotations": {},
                "extraLabels": {}
              },
              "readyStatus": {
                "enable": true,
                "port": 8081
              },
              "replicaCount": 1,
              "reportIngressStatus": {
                "annotations": {},
                "enable": true,
                "enableLeaderElection": true,
                "ingressLink": ""
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "service": {
                "annotations": {},
                "create": true,
                "customPorts": [],
                "externalIPs": [],
                "externalTrafficPolicy": "Local",
                "extraLabels": {},
                "httpPort": {
                  "enable": true,
                  "nodePort": "",
                  "port": 80,
                  "targetPort": 80
                },
                "httpsPort": {
                  "enable": true,
                  "nodePort": "",
                  "port": 443,
                  "targetPort": 443
                },
                "loadBalancerIP": "",
                "loadBalancerSourceRanges": [],
                "type": "LoadBalancer"
              },
              "serviceAccount": {
                "imagePullSecretName": ""
              },
              "setAsDefaultIngress": false,
              "terminationGracePeriodSeconds": 30,
              "tolerations": [],
              "volumeMounts": [],
              "volumes": [],
              "watchNamespace": "",
              "wildcardTLS": {}
            },
            "disableIPV6": false,
            "nginxServiceMesh": {
              "enable": false,
              "enableEgress": false
            },
            "prometheus": {
              "create": true,
              "port": 9113,
              "scheme": "http",
              "secret": ""
            },
            "rbac": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:af217c9e963783c4c630719b08a3c1cca3d7cead4a50a7c7d624e6e08fe1df59",
      "bundle_path_digest": "sha256:af217c9e963783c4c630719b08a3c1cca3d7cead4a50a7c7d624e6e08fe1df59",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-12T03:05:39.031000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-12T03:05:39.031000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "charts.nginx.org",
          "kind": "NginxIngress",
          "version": "v1alpha1"
        }
      ],
      "provider": "NGINX Inc",
      "related_images": [
        {
          "digest": "sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "name": "nginx-ingress-operator-1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664-annotation"
        },
        {
          "digest": "sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "636f0e7613ca4f56b0845dd1",
      "alm_examples": [
        {
          "api_version": "charts.nginx.org/v1alpha1",
          "kind": "NginxIngress",
          "metadata": {
            "name": "nginxingress-sample"
          },
          "spec": {
            "controller": {
              "affinity": {},
              "appprotect": {
                "enable": false
              },
              "appprotectdos": {
                "debug": false,
                "enable": false,
                "maxDaemons": 0,
                "maxWorkers": 0,
                "memory": 0
              },
              "config": {
                "annotations": {},
                "entries": {}
              },
              "customConfigMap": "",
              "customPorts": [],
              "defaultTLS": {
                "secret": "nginx-ingress/default-server-secret"
              },
              "enableCertManager": false,
              "enableCustomResources": true,
              "enableLatencyMetrics": false,
              "enableOIDC": false,
              "enablePreviewPolicies": false,
              "enableSnippets": false,
              "enableTLSPassthrough": false,
              "extraContainers": [],
              "globalConfiguration": {
                "create": false,
                "spec": {}
              },
              "healthStatus": false,
              "healthStatusURI": "/nginx-health",
              "hostNetwork": false,
              "image": {
                "pullPolicy": "IfNotPresent",
                "repository": "nginx/nginx-ingress",
                "tag": "2.4.1-ubi"
              },
              "includeYear": false,
              "ingressClass": "nginx",
              "initContainers": [],
              "kind": "deployment",
              "lifecycle": {},
              "logLevel": 1,
              "nginxDebug": false,
              "nginxReloadTimeout": 60000,
              "nginxStatus": {
                "allowCidrs": "127.0.0.1",
                "enable": true,
                "port": 8080
              },
              "nginxplus": false,
              "nodeSelector": {},
              "pod": {
                "annotations": {},
                "extraLabels": {}
              },
              "readyStatus": {
                "enable": true,
                "port": 8081
              },
              "replicaCount": 1,
              "reportIngressStatus": {
                "annotations": {},
                "enable": true,
                "enableLeaderElection": true,
                "ingressLink": ""
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "service": {
                "annotations": {},
                "create": true,
                "customPorts": [],
                "externalIPs": [],
                "externalTrafficPolicy": "Local",
                "extraLabels": {},
                "httpPort": {
                  "enable": true,
                  "nodePort": "",
                  "port": 80,
                  "targetPort": 80
                },
                "httpsPort": {
                  "enable": true,
                  "nodePort": "",
                  "port": 443,
                  "targetPort": 443
                },
                "loadBalancerIP": "",
                "loadBalancerSourceRanges": [],
                "type": "LoadBalancer"
              },
              "serviceAccount": {
                "imagePullSecretName": ""
              },
              "setAsDefaultIngress": false,
              "terminationGracePeriodSeconds": 30,
              "tolerations": [],
              "volumeMounts": [],
              "volumes": [],
              "watchNamespace": "",
              "wildcardTLS": {}
            },
            "disableIPV6": false,
            "nginxServiceMesh": {
              "enable": false,
              "enableEgress": false
            },
            "prometheus": {
              "create": true,
              "port": 9113,
              "scheme": "http",
              "secret": ""
            },
            "rbac": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:af217c9e963783c4c630719b08a3c1cca3d7cead4a50a7c7d624e6e08fe1df59",
      "bundle_path_digest": "sha256:af217c9e963783c4c630719b08a3c1cca3d7cead4a50a7c7d624e6e08fe1df59",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-12T03:09:42.002000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-12T03:09:42.002000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "charts.nginx.org",
          "kind": "NginxIngress",
          "plural": "nginxingresses",
          "version": "v1alpha1"
        }
      ],
      "provider": "NGINX Inc",
      "related_images": [
        {
          "digest": "sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "name": "nginx-ingress-operator-1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664-annotation"
        },
        {
          "digest": "sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "636f0e8013ca4f56b0845de9",
      "alm_examples": [
        {
          "api_version": "charts.nginx.org/v1alpha1",
          "kind": "NginxIngress",
          "metadata": {
            "name": "nginxingress-sample"
          },
          "spec": {
            "controller": {
              "affinity": {},
              "appprotect": {
                "enable": false
              },
              "appprotectdos": {
                "debug": false,
                "enable": false,
                "maxDaemons": 0,
                "maxWorkers": 0,
                "memory": 0
              },
              "config": {
                "annotations": {},
                "entries": {}
              },
              "customConfigMap": "",
              "customPorts": [],
              "defaultTLS": {
                "secret": "nginx-ingress/default-server-secret"
              },
              "enableCertManager": false,
              "enableCustomResources": true,
              "enableLatencyMetrics": false,
              "enableOIDC": false,
              "enablePreviewPolicies": false,
              "enableSnippets": false,
              "enableTLSPassthrough": false,
              "extraContainers": [],
              "globalConfiguration": {
                "create": false,
                "spec": {}
              },
              "healthStatus": false,
              "healthStatusURI": "/nginx-health",
              "hostNetwork": false,
              "image": {
                "pullPolicy": "IfNotPresent",
                "repository": "nginx/nginx-ingress",
                "tag": "2.4.1-ubi"
              },
              "includeYear": false,
              "ingressClass": "nginx",
              "initContainers": [],
              "kind": "deployment",
              "lifecycle": {},
              "logLevel": 1,
              "nginxDebug": false,
              "nginxReloadTimeout": 60000,
              "nginxStatus": {
                "allowCidrs": "127.0.0.1",
                "enable": true,
                "port": 8080
              },
              "nginxplus": false,
              "nodeSelector": {},
              "pod": {
                "annotations": {},
                "extraLabels": {}
              },
              "readyStatus": {
                "enable": true,
                "port": 8081
              },
              "replicaCount": 1,
              "reportIngressStatus": {
                "annotations": {},
                "enable": true,
                "enableLeaderElection": true,
                "ingressLink": ""
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "service": {
                "annotations": {},
                "create": true,
                "customPorts": [],
                "externalIPs": [],
                "externalTrafficPolicy": "Local",
                "extraLabels": {},
                "httpPort": {
                  "enable": true,
                  "nodePort": "",
                  "port": 80,
                  "targetPort": 80
                },
                "httpsPort": {
                  "enable": true,
                  "nodePort": "",
                  "port": 443,
                  "targetPort": 443
                },
                "loadBalancerIP": "",
                "loadBalancerSourceRanges": [],
                "type": "LoadBalancer"
              },
              "serviceAccount": {
                "imagePullSecretName": ""
              },
              "setAsDefaultIngress": false,
              "terminationGracePeriodSeconds": 30,
              "tolerations": [],
              "volumeMounts": [],
              "volumes": [],
              "watchNamespace": "",
              "wildcardTLS": {}
            },
            "disableIPV6": false,
            "nginxServiceMesh": {
              "enable": false,
              "enableEgress": false
            },
            "prometheus": {
              "create": true,
              "port": 9113,
              "scheme": "http",
              "secret": ""
            },
            "rbac": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:af217c9e963783c4c630719b08a3c1cca3d7cead4a50a7c7d624e6e08fe1df59",
      "bundle_path_digest": "sha256:af217c9e963783c4c630719b08a3c1cca3d7cead4a50a7c7d624e6e08fe1df59",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-12T03:09:52.755000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-12T03:09:52.755000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "charts.nginx.org",
          "kind": "NginxIngress",
          "plural": "nginxingresses",
          "version": "v1alpha1"
        }
      ],
      "provider": "NGINX Inc",
      "related_images": [
        {
          "digest": "sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "name": "nginx-ingress-operator-1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664-annotation"
        },
        {
          "digest": "sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:1806f87e83096227a9f204ebb7a3e29aef780f60ba836f3e2f481835ff9e5664",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "637400d7601aa784dae53c8d",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:83b9bed25e4f6caecdf1d33ef09560732f948097edf104fee991c1ab872619dd",
      "bundle_path_digest": "sha256:83b9bed25e4f6caecdf1d33ef09560732f948097edf104fee991c1ab872619dd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.17",
      "creation_date": "2022-11-15T21:12:55.561000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.17.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:12:55.561000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "name": "cloud-native-postgresql-2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45-annotation"
        },
        {
          "digest": "sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.17.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.17.2",
      "version_original": "1.17.2"
    },
    {
      "_id": "637401230be49b94c626cafc",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:83b9bed25e4f6caecdf1d33ef09560732f948097edf104fee991c1ab872619dd",
      "bundle_path_digest": "sha256:83b9bed25e4f6caecdf1d33ef09560732f948097edf104fee991c1ab872619dd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.17",
      "creation_date": "2022-11-15T21:14:11.392000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.17.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:14:11.392000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "name": "cloud-native-postgresql-2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45-annotation"
        },
        {
          "digest": "sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.17.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.17.2",
      "version_original": "1.17.2"
    },
    {
      "_id": "6374012c2e831b3fd5b3107d",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:83b9bed25e4f6caecdf1d33ef09560732f948097edf104fee991c1ab872619dd",
      "bundle_path_digest": "sha256:83b9bed25e4f6caecdf1d33ef09560732f948097edf104fee991c1ab872619dd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.17",
      "creation_date": "2022-11-15T21:14:20.732000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.17.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:14:20.732000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "name": "cloud-native-postgresql-2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45-annotation"
        },
        {
          "digest": "sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.17.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.17.2",
      "version_original": "1.17.2"
    },
    {
      "_id": "637401808b147d8e7012f9ad",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:83b9bed25e4f6caecdf1d33ef09560732f948097edf104fee991c1ab872619dd",
      "bundle_path_digest": "sha256:83b9bed25e4f6caecdf1d33ef09560732f948097edf104fee991c1ab872619dd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.17",
      "creation_date": "2022-11-15T21:15:44.714000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.17.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:15:44.714000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "name": "cloud-native-postgresql-2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45-annotation"
        },
        {
          "digest": "sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.17.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.17.2",
      "version_original": "1.17.2"
    },
    {
      "_id": "6374027598fe8fea0f271703",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:83b9bed25e4f6caecdf1d33ef09560732f948097edf104fee991c1ab872619dd",
      "bundle_path_digest": "sha256:83b9bed25e4f6caecdf1d33ef09560732f948097edf104fee991c1ab872619dd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.17",
      "creation_date": "2022-11-15T21:19:49.505000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.17.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:19:49.505000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "name": "cloud-native-postgresql-2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45-annotation"
        },
        {
          "digest": "sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:2fba560d2e6f0cc6bdeea6d2204f4b2549fddabbd54d06f68f43857d1b91bb45",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.17.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.17.2",
      "version_original": "1.17.2"
    },
    {
      "_id": "6374061d8b147d8e701302b5",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:35:25.185000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:35:25.185000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "6374061dd012d3e7d00e7d75",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:35:25.988000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:35:25.988000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "6374061ed012d3e7d00e7d77",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:f7b29e5652ed762c141661cdf633e29bd806bbcd69b147cf95ac615345d5d510",
      "bundle_path_digest": "sha256:f7b29e5652ed762c141661cdf633e29bd806bbcd69b147cf95ac615345d5d510",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:35:26.765000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.12-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:35:26.765000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "admission-image"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:14fed0c1843b44a1fb4f3c2f29cc0b51fc02f03a001f9abde9dbe6feaa4bef70",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:14fed0c1843b44a1fb4f3c2f29cc0b51fc02f03a001f9abde9dbe6feaa4bef70",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:bfc13e387a0c941bf29ea2eea8ad889be019dcecba7b56994ec1542621211c1c",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:bfc13e387a0c941bf29ea2eea8ad889be019dcecba7b56994ec1542621211c1c",
          "name": "rs-image"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "redis-enterprise-operator-2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47-annotation"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.12-1",
      "version_original": "6.2.12-1"
    },
    {
      "_id": "6374062098fe8fea0f271ead",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "bundle_path_digest": "sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:35:28.122000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.18-3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:35:28.122000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "name": "rs-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator-afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec-annotation"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.18-3",
      "version_original": "6.2.18-3"
    },
    {
      "_id": "63740620601aa784dae546cc",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "bundle_path_digest": "sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-11-15T21:35:28.838000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.18-3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-15T21:35:28.838000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "name": "rs-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator-afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec-annotation"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.18-3",
      "version_original": "6.2.18-3"
    },
    {
      "_id": "637406323f6a002c6b34eac4",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:35:46.459000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:35:46.459000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "637406332e831b3fd5b31a0a",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-90.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "bundle_path_digest": "sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:35:47.309000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:35:47.309000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator-97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31-annotation"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-4",
      "version_original": "6.2.10-4"
    },
    {
      "_id": "637406333f6a002c6b34eac9",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:35:47.845000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:35:47.845000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "63740634ed63caac86f7320e",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:f7b29e5652ed762c141661cdf633e29bd806bbcd69b147cf95ac615345d5d510",
      "bundle_path_digest": "sha256:f7b29e5652ed762c141661cdf633e29bd806bbcd69b147cf95ac615345d5d510",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:35:48.480000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.12-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:35:48.480000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "admission-image"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:14fed0c1843b44a1fb4f3c2f29cc0b51fc02f03a001f9abde9dbe6feaa4bef70",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:14fed0c1843b44a1fb4f3c2f29cc0b51fc02f03a001f9abde9dbe6feaa4bef70",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:bfc13e387a0c941bf29ea2eea8ad889be019dcecba7b56994ec1542621211c1c",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:bfc13e387a0c941bf29ea2eea8ad889be019dcecba7b56994ec1542621211c1c",
          "name": "rs-image"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "redis-enterprise-operator-2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47-annotation"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.12-1",
      "version_original": "6.2.12-1"
    },
    {
      "_id": "6374063598fe8fea0f271ed3",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "bundle_path_digest": "sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:35:49.534000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.18-3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:35:49.534000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "name": "rs-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator-afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec-annotation"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.18-3",
      "version_original": "6.2.18-3"
    },
    {
      "_id": "637406362e831b3fd5b31a14",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "bundle_path_digest": "sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-11-15T21:35:50.639000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.18-3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-15T21:35:50.639000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "name": "rs-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator-afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec-annotation"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.18-3",
      "version_original": "6.2.18-3"
    },
    {
      "_id": "63740637d012d3e7d00e7dab",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:35:51.329000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:35:51.329000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "637406373f6a002c6b34ead6",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:35:51.807000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:35:51.807000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    },
    {
      "_id": "63740705ed63caac86f733ef",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:39:17.246000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:39:17.246000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "637407058b147d8e701304a1",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:f7b29e5652ed762c141661cdf633e29bd806bbcd69b147cf95ac615345d5d510",
      "bundle_path_digest": "sha256:f7b29e5652ed762c141661cdf633e29bd806bbcd69b147cf95ac615345d5d510",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:39:17.906000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.12-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:39:17.906000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "admission-image"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:14fed0c1843b44a1fb4f3c2f29cc0b51fc02f03a001f9abde9dbe6feaa4bef70",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:14fed0c1843b44a1fb4f3c2f29cc0b51fc02f03a001f9abde9dbe6feaa4bef70",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:bfc13e387a0c941bf29ea2eea8ad889be019dcecba7b56994ec1542621211c1c",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:bfc13e387a0c941bf29ea2eea8ad889be019dcecba7b56994ec1542621211c1c",
          "name": "rs-image"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "redis-enterprise-operator-2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47-annotation"
        },
        {
          "digest": "sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:2a033d4a4ccabb4963116add69fc8e91770ee627f6b974879d8dd7ddddebce47",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.2.12-1",
      "version_original": "6.2.12-1"
    },
    {
      "_id": "6374070664d923486d24310e",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "bundle_path_digest": "sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:39:18.436000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.18-3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:39:18.436000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "name": "rs-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator-afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec-annotation"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.2.18-3",
      "version_original": "6.2.18-3"
    },
    {
      "_id": "637407070be49b94c626d6c4",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.18",
      "creation_date": "2022-11-15T21:39:19.613000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-15T21:39:19.613000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "637407082e831b3fd5b31be8",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "bundle_path_digest": "sha256:51166ba888fd5c3b2bf5e465808077128f3da76d7e98f1677ba8bdf7a846134d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-11-15T21:39:20.316000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.18-3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-15T21:39:20.316000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:1c20d9f1dc847db43aea55832caef6e497c1971d2dbcec4e8421092e469907e9",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:396b19cde93ddd272b1e28b9fe52041c06ad06c89da8bbaf6840b9af11260518",
          "name": "rs-image"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "redis-enterprise-operator-afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec-annotation"
        },
        {
          "digest": "sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:afd2c3dd1e432c410af77202e9ce262fa69f4734357480c292db73f4608ec4ec",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.2.18-3",
      "version_original": "6.2.18-3"
    },
    {
      "_id": "637458058b147d8e7013a6cc",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.5.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "bundle_path_digest": "sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T03:24:53.898000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T03:24:53.898000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        }
      ],
      "provider": "GitLab Inc",
      "related_images": [
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "cloud-native/gitlab-operator-30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6-annotation"
        },
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.13.4",
      "version_original": "0.13.4"
    },
    {
      "_id": "637458072e831b3fd5b3be91",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.5.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "bundle_path_digest": "sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "unstable",
      "creation_date": "2022-11-16T03:24:55.166000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T03:24:55.166000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        }
      ],
      "provider": "GitLab Inc",
      "related_images": [
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "cloud-native/gitlab-operator-30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6-annotation"
        },
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.13.4",
      "version_original": "0.13.4"
    },
    {
      "_id": "6374585d64d923486d24d52e",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.5.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "bundle_path_digest": "sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T03:26:21.141000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T03:26:21.141000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        }
      ],
      "provider": "GitLab Inc",
      "related_images": [
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "cloud-native/gitlab-operator-30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6-annotation"
        },
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.13.4",
      "version_original": "0.13.4"
    },
    {
      "_id": "6374585dd012d3e7d00f2140",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.5.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "bundle_path_digest": "sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "unstable",
      "creation_date": "2022-11-16T03:26:21.971000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T03:26:21.971000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        }
      ],
      "provider": "GitLab Inc",
      "related_images": [
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "cloud-native/gitlab-operator-30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6-annotation"
        },
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.13.4",
      "version_original": "0.13.4"
    },
    {
      "_id": "637458f48b147d8e7013a906",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.5.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "bundle_path_digest": "sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "unstable",
      "creation_date": "2022-11-16T03:28:52.315000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T03:28:52.315000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        }
      ],
      "provider": "GitLab Inc",
      "related_images": [
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "cloud-native/gitlab-operator-30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6-annotation"
        },
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.13.4",
      "version_original": "0.13.4"
    },
    {
      "_id": "637458f5d012d3e7d00f2288",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.5.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "bundle_path_digest": "sha256:b752760c7f5033193b2c0c54a8d071946ca8db179eb62bc70d6d94f767ed59d4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T03:28:53.241000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T03:28:53.241000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        }
      ],
      "provider": "GitLab Inc",
      "related_images": [
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "cloud-native/gitlab-operator-30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6-annotation"
        },
        {
          "digest": "sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:30a6b340b4fd01529d6806b803a1626a3260b2668e1b92db0d72cd185446b7f6",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.13.4",
      "version_original": "0.13.4"
    },
    {
      "_id": "637492ca3f6a002c6b360523",
      "alm_examples": [
        {
          "api_version": "apps.apimatic.io/v1beta2",
          "kind": "CodeGen",
          "metadata": {
            "name": "codegen-sample"
          },
          "spec": {
            "licenseSpec": {
              "licenseSourceType": "LicenseBlob",
              "licenseSourceValue": "PExpY2Vuc2U+DQogIDxJZD41MDVlNzM4Ny0xZmIxLTQ4ZDQtOGRmMS1iYjk3NGEyNjM2MDM8L0lkPg0KICA8VHlwZT5TdGFuZGFyZDwvVHlwZT4NCiAgPEV4cGlyYXRpb24+RnJpLCAxNyBNYXkgMjA1MiAwNzoxOTozOSBHTVQ8L0V4cGlyYXRpb24+DQogIDxRdWFudGl0eT4yPC9RdWFudGl0eT4NCiAgPFByb2R1Y3RGZWF0dXJlcz4NCiAgICA8RmVhdHVyZSBuYW1lPSJpbXBvcnRGb3JtYXRzIj5BUElCbHVlUHJpbnQsQVBJRWxlbWVudHMsUG9zdG1hbjIsV3NkbCxXQURMMjAwOSxXQURMMjAwNixSYW1sLFJhbWwxMCxTd2FnZ2VyMjAsU3dhZ2dlcllhbWwsU3dhZ2dlcjEwLE9wZW5BcGkzSnNvbixPcGVuQXBpM1lhbWwsSU9Eb2NzLElPRG9jc1YwMzE0LEluc29tbmlhLEluc29tbmlhWWFtbCxSQU1MQXNKc29uLEdvb2dsZURpc2NvdmVyeSxQb3N0bWFuPC9GZWF0dXJlPg0KICAgIDxGZWF0dXJlIG5hbWU9ImV4cG9ydEZvcm1hdHMiPlN3YWdnZXIyMCxTd2FnZ2VyWWFtbCxTd2FnZ2VyMTAsT3BlbkFwaTNKc29uLE9wZW5BcGkzWWFtbCxXc2RsLEFQSUJsdWVQcmludCxBUElFbGVtZW50cyxQb3N0bWFuMixXQURMMjAwOSxXQURMMjAwNixXU0RMLElPRG9jcyxJT0RvY3NWMDMxNCxSQU1MLFJBTUwxMCxHb29nbGVEaXNjb3ZlcnksUG9zdG1hbjIwLEluc29tbmlhLEluc29tbmlhWWFtbDwvRmVhdHVyZT4NCiAgICA8RmVhdHVyZSBuYW1lPSJwbGF0Zm9ybXMiPjwvRmVhdHVyZT4NCiAgPC9Qcm9kdWN0RmVhdHVyZXM+DQogIDxDdXN0b21lcj4NCiAgICA8TmFtZT5EZXZlbG9wZXI8L05hbWU+DQogICAgPEVtYWlsPmRldmVsb3BlckBhcGltYXRpYy5pbzwvRW1haWw+DQogIDwvQ3VzdG9tZXI+DQogIDxTaWduYXR1cmU+TUVVQ0lRRE1yTlY0dE1PUzEwUExiZ1Z0QkVvTHZ6ZGd1UDkzUnk5Tm9pMHBsS2lWa2dJZ1ZOVWtoWTVoS2xiZFBLc1pMcDZrcnZKODV0WUdHUHFBV1gxblkyUUx2NjQ9PC9TaWduYXR1cmU+DQo8L0xpY2Vuc2U+"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-bundle@sha256:bc0c09e8018ace823bee234c52d5fa6894cd100df1799fb91c2027865493fadf",
      "bundle_path_digest": "sha256:bc0c09e8018ace823bee234c52d5fa6894cd100df1799fb91c2027865493fadf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-11-16T07:35:38.198000+00:00",
      "csv_description": "APIMatic CodeGen Operator deploys the APIMatic CodeGen application to Kubernetes and RedHat with all necessary resources and configurations. More information can be found [here](https://github.com/apimatic/apimatic-codegen-operator/blob/main/README.md)",
      "csv_display_name": "APIMatic CodeGen Operator",
      "csv_metadata_description": "API CodeGen Operator deploys the APIMatic CodeGen Application to Kubernetes and OpenShift clusters",
      "csv_name": "apimatic-codegen-operator.v1.9.16",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T07:35:38.198000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "apimatic-codegen-operator",
      "provided_apis": [
        {
          "group": "apps.apimatic.io",
          "kind": "CodeGen",
          "plural": "codegens",
          "version": "v1beta2"
        }
      ],
      "provider": "APIMatic.io",
      "related_images": [
        {
          "digest": "sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "name": "apimatic-codegen-operator-ubi8-cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<1.9.16",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.9.16",
      "version_original": "1.9.16"
    },
    {
      "_id": "637493d43f6a002c6b3607b1",
      "alm_examples": [
        {
          "api_version": "apps.apimatic.io/v1beta2",
          "kind": "CodeGen",
          "metadata": {
            "name": "codegen-sample"
          },
          "spec": {
            "licenseSpec": {
              "licenseSourceType": "LicenseBlob",
              "licenseSourceValue": "PExpY2Vuc2U+DQogIDxJZD41MDVlNzM4Ny0xZmIxLTQ4ZDQtOGRmMS1iYjk3NGEyNjM2MDM8L0lkPg0KICA8VHlwZT5TdGFuZGFyZDwvVHlwZT4NCiAgPEV4cGlyYXRpb24+RnJpLCAxNyBNYXkgMjA1MiAwNzoxOTozOSBHTVQ8L0V4cGlyYXRpb24+DQogIDxRdWFudGl0eT4yPC9RdWFudGl0eT4NCiAgPFByb2R1Y3RGZWF0dXJlcz4NCiAgICA8RmVhdHVyZSBuYW1lPSJpbXBvcnRGb3JtYXRzIj5BUElCbHVlUHJpbnQsQVBJRWxlbWVudHMsUG9zdG1hbjIsV3NkbCxXQURMMjAwOSxXQURMMjAwNixSYW1sLFJhbWwxMCxTd2FnZ2VyMjAsU3dhZ2dlcllhbWwsU3dhZ2dlcjEwLE9wZW5BcGkzSnNvbixPcGVuQXBpM1lhbWwsSU9Eb2NzLElPRG9jc1YwMzE0LEluc29tbmlhLEluc29tbmlhWWFtbCxSQU1MQXNKc29uLEdvb2dsZURpc2NvdmVyeSxQb3N0bWFuPC9GZWF0dXJlPg0KICAgIDxGZWF0dXJlIG5hbWU9ImV4cG9ydEZvcm1hdHMiPlN3YWdnZXIyMCxTd2FnZ2VyWWFtbCxTd2FnZ2VyMTAsT3BlbkFwaTNKc29uLE9wZW5BcGkzWWFtbCxXc2RsLEFQSUJsdWVQcmludCxBUElFbGVtZW50cyxQb3N0bWFuMixXQURMMjAwOSxXQURMMjAwNixXU0RMLElPRG9jcyxJT0RvY3NWMDMxNCxSQU1MLFJBTUwxMCxHb29nbGVEaXNjb3ZlcnksUG9zdG1hbjIwLEluc29tbmlhLEluc29tbmlhWWFtbDwvRmVhdHVyZT4NCiAgICA8RmVhdHVyZSBuYW1lPSJwbGF0Zm9ybXMiPjwvRmVhdHVyZT4NCiAgPC9Qcm9kdWN0RmVhdHVyZXM+DQogIDxDdXN0b21lcj4NCiAgICA8TmFtZT5EZXZlbG9wZXI8L05hbWU+DQogICAgPEVtYWlsPmRldmVsb3BlckBhcGltYXRpYy5pbzwvRW1haWw+DQogIDwvQ3VzdG9tZXI+DQogIDxTaWduYXR1cmU+TUVVQ0lRRE1yTlY0dE1PUzEwUExiZ1Z0QkVvTHZ6ZGd1UDkzUnk5Tm9pMHBsS2lWa2dJZ1ZOVWtoWTVoS2xiZFBLc1pMcDZrcnZKODV0WUdHUHFBV1gxblkyUUx2NjQ9PC9TaWduYXR1cmU+DQo8L0xpY2Vuc2U+"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-bundle@sha256:bc0c09e8018ace823bee234c52d5fa6894cd100df1799fb91c2027865493fadf",
      "bundle_path_digest": "sha256:bc0c09e8018ace823bee234c52d5fa6894cd100df1799fb91c2027865493fadf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-11-16T07:40:04.180000+00:00",
      "csv_description": "APIMatic CodeGen Operator deploys the APIMatic CodeGen application to Kubernetes and RedHat with all necessary resources and configurations. More information can be found [here](https://github.com/apimatic/apimatic-codegen-operator/blob/main/README.md)",
      "csv_display_name": "APIMatic CodeGen Operator",
      "csv_metadata_description": "API CodeGen Operator deploys the APIMatic CodeGen Application to Kubernetes and OpenShift clusters",
      "csv_name": "apimatic-codegen-operator.v1.9.16",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T07:40:04.180000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "apimatic-codegen-operator",
      "provided_apis": [
        {
          "group": "apps.apimatic.io",
          "kind": "CodeGen",
          "plural": "codegens",
          "version": "v1beta2"
        }
      ],
      "provider": "APIMatic.io",
      "related_images": [
        {
          "digest": "sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "name": "apimatic-codegen-operator-ubi8-cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<1.9.16",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.9.16",
      "version_original": "1.9.16"
    },
    {
      "_id": "637493fc64d923486d254ec7",
      "alm_examples": [
        {
          "api_version": "apps.apimatic.io/v1beta2",
          "kind": "CodeGen",
          "metadata": {
            "name": "codegen-sample"
          },
          "spec": {
            "licenseSpec": {
              "licenseSourceType": "LicenseBlob",
              "licenseSourceValue": "PExpY2Vuc2U+DQogIDxJZD41MDVlNzM4Ny0xZmIxLTQ4ZDQtOGRmMS1iYjk3NGEyNjM2MDM8L0lkPg0KICA8VHlwZT5TdGFuZGFyZDwvVHlwZT4NCiAgPEV4cGlyYXRpb24+RnJpLCAxNyBNYXkgMjA1MiAwNzoxOTozOSBHTVQ8L0V4cGlyYXRpb24+DQogIDxRdWFudGl0eT4yPC9RdWFudGl0eT4NCiAgPFByb2R1Y3RGZWF0dXJlcz4NCiAgICA8RmVhdHVyZSBuYW1lPSJpbXBvcnRGb3JtYXRzIj5BUElCbHVlUHJpbnQsQVBJRWxlbWVudHMsUG9zdG1hbjIsV3NkbCxXQURMMjAwOSxXQURMMjAwNixSYW1sLFJhbWwxMCxTd2FnZ2VyMjAsU3dhZ2dlcllhbWwsU3dhZ2dlcjEwLE9wZW5BcGkzSnNvbixPcGVuQXBpM1lhbWwsSU9Eb2NzLElPRG9jc1YwMzE0LEluc29tbmlhLEluc29tbmlhWWFtbCxSQU1MQXNKc29uLEdvb2dsZURpc2NvdmVyeSxQb3N0bWFuPC9GZWF0dXJlPg0KICAgIDxGZWF0dXJlIG5hbWU9ImV4cG9ydEZvcm1hdHMiPlN3YWdnZXIyMCxTd2FnZ2VyWWFtbCxTd2FnZ2VyMTAsT3BlbkFwaTNKc29uLE9wZW5BcGkzWWFtbCxXc2RsLEFQSUJsdWVQcmludCxBUElFbGVtZW50cyxQb3N0bWFuMixXQURMMjAwOSxXQURMMjAwNixXU0RMLElPRG9jcyxJT0RvY3NWMDMxNCxSQU1MLFJBTUwxMCxHb29nbGVEaXNjb3ZlcnksUG9zdG1hbjIwLEluc29tbmlhLEluc29tbmlhWWFtbDwvRmVhdHVyZT4NCiAgICA8RmVhdHVyZSBuYW1lPSJwbGF0Zm9ybXMiPjwvRmVhdHVyZT4NCiAgPC9Qcm9kdWN0RmVhdHVyZXM+DQogIDxDdXN0b21lcj4NCiAgICA8TmFtZT5EZXZlbG9wZXI8L05hbWU+DQogICAgPEVtYWlsPmRldmVsb3BlckBhcGltYXRpYy5pbzwvRW1haWw+DQogIDwvQ3VzdG9tZXI+DQogIDxTaWduYXR1cmU+TUVVQ0lRRE1yTlY0dE1PUzEwUExiZ1Z0QkVvTHZ6ZGd1UDkzUnk5Tm9pMHBsS2lWa2dJZ1ZOVWtoWTVoS2xiZFBLc1pMcDZrcnZKODV0WUdHUHFBV1gxblkyUUx2NjQ9PC9TaWduYXR1cmU+DQo8L0xpY2Vuc2U+"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-bundle@sha256:bc0c09e8018ace823bee234c52d5fa6894cd100df1799fb91c2027865493fadf",
      "bundle_path_digest": "sha256:bc0c09e8018ace823bee234c52d5fa6894cd100df1799fb91c2027865493fadf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-11-16T07:40:44.137000+00:00",
      "csv_description": "APIMatic CodeGen Operator deploys the APIMatic CodeGen application to Kubernetes and RedHat with all necessary resources and configurations. More information can be found [here](https://github.com/apimatic/apimatic-codegen-operator/blob/main/README.md)",
      "csv_display_name": "APIMatic CodeGen Operator",
      "csv_metadata_description": "API CodeGen Operator deploys the APIMatic CodeGen Application to Kubernetes and OpenShift clusters",
      "csv_name": "apimatic-codegen-operator.v1.9.16",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T07:40:44.137000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "apimatic-codegen-operator",
      "provided_apis": [
        {
          "group": "apps.apimatic.io",
          "kind": "CodeGen",
          "version": "v1beta2"
        }
      ],
      "provider": "APIMatic.io",
      "related_images": [
        {
          "digest": "sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "name": "apimatic-codegen-operator-ubi8-cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<1.9.16",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.9.16",
      "version_original": "1.9.16"
    },
    {
      "_id": "637494c164d923486d25507b",
      "alm_examples": [
        {
          "api_version": "apps.apimatic.io/v1beta2",
          "kind": "CodeGen",
          "metadata": {
            "name": "codegen-sample"
          },
          "spec": {
            "licenseSpec": {
              "licenseSourceType": "LicenseBlob",
              "licenseSourceValue": "PExpY2Vuc2U+DQogIDxJZD41MDVlNzM4Ny0xZmIxLTQ4ZDQtOGRmMS1iYjk3NGEyNjM2MDM8L0lkPg0KICA8VHlwZT5TdGFuZGFyZDwvVHlwZT4NCiAgPEV4cGlyYXRpb24+RnJpLCAxNyBNYXkgMjA1MiAwNzoxOTozOSBHTVQ8L0V4cGlyYXRpb24+DQogIDxRdWFudGl0eT4yPC9RdWFudGl0eT4NCiAgPFByb2R1Y3RGZWF0dXJlcz4NCiAgICA8RmVhdHVyZSBuYW1lPSJpbXBvcnRGb3JtYXRzIj5BUElCbHVlUHJpbnQsQVBJRWxlbWVudHMsUG9zdG1hbjIsV3NkbCxXQURMMjAwOSxXQURMMjAwNixSYW1sLFJhbWwxMCxTd2FnZ2VyMjAsU3dhZ2dlcllhbWwsU3dhZ2dlcjEwLE9wZW5BcGkzSnNvbixPcGVuQXBpM1lhbWwsSU9Eb2NzLElPRG9jc1YwMzE0LEluc29tbmlhLEluc29tbmlhWWFtbCxSQU1MQXNKc29uLEdvb2dsZURpc2NvdmVyeSxQb3N0bWFuPC9GZWF0dXJlPg0KICAgIDxGZWF0dXJlIG5hbWU9ImV4cG9ydEZvcm1hdHMiPlN3YWdnZXIyMCxTd2FnZ2VyWWFtbCxTd2FnZ2VyMTAsT3BlbkFwaTNKc29uLE9wZW5BcGkzWWFtbCxXc2RsLEFQSUJsdWVQcmludCxBUElFbGVtZW50cyxQb3N0bWFuMixXQURMMjAwOSxXQURMMjAwNixXU0RMLElPRG9jcyxJT0RvY3NWMDMxNCxSQU1MLFJBTUwxMCxHb29nbGVEaXNjb3ZlcnksUG9zdG1hbjIwLEluc29tbmlhLEluc29tbmlhWWFtbDwvRmVhdHVyZT4NCiAgICA8RmVhdHVyZSBuYW1lPSJwbGF0Zm9ybXMiPjwvRmVhdHVyZT4NCiAgPC9Qcm9kdWN0RmVhdHVyZXM+DQogIDxDdXN0b21lcj4NCiAgICA8TmFtZT5EZXZlbG9wZXI8L05hbWU+DQogICAgPEVtYWlsPmRldmVsb3BlckBhcGltYXRpYy5pbzwvRW1haWw+DQogIDwvQ3VzdG9tZXI+DQogIDxTaWduYXR1cmU+TUVVQ0lRRE1yTlY0dE1PUzEwUExiZ1Z0QkVvTHZ6ZGd1UDkzUnk5Tm9pMHBsS2lWa2dJZ1ZOVWtoWTVoS2xiZFBLc1pMcDZrcnZKODV0WUdHUHFBV1gxblkyUUx2NjQ9PC9TaWduYXR1cmU+DQo8L0xpY2Vuc2U+"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-bundle@sha256:bc0c09e8018ace823bee234c52d5fa6894cd100df1799fb91c2027865493fadf",
      "bundle_path_digest": "sha256:bc0c09e8018ace823bee234c52d5fa6894cd100df1799fb91c2027865493fadf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-11-16T07:44:01.044000+00:00",
      "csv_description": "APIMatic CodeGen Operator deploys the APIMatic CodeGen application to Kubernetes and RedHat with all necessary resources and configurations. More information can be found [here](https://github.com/apimatic/apimatic-codegen-operator/blob/main/README.md)",
      "csv_display_name": "APIMatic CodeGen Operator",
      "csv_metadata_description": "API CodeGen Operator deploys the APIMatic CodeGen Application to Kubernetes and OpenShift clusters",
      "csv_name": "apimatic-codegen-operator.v1.9.16",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T07:44:01.044000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "apimatic-codegen-operator",
      "provided_apis": [
        {
          "group": "apps.apimatic.io",
          "kind": "CodeGen",
          "plural": "codegens",
          "version": "v1beta2"
        }
      ],
      "provider": "APIMatic.io",
      "related_images": [
        {
          "digest": "sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "name": "apimatic-codegen-operator-ubi8-cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:cf6d4fd4816338a19ce07880569bc8d83afc72f2c83692862cf1b95fde2cd101",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<1.9.16",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.9.16",
      "version_original": "1.9.16"
    },
    {
      "_id": "6374abaa601aa784dae69a0c",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:e09a84b3c86bf654fe08d8382f2a4bb1314e6d5361187c9e84b27ca83bd9940d",
      "bundle_path_digest": "sha256:e09a84b3c86bf654fe08d8382f2a4bb1314e6d5361187c9e84b27ca83bd9940d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T09:21:46.341000+00:00",
      "csv_description": "# Overview \n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_6:CSI-Volume-Driver-v2_6).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n| Red Hat OpenShift      | 4.11    | x86          |\n| Red Hat OpenShift      | 4.12    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_6:CSI-Volume-Driver-v2_6) or the example in below section:\n\n1. Create a NutanixCsiStorage resource to deploy your driver\n\nYou can do it directly inside the Operator UI with the `Create instance` button or with the following ressource\n```yaml\napiVersion: crd.nutanix.com/v1alpha1\nkind: NutanixCsiStorage\nmetadata:\n  name: nutanixcsistorage\n  namespace: ntnx-system\nspec: {}\n```\n\n2. Create a Nutanix secret\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: openshift-cluster-csi-drivers\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 1.2.3.4:9440:admin:password\n```\n\n3. Create storage classes\n\n- volume mode example\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  squashType: \"root-squash\"\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T09:21:46.341000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "provider": "Nutanix",
      "related_images": [
        {
          "digest": "sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "name": "nutanix-csi"
        },
        {
          "digest": "sha256:f1c25991bac2fbb7f5fcf91ed9438df31e30edee6bed5a780464238aa09ad24c",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:f1c25991bac2fbb7f5fcf91ed9438df31e30edee6bed5a780464238aa09ad24c",
          "name": "registrar"
        },
        {
          "digest": "sha256:ee3b525d5b89db99da3b8eb521d9cd90cb6e9ef0fbb651e98bb37be78d36b5b8",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:ee3b525d5b89db99da3b8eb521d9cd90cb6e9ef0fbb651e98bb37be78d36b5b8",
          "name": "provisioner"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "provisioner-legacy"
        },
        {
          "digest": "sha256:291334908ddf71a4661fd7f6d9d97274de8a5378a2b6fdfeb2ce73414a34f82f",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:291334908ddf71a4661fd7f6d9d97274de8a5378a2b6fdfeb2ce73414a34f82f",
          "name": "snapshotter"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "snapshotter-beta"
        },
        {
          "digest": "sha256:425d8f1b769398127767b06ed97ce62578a3179bcb99809ce93a1649e025ffe7",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:425d8f1b769398127767b06ed97ce62578a3179bcb99809ce93a1649e025ffe7",
          "name": "resizer"
        },
        {
          "digest": "sha256:cacee2b5c36dd59d4c7e8469c05c9e4ef53ecb2df9025fa8c10cdaf61bce62f0",
          "image": "k8s.gcr.io/sig-storage/livenessprobe@sha256:cacee2b5c36dd59d4c7e8469c05c9e4ef53ecb2df9025fa8c10cdaf61bce62f0",
          "name": "livenessprobe"
        },
        {
          "digest": "sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "name": "nutanix-csi-operator-f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698-annotation"
        },
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "name": "manager"
        },
        {
          "digest": "sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "name": "nutanix_csi"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "provisioner_legacy"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "snapshotter_beta"
        }
      ],
      "replaces": null,
      "skip_range": "<2.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.6.1",
      "version_original": "2.6.1"
    },
    {
      "_id": "6374abcf64d923486d258365",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:e09a84b3c86bf654fe08d8382f2a4bb1314e6d5361187c9e84b27ca83bd9940d",
      "bundle_path_digest": "sha256:e09a84b3c86bf654fe08d8382f2a4bb1314e6d5361187c9e84b27ca83bd9940d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T09:22:23.452000+00:00",
      "csv_description": "# Overview \n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_6:CSI-Volume-Driver-v2_6).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n| Red Hat OpenShift      | 4.11    | x86          |\n| Red Hat OpenShift      | 4.12    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_6:CSI-Volume-Driver-v2_6) or the example in below section:\n\n1. Create a NutanixCsiStorage resource to deploy your driver\n\nYou can do it directly inside the Operator UI with the `Create instance` button or with the following ressource\n```yaml\napiVersion: crd.nutanix.com/v1alpha1\nkind: NutanixCsiStorage\nmetadata:\n  name: nutanixcsistorage\n  namespace: ntnx-system\nspec: {}\n```\n\n2. Create a Nutanix secret\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: openshift-cluster-csi-drivers\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 1.2.3.4:9440:admin:password\n```\n\n3. Create storage classes\n\n- volume mode example\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  squashType: \"root-squash\"\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T09:22:23.452000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "version": "v1alpha1"
        }
      ],
      "provider": "Nutanix",
      "related_images": [
        {
          "digest": "sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "name": "nutanix-csi"
        },
        {
          "digest": "sha256:f1c25991bac2fbb7f5fcf91ed9438df31e30edee6bed5a780464238aa09ad24c",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:f1c25991bac2fbb7f5fcf91ed9438df31e30edee6bed5a780464238aa09ad24c",
          "name": "registrar"
        },
        {
          "digest": "sha256:ee3b525d5b89db99da3b8eb521d9cd90cb6e9ef0fbb651e98bb37be78d36b5b8",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:ee3b525d5b89db99da3b8eb521d9cd90cb6e9ef0fbb651e98bb37be78d36b5b8",
          "name": "provisioner"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "provisioner-legacy"
        },
        {
          "digest": "sha256:291334908ddf71a4661fd7f6d9d97274de8a5378a2b6fdfeb2ce73414a34f82f",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:291334908ddf71a4661fd7f6d9d97274de8a5378a2b6fdfeb2ce73414a34f82f",
          "name": "snapshotter"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "snapshotter-beta"
        },
        {
          "digest": "sha256:425d8f1b769398127767b06ed97ce62578a3179bcb99809ce93a1649e025ffe7",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:425d8f1b769398127767b06ed97ce62578a3179bcb99809ce93a1649e025ffe7",
          "name": "resizer"
        },
        {
          "digest": "sha256:cacee2b5c36dd59d4c7e8469c05c9e4ef53ecb2df9025fa8c10cdaf61bce62f0",
          "image": "k8s.gcr.io/sig-storage/livenessprobe@sha256:cacee2b5c36dd59d4c7e8469c05c9e4ef53ecb2df9025fa8c10cdaf61bce62f0",
          "name": "livenessprobe"
        },
        {
          "digest": "sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "name": "nutanix-csi-operator-f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698-annotation"
        },
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "name": "manager"
        },
        {
          "digest": "sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "name": "nutanix_csi"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "provisioner_legacy"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "snapshotter_beta"
        }
      ],
      "replaces": null,
      "skip_range": "<2.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.6.1",
      "version_original": "2.6.1"
    },
    {
      "_id": "6374abdad012d3e7d00fce51",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:e09a84b3c86bf654fe08d8382f2a4bb1314e6d5361187c9e84b27ca83bd9940d",
      "bundle_path_digest": "sha256:e09a84b3c86bf654fe08d8382f2a4bb1314e6d5361187c9e84b27ca83bd9940d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T09:22:34.441000+00:00",
      "csv_description": "# Overview \n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_6:CSI-Volume-Driver-v2_6).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n| Red Hat OpenShift      | 4.11    | x86          |\n| Red Hat OpenShift      | 4.12    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_6:CSI-Volume-Driver-v2_6) or the example in below section:\n\n1. Create a NutanixCsiStorage resource to deploy your driver\n\nYou can do it directly inside the Operator UI with the `Create instance` button or with the following ressource\n```yaml\napiVersion: crd.nutanix.com/v1alpha1\nkind: NutanixCsiStorage\nmetadata:\n  name: nutanixcsistorage\n  namespace: ntnx-system\nspec: {}\n```\n\n2. Create a Nutanix secret\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: openshift-cluster-csi-drivers\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 1.2.3.4:9440:admin:password\n```\n\n3. Create storage classes\n\n- volume mode example\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  squashType: \"root-squash\"\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T09:22:34.441000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "provider": "Nutanix",
      "related_images": [
        {
          "digest": "sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "name": "nutanix-csi"
        },
        {
          "digest": "sha256:f1c25991bac2fbb7f5fcf91ed9438df31e30edee6bed5a780464238aa09ad24c",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:f1c25991bac2fbb7f5fcf91ed9438df31e30edee6bed5a780464238aa09ad24c",
          "name": "registrar"
        },
        {
          "digest": "sha256:ee3b525d5b89db99da3b8eb521d9cd90cb6e9ef0fbb651e98bb37be78d36b5b8",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:ee3b525d5b89db99da3b8eb521d9cd90cb6e9ef0fbb651e98bb37be78d36b5b8",
          "name": "provisioner"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "provisioner-legacy"
        },
        {
          "digest": "sha256:291334908ddf71a4661fd7f6d9d97274de8a5378a2b6fdfeb2ce73414a34f82f",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:291334908ddf71a4661fd7f6d9d97274de8a5378a2b6fdfeb2ce73414a34f82f",
          "name": "snapshotter"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "snapshotter-beta"
        },
        {
          "digest": "sha256:425d8f1b769398127767b06ed97ce62578a3179bcb99809ce93a1649e025ffe7",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:425d8f1b769398127767b06ed97ce62578a3179bcb99809ce93a1649e025ffe7",
          "name": "resizer"
        },
        {
          "digest": "sha256:cacee2b5c36dd59d4c7e8469c05c9e4ef53ecb2df9025fa8c10cdaf61bce62f0",
          "image": "k8s.gcr.io/sig-storage/livenessprobe@sha256:cacee2b5c36dd59d4c7e8469c05c9e4ef53ecb2df9025fa8c10cdaf61bce62f0",
          "name": "livenessprobe"
        },
        {
          "digest": "sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "name": "nutanix-csi-operator-f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698-annotation"
        },
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "name": "manager"
        },
        {
          "digest": "sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "name": "nutanix_csi"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "provisioner_legacy"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "snapshotter_beta"
        }
      ],
      "replaces": null,
      "skip_range": "<2.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.6.1",
      "version_original": "2.6.1"
    },
    {
      "_id": "6374ac3aed63caac86f8862a",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:e09a84b3c86bf654fe08d8382f2a4bb1314e6d5361187c9e84b27ca83bd9940d",
      "bundle_path_digest": "sha256:e09a84b3c86bf654fe08d8382f2a4bb1314e6d5361187c9e84b27ca83bd9940d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T09:24:10.548000+00:00",
      "csv_description": "# Overview \n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_6:CSI-Volume-Driver-v2_6).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n| Red Hat OpenShift      | 4.11    | x86          |\n| Red Hat OpenShift      | 4.12    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_6:CSI-Volume-Driver-v2_6) or the example in below section:\n\n1. Create a NutanixCsiStorage resource to deploy your driver\n\nYou can do it directly inside the Operator UI with the `Create instance` button or with the following ressource\n```yaml\napiVersion: crd.nutanix.com/v1alpha1\nkind: NutanixCsiStorage\nmetadata:\n  name: nutanixcsistorage\n  namespace: ntnx-system\nspec: {}\n```\n\n2. Create a Nutanix secret\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: openshift-cluster-csi-drivers\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 1.2.3.4:9440:admin:password\n```\n\n3. Create storage classes\n\n- volume mode example\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  squashType: \"root-squash\"\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T09:24:10.548000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "version": "v1alpha1"
        }
      ],
      "provider": "Nutanix",
      "related_images": [
        {
          "digest": "sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "name": "nutanix-csi"
        },
        {
          "digest": "sha256:f1c25991bac2fbb7f5fcf91ed9438df31e30edee6bed5a780464238aa09ad24c",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:f1c25991bac2fbb7f5fcf91ed9438df31e30edee6bed5a780464238aa09ad24c",
          "name": "registrar"
        },
        {
          "digest": "sha256:ee3b525d5b89db99da3b8eb521d9cd90cb6e9ef0fbb651e98bb37be78d36b5b8",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:ee3b525d5b89db99da3b8eb521d9cd90cb6e9ef0fbb651e98bb37be78d36b5b8",
          "name": "provisioner"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "provisioner-legacy"
        },
        {
          "digest": "sha256:291334908ddf71a4661fd7f6d9d97274de8a5378a2b6fdfeb2ce73414a34f82f",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:291334908ddf71a4661fd7f6d9d97274de8a5378a2b6fdfeb2ce73414a34f82f",
          "name": "snapshotter"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "snapshotter-beta"
        },
        {
          "digest": "sha256:425d8f1b769398127767b06ed97ce62578a3179bcb99809ce93a1649e025ffe7",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:425d8f1b769398127767b06ed97ce62578a3179bcb99809ce93a1649e025ffe7",
          "name": "resizer"
        },
        {
          "digest": "sha256:cacee2b5c36dd59d4c7e8469c05c9e4ef53ecb2df9025fa8c10cdaf61bce62f0",
          "image": "k8s.gcr.io/sig-storage/livenessprobe@sha256:cacee2b5c36dd59d4c7e8469c05c9e4ef53ecb2df9025fa8c10cdaf61bce62f0",
          "name": "livenessprobe"
        },
        {
          "digest": "sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "name": "nutanix-csi-operator-f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698-annotation"
        },
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "name": "manager"
        },
        {
          "digest": "sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "name": "nutanix_csi"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "provisioner_legacy"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "snapshotter_beta"
        }
      ],
      "replaces": null,
      "skip_range": "<2.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "2.6.1",
      "version_original": "2.6.1"
    },
    {
      "_id": "6374ac84ed63caac86f886c8",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:e09a84b3c86bf654fe08d8382f2a4bb1314e6d5361187c9e84b27ca83bd9940d",
      "bundle_path_digest": "sha256:e09a84b3c86bf654fe08d8382f2a4bb1314e6d5361187c9e84b27ca83bd9940d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T09:25:24.447000+00:00",
      "csv_description": "# Overview \n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_6:CSI-Volume-Driver-v2_6).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n| Red Hat OpenShift      | 4.11    | x86          |\n| Red Hat OpenShift      | 4.12    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_6:CSI-Volume-Driver-v2_6) or the example in below section:\n\n1. Create a NutanixCsiStorage resource to deploy your driver\n\nYou can do it directly inside the Operator UI with the `Create instance` button or with the following ressource\n```yaml\napiVersion: crd.nutanix.com/v1alpha1\nkind: NutanixCsiStorage\nmetadata:\n  name: nutanixcsistorage\n  namespace: ntnx-system\nspec: {}\n```\n\n2. Create a Nutanix secret\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: openshift-cluster-csi-drivers\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 1.2.3.4:9440:admin:password\n```\n\n3. Create storage classes\n\n- volume mode example\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  squashType: \"root-squash\"\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T09:25:24.447000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "provider": "Nutanix",
      "related_images": [
        {
          "digest": "sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "name": "nutanix-csi"
        },
        {
          "digest": "sha256:f1c25991bac2fbb7f5fcf91ed9438df31e30edee6bed5a780464238aa09ad24c",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:f1c25991bac2fbb7f5fcf91ed9438df31e30edee6bed5a780464238aa09ad24c",
          "name": "registrar"
        },
        {
          "digest": "sha256:ee3b525d5b89db99da3b8eb521d9cd90cb6e9ef0fbb651e98bb37be78d36b5b8",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:ee3b525d5b89db99da3b8eb521d9cd90cb6e9ef0fbb651e98bb37be78d36b5b8",
          "name": "provisioner"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "provisioner-legacy"
        },
        {
          "digest": "sha256:291334908ddf71a4661fd7f6d9d97274de8a5378a2b6fdfeb2ce73414a34f82f",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:291334908ddf71a4661fd7f6d9d97274de8a5378a2b6fdfeb2ce73414a34f82f",
          "name": "snapshotter"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "snapshotter-beta"
        },
        {
          "digest": "sha256:425d8f1b769398127767b06ed97ce62578a3179bcb99809ce93a1649e025ffe7",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:425d8f1b769398127767b06ed97ce62578a3179bcb99809ce93a1649e025ffe7",
          "name": "resizer"
        },
        {
          "digest": "sha256:cacee2b5c36dd59d4c7e8469c05c9e4ef53ecb2df9025fa8c10cdaf61bce62f0",
          "image": "k8s.gcr.io/sig-storage/livenessprobe@sha256:cacee2b5c36dd59d4c7e8469c05c9e4ef53ecb2df9025fa8c10cdaf61bce62f0",
          "name": "livenessprobe"
        },
        {
          "digest": "sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "name": "nutanix-csi-operator-f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698-annotation"
        },
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:f9fe7d949fb473440e37a8691034a93c2873b38136b38e85b103f7fa40544698",
          "name": "manager"
        },
        {
          "digest": "sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:831120055e5b5516c9a19dade06659a5c75e362f9109096a18e9ec416dd3ce04",
          "name": "nutanix_csi"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "provisioner_legacy"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "snapshotter_beta"
        }
      ],
      "replaces": null,
      "skip_range": "<2.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.6.1",
      "version_original": "2.6.1"
    },
    {
      "_id": "6374b9d1a6a85d5d01fffe02",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "bundle_path_digest": "sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:22:09.813000+00:00",
      "csv_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Multi Tenant Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.\n\n## Access Control\n\nMulti Tenant Operator provides several ClusterRoles that are automatically bound to the Tenants Namespaces used for managing access to the Namespaces and the resources they contain. You can also modify the default roles or create new roles to have full control and customize access control for your users and teams.\n\n## Self-Service\n\nWith Multi Tenant Operator, you can empower your users to safely provision namespaces for themselves and their teams (typically mapped to SSO groups). Team-owned namespaces and the resources inside of them count towards the team's quotas rather than the user's individual limits and are automatically shared with all team members according to the access rules you configure in tenant-operator.\n\n## HashiCorp Vault Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to HashiCorp Vault where it can create vault paths and greatly ease the overhead of managing RBAC in Vault.\n\n## ArgoCD Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to ArgoCD where it can provision AppProjects and Allowed Repositories for your tenants greatly easing the overhead of managing RBAC in ArgoCD.\n\n## Cost/Resource Optimization\n\nMulti Tenant Operator provides a mechanism for defining Resource Quotas at the tenant scope, meaning all namespaces belonging to a particular tenant share the defined quota, which is why you are able to safely enable dev teams to self-serve their namespaces whilst being confident that they can only use the resources allocated based on budget and business needs.\n\n## Sandboxed Dev Namespaces\n\nMulti Tenant Operator can be configured to automatically provision a namespace for every member of the specific tenant, that will also be pre-loaded with any selected templates and consume the same pool of resources from the tenant's quota creating safe sandboxed dev namespaces that teams can use as a scratch namespace for rapid prototyping and development.",
      "csv_display_name": "Multi Tenant Operator",
      "csv_metadata_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Stakater Multi-Tenancy Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.",
      "csv_name": "tenant-operator.v0.7.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:22:09.813000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta2"
        }
      ],
      "provider": "Stakater",
      "related_images": [
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "manager"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "tenant-operator-4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.7.5",
      "version_original": "0.7.5"
    },
    {
      "_id": "6374b9d42e831b3fd5b48b61",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "bundle_path_digest": "sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:22:12.847000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:22:12.847000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta2"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "6374b9d7ed63caac86f8a34e",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "bundle_path_digest": "sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:22:15.306000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:22:15.306000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta2"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.7.2",
      "version_original": "0.7.2"
    },
    {
      "_id": "6374b9d92e831b3fd5b48b6b",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "bundle_path_digest": "sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:17.384000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:17.384000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta2"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.7.2",
      "version_original": "0.7.2"
    },
    {
      "_id": "6374b9da2e831b3fd5b48b70",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "bundle_path_digest": "sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:18.758000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:18.758000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta2"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.7.3",
      "version_original": "0.7.3"
    },
    {
      "_id": "6374b9da3f6a002c6b365979",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "bundle_path_digest": "sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:22:18.784000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:22:18.784000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "6374b9dc2e831b3fd5b48b75",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "bundle_path_digest": "sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:22:20.120000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:22:20.120000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.2",
      "version_original": "0.7.2"
    },
    {
      "_id": "6374b9dc2e831b3fd5b48b79",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "bundle_path_digest": "sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:20.341000+00:00",
      "csv_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Multi Tenant Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.\n\n## Access Control\n\nMulti Tenant Operator provides several ClusterRoles that are automatically bound to the Tenants Namespaces used for managing access to the Namespaces and the resources they contain. You can also modify the default roles or create new roles to have full control and customize access control for your users and teams.\n\n## Self-Service\n\nWith Multi Tenant Operator, you can empower your users to safely provision namespaces for themselves and their teams (typically mapped to SSO groups). Team-owned namespaces and the resources inside of them count towards the team's quotas rather than the user's individual limits and are automatically shared with all team members according to the access rules you configure in tenant-operator.\n\n## HashiCorp Vault Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to HashiCorp Vault where it can create vault paths and greatly ease the overhead of managing RBAC in Vault.\n\n## ArgoCD Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to ArgoCD where it can provision AppProjects and Allowed Repositories for your tenants greatly easing the overhead of managing RBAC in ArgoCD.\n\n## Cost/Resource Optimization\n\nMulti Tenant Operator provides a mechanism for defining Resource Quotas at the tenant scope, meaning all namespaces belonging to a particular tenant share the defined quota, which is why you are able to safely enable dev teams to self-serve their namespaces whilst being confident that they can only use the resources allocated based on budget and business needs.\n\n## Sandboxed Dev Namespaces\n\nMulti Tenant Operator can be configured to automatically provision a namespace for every member of the specific tenant, that will also be pre-loaded with any selected templates and consume the same pool of resources from the tenant's quota creating safe sandboxed dev namespaces that teams can use as a scratch namespace for rapid prototyping and development.",
      "csv_display_name": "Multi Tenant Operator",
      "csv_metadata_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Stakater Multi-Tenancy Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.",
      "csv_name": "tenant-operator.v0.7.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:20.341000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta2"
        }
      ],
      "provider": "Stakater",
      "related_images": [
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "manager"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "tenant-operator-4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.7.5",
      "version_original": "0.7.5"
    },
    {
      "_id": "6374b9de8b147d8e7014734f",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "bundle_path_digest": "sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:22.043000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:22.043000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta2"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "6374b9df64d923486d25a186",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "bundle_path_digest": "sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:23.392000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:23.392000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.3",
      "version_original": "0.7.3"
    },
    {
      "_id": "6374b9e198fe8fea0f289119",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "bundle_path_digest": "sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:25.026000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:25.026000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.2",
      "version_original": "0.7.2"
    },
    {
      "_id": "6374b9e298fe8fea0f28911c",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "bundle_path_digest": "sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:26.105000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:26.105000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "6374b9e398fe8fea0f28911f",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "bundle_path_digest": "sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:27.984000+00:00",
      "csv_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Multi Tenant Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.\n\n## Access Control\n\nMulti Tenant Operator provides several ClusterRoles that are automatically bound to the Tenants Namespaces used for managing access to the Namespaces and the resources they contain. You can also modify the default roles or create new roles to have full control and customize access control for your users and teams.\n\n## Self-Service\n\nWith Multi Tenant Operator, you can empower your users to safely provision namespaces for themselves and their teams (typically mapped to SSO groups). Team-owned namespaces and the resources inside of them count towards the team's quotas rather than the user's individual limits and are automatically shared with all team members according to the access rules you configure in tenant-operator.\n\n## HashiCorp Vault Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to HashiCorp Vault where it can create vault paths and greatly ease the overhead of managing RBAC in Vault.\n\n## ArgoCD Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to ArgoCD where it can provision AppProjects and Allowed Repositories for your tenants greatly easing the overhead of managing RBAC in ArgoCD.\n\n## Cost/Resource Optimization\n\nMulti Tenant Operator provides a mechanism for defining Resource Quotas at the tenant scope, meaning all namespaces belonging to a particular tenant share the defined quota, which is why you are able to safely enable dev teams to self-serve their namespaces whilst being confident that they can only use the resources allocated based on budget and business needs.\n\n## Sandboxed Dev Namespaces\n\nMulti Tenant Operator can be configured to automatically provision a namespace for every member of the specific tenant, that will also be pre-loaded with any selected templates and consume the same pool of resources from the tenant's quota creating safe sandboxed dev namespaces that teams can use as a scratch namespace for rapid prototyping and development.",
      "csv_display_name": "Multi Tenant Operator",
      "csv_metadata_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Stakater Multi-Tenancy Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.",
      "csv_name": "tenant-operator.v0.7.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:27.984000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        }
      ],
      "provider": "Stakater",
      "related_images": [
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "manager"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "tenant-operator-4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.5",
      "version_original": "0.7.5"
    },
    {
      "_id": "6374b9e53f6a002c6b3659a4",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "bundle_path_digest": "sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:22:29.354000+00:00",
      "csv_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Multi Tenant Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.\n\n## Access Control\n\nMulti Tenant Operator provides several ClusterRoles that are automatically bound to the Tenants Namespaces used for managing access to the Namespaces and the resources they contain. You can also modify the default roles or create new roles to have full control and customize access control for your users and teams.\n\n## Self-Service\n\nWith Multi Tenant Operator, you can empower your users to safely provision namespaces for themselves and their teams (typically mapped to SSO groups). Team-owned namespaces and the resources inside of them count towards the team's quotas rather than the user's individual limits and are automatically shared with all team members according to the access rules you configure in tenant-operator.\n\n## HashiCorp Vault Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to HashiCorp Vault where it can create vault paths and greatly ease the overhead of managing RBAC in Vault.\n\n## ArgoCD Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to ArgoCD where it can provision AppProjects and Allowed Repositories for your tenants greatly easing the overhead of managing RBAC in ArgoCD.\n\n## Cost/Resource Optimization\n\nMulti Tenant Operator provides a mechanism for defining Resource Quotas at the tenant scope, meaning all namespaces belonging to a particular tenant share the defined quota, which is why you are able to safely enable dev teams to self-serve their namespaces whilst being confident that they can only use the resources allocated based on budget and business needs.\n\n## Sandboxed Dev Namespaces\n\nMulti Tenant Operator can be configured to automatically provision a namespace for every member of the specific tenant, that will also be pre-loaded with any selected templates and consume the same pool of resources from the tenant's quota creating safe sandboxed dev namespaces that teams can use as a scratch namespace for rapid prototyping and development.",
      "csv_display_name": "Multi Tenant Operator",
      "csv_metadata_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Stakater Multi-Tenancy Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.",
      "csv_name": "tenant-operator.v0.7.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:22:29.354000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        }
      ],
      "provider": "Stakater",
      "related_images": [
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "manager"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "tenant-operator-4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.5",
      "version_original": "0.7.5"
    },
    {
      "_id": "6374b9f83f6a002c6b3659d8",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "bundle_path_digest": "sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:48.115000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:48.115000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "6374b9f964d923486d25a1c9",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "bundle_path_digest": "sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:22:49.049000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:22:49.049000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "6374b9f92e831b3fd5b48bcd",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "bundle_path_digest": "sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:49.946000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:49.946000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.7.2",
      "version_original": "0.7.2"
    },
    {
      "_id": "6374b9fa2e831b3fd5b48bd1",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "bundle_path_digest": "sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:22:50.960000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:22:50.960000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.7.2",
      "version_original": "0.7.2"
    },
    {
      "_id": "6374b9fc3f6a002c6b3659df",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "bundle_path_digest": "sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:52.043000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:52.043000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.7.3",
      "version_original": "0.7.3"
    },
    {
      "_id": "6374b9fd64d923486d25a1d6",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "bundle_path_digest": "sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:22:53.417000+00:00",
      "csv_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Multi Tenant Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.\n\n## Access Control\n\nMulti Tenant Operator provides several ClusterRoles that are automatically bound to the Tenants Namespaces used for managing access to the Namespaces and the resources they contain. You can also modify the default roles or create new roles to have full control and customize access control for your users and teams.\n\n## Self-Service\n\nWith Multi Tenant Operator, you can empower your users to safely provision namespaces for themselves and their teams (typically mapped to SSO groups). Team-owned namespaces and the resources inside of them count towards the team's quotas rather than the user's individual limits and are automatically shared with all team members according to the access rules you configure in tenant-operator.\n\n## HashiCorp Vault Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to HashiCorp Vault where it can create vault paths and greatly ease the overhead of managing RBAC in Vault.\n\n## ArgoCD Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to ArgoCD where it can provision AppProjects and Allowed Repositories for your tenants greatly easing the overhead of managing RBAC in ArgoCD.\n\n## Cost/Resource Optimization\n\nMulti Tenant Operator provides a mechanism for defining Resource Quotas at the tenant scope, meaning all namespaces belonging to a particular tenant share the defined quota, which is why you are able to safely enable dev teams to self-serve their namespaces whilst being confident that they can only use the resources allocated based on budget and business needs.\n\n## Sandboxed Dev Namespaces\n\nMulti Tenant Operator can be configured to automatically provision a namespace for every member of the specific tenant, that will also be pre-loaded with any selected templates and consume the same pool of resources from the tenant's quota creating safe sandboxed dev namespaces that teams can use as a scratch namespace for rapid prototyping and development.",
      "csv_display_name": "Multi Tenant Operator",
      "csv_metadata_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Stakater Multi-Tenancy Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.",
      "csv_name": "tenant-operator.v0.7.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:22:53.417000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        }
      ],
      "provider": "Stakater",
      "related_images": [
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "manager"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "tenant-operator-4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.7.5",
      "version_original": "0.7.5"
    },
    {
      "_id": "6374b9fed012d3e7d00feca6",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "bundle_path_digest": "sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:22:54.697000+00:00",
      "csv_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Multi Tenant Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.\n\n## Access Control\n\nMulti Tenant Operator provides several ClusterRoles that are automatically bound to the Tenants Namespaces used for managing access to the Namespaces and the resources they contain. You can also modify the default roles or create new roles to have full control and customize access control for your users and teams.\n\n## Self-Service\n\nWith Multi Tenant Operator, you can empower your users to safely provision namespaces for themselves and their teams (typically mapped to SSO groups). Team-owned namespaces and the resources inside of them count towards the team's quotas rather than the user's individual limits and are automatically shared with all team members according to the access rules you configure in tenant-operator.\n\n## HashiCorp Vault Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to HashiCorp Vault where it can create vault paths and greatly ease the overhead of managing RBAC in Vault.\n\n## ArgoCD Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to ArgoCD where it can provision AppProjects and Allowed Repositories for your tenants greatly easing the overhead of managing RBAC in ArgoCD.\n\n## Cost/Resource Optimization\n\nMulti Tenant Operator provides a mechanism for defining Resource Quotas at the tenant scope, meaning all namespaces belonging to a particular tenant share the defined quota, which is why you are able to safely enable dev teams to self-serve their namespaces whilst being confident that they can only use the resources allocated based on budget and business needs.\n\n## Sandboxed Dev Namespaces\n\nMulti Tenant Operator can be configured to automatically provision a namespace for every member of the specific tenant, that will also be pre-loaded with any selected templates and consume the same pool of resources from the tenant's quota creating safe sandboxed dev namespaces that teams can use as a scratch namespace for rapid prototyping and development.",
      "csv_display_name": "Multi Tenant Operator",
      "csv_metadata_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Stakater Multi-Tenancy Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.",
      "csv_name": "tenant-operator.v0.7.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:22:54.697000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        }
      ],
      "provider": "Stakater",
      "related_images": [
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "manager"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "tenant-operator-4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.7.5",
      "version_original": "0.7.5"
    },
    {
      "_id": "6374ba1d3f6a002c6b365a36",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "bundle_path_digest": "sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:23:25.563000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:23:25.563000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "6374ba1e2e831b3fd5b48c3d",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "bundle_path_digest": "sha256:6f893ad8a063fe7602d2425479a430f463a931ab84a9861d1143af89306b6d40",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:23:26.389000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:23:26.389000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:05e84618a81fa6f05a4a49a57a86a789e5b1473dc110d9742c2fb49f7be287c7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "6374ba1f3f6a002c6b365a3f",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "bundle_path_digest": "sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:23:27.477000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:23:27.477000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.7.2",
      "version_original": "0.7.2"
    },
    {
      "_id": "6374ba203f6a002c6b365a42",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "bundle_path_digest": "sha256:c425d6688659ae4cfe20ef3ad202123d7902634d7f57c4cea1c2e1a08019fc82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:23:28.409000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:23:28.409000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:16bba1ae63876c0b42283adb966fdb19c583c9c1830e2c621feab6713ab73873",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.7.2",
      "version_original": "0.7.2"
    },
    {
      "_id": "6374ba21fc5bb7604727706f",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "bundle_path_digest": "sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:23:29.168000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:23:29.168000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.7.3",
      "version_original": "0.7.3"
    },
    {
      "_id": "6374ba2264d923486d25a232",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "bundle_path_digest": "sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "0.7.5",
      "creation_date": "2022-11-16T10:23:30.149000+00:00",
      "csv_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Multi Tenant Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.\n\n## Access Control\n\nMulti Tenant Operator provides several ClusterRoles that are automatically bound to the Tenants Namespaces used for managing access to the Namespaces and the resources they contain. You can also modify the default roles or create new roles to have full control and customize access control for your users and teams.\n\n## Self-Service\n\nWith Multi Tenant Operator, you can empower your users to safely provision namespaces for themselves and their teams (typically mapped to SSO groups). Team-owned namespaces and the resources inside of them count towards the team's quotas rather than the user's individual limits and are automatically shared with all team members according to the access rules you configure in tenant-operator.\n\n## HashiCorp Vault Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to HashiCorp Vault where it can create vault paths and greatly ease the overhead of managing RBAC in Vault.\n\n## ArgoCD Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to ArgoCD where it can provision AppProjects and Allowed Repositories for your tenants greatly easing the overhead of managing RBAC in ArgoCD.\n\n## Cost/Resource Optimization\n\nMulti Tenant Operator provides a mechanism for defining Resource Quotas at the tenant scope, meaning all namespaces belonging to a particular tenant share the defined quota, which is why you are able to safely enable dev teams to self-serve their namespaces whilst being confident that they can only use the resources allocated based on budget and business needs.\n\n## Sandboxed Dev Namespaces\n\nMulti Tenant Operator can be configured to automatically provision a namespace for every member of the specific tenant, that will also be pre-loaded with any selected templates and consume the same pool of resources from the tenant's quota creating safe sandboxed dev namespaces that teams can use as a scratch namespace for rapid prototyping and development.",
      "csv_display_name": "Multi Tenant Operator",
      "csv_metadata_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Stakater Multi-Tenancy Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.",
      "csv_name": "tenant-operator.v0.7.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-16T10:23:30.149000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        }
      ],
      "provider": "Stakater",
      "related_images": [
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "manager"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "tenant-operator-4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.7.5",
      "version_original": "0.7.5"
    },
    {
      "_id": "6374ba228b147d8e70147411",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "bundle_path_digest": "sha256:a7137fc3c15527c3988979f430a7fc6fd92ddbf2fde0e48b135fb5326c69401b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T10:23:30.900000+00:00",
      "csv_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Multi Tenant Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.\n\n## Access Control\n\nMulti Tenant Operator provides several ClusterRoles that are automatically bound to the Tenants Namespaces used for managing access to the Namespaces and the resources they contain. You can also modify the default roles or create new roles to have full control and customize access control for your users and teams.\n\n## Self-Service\n\nWith Multi Tenant Operator, you can empower your users to safely provision namespaces for themselves and their teams (typically mapped to SSO groups). Team-owned namespaces and the resources inside of them count towards the team's quotas rather than the user's individual limits and are automatically shared with all team members according to the access rules you configure in tenant-operator.\n\n## HashiCorp Vault Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to HashiCorp Vault where it can create vault paths and greatly ease the overhead of managing RBAC in Vault.\n\n## ArgoCD Multitenancy\n\nMulti Tenant Operator is not only providing strong Multi-Tenancy for the OpenShift internals but also extends the tenant's permission model to ArgoCD where it can provision AppProjects and Allowed Repositories for your tenants greatly easing the overhead of managing RBAC in ArgoCD.\n\n## Cost/Resource Optimization\n\nMulti Tenant Operator provides a mechanism for defining Resource Quotas at the tenant scope, meaning all namespaces belonging to a particular tenant share the defined quota, which is why you are able to safely enable dev teams to self-serve their namespaces whilst being confident that they can only use the resources allocated based on budget and business needs.\n\n## Sandboxed Dev Namespaces\n\nMulti Tenant Operator can be configured to automatically provision a namespace for every member of the specific tenant, that will also be pre-loaded with any selected templates and consume the same pool of resources from the tenant's quota creating safe sandboxed dev namespaces that teams can use as a scratch namespace for rapid prototyping and development.",
      "csv_display_name": "Multi Tenant Operator",
      "csv_metadata_description": "OpenShift is designed to support a single tenant platform, hence making it difficult for cluster admins to host multi-tenancy in a single OpenShift cluster. If multi-tenancy is achieved by sharing a cluster, it can have many advantages, e.g. efficient resource utilization, less configuration effort and easier sharing of cluster-internal resources among different tenants. Stakater Multi-Tenancy Operator helps to solve the complexity issues of doing true multi-tenancy by providing simplified abstractions on top of the native primitives to provide organizations and platform providers the tooling, self-service capabilities and robust automation needed to do secure and efficient Multi-Tenancy in a single OpenShift cluster.",
      "csv_name": "tenant-operator.v0.7.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T10:23:30.900000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        }
      ],
      "provider": "Stakater",
      "related_images": [
        {
          "digest": "sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f7993b7a5458679621f6686bdc4ab818659e051ef6cdf6a8e107f627adf5f178",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "manager"
        },
        {
          "digest": "sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d",
          "name": "tenant-operator-4ec7ee0365c6ee8bd3edf70336542e547b361857bd7175a218f709ae4dbc449d-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.7.5",
      "version_original": "0.7.5"
    },
    {
      "_id": "63753473039b5f41a63bfc59",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.7.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:6b410f2d77fb7aec1cddc90bcab8f5c373ff63970d7a2bfa309de9a69f7acd6d",
      "bundle_path_digest": "sha256:6b410f2d77fb7aec1cddc90bcab8f5c373ff63970d7a2bfa309de9a69f7acd6d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T19:05:23.929000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.18.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T19:05:23.929000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "name": "t8c-operator-1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a-annotation"
        },
        {
          "digest": "sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "42.18.0",
      "version_original": "42.18.0"
    },
    {
      "_id": "6375347539c5577889420c08",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.7.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:6b410f2d77fb7aec1cddc90bcab8f5c373ff63970d7a2bfa309de9a69f7acd6d",
      "bundle_path_digest": "sha256:6b410f2d77fb7aec1cddc90bcab8f5c373ff63970d7a2bfa309de9a69f7acd6d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T19:05:25.397000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.18.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T19:05:25.397000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "name": "t8c-operator-1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a-annotation"
        },
        {
          "digest": "sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "42.18.0",
      "version_original": "42.18.0"
    },
    {
      "_id": "63753496799f60c3015761c3",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.7.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:6b410f2d77fb7aec1cddc90bcab8f5c373ff63970d7a2bfa309de9a69f7acd6d",
      "bundle_path_digest": "sha256:6b410f2d77fb7aec1cddc90bcab8f5c373ff63970d7a2bfa309de9a69f7acd6d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T19:05:58.096000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.18.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T19:05:58.096000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "name": "t8c-operator-1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a-annotation"
        },
        {
          "digest": "sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "42.18.0",
      "version_original": "42.18.0"
    },
    {
      "_id": "637534ec799f60c301576269",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.7.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:6b410f2d77fb7aec1cddc90bcab8f5c373ff63970d7a2bfa309de9a69f7acd6d",
      "bundle_path_digest": "sha256:6b410f2d77fb7aec1cddc90bcab8f5c373ff63970d7a2bfa309de9a69f7acd6d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T19:07:23.997000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.18.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T19:07:23.997000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "name": "t8c-operator-1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a-annotation"
        },
        {
          "digest": "sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "42.18.0",
      "version_original": "42.18.0"
    },
    {
      "_id": "63753764d54d96b9ae5cc914",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.7.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:6b410f2d77fb7aec1cddc90bcab8f5c373ff63970d7a2bfa309de9a69f7acd6d",
      "bundle_path_digest": "sha256:6b410f2d77fb7aec1cddc90bcab8f5c373ff63970d7a2bfa309de9a69f7acd6d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-16T19:17:56.537000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.18.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-16T19:17:56.537000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "name": "t8c-operator-1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a-annotation"
        },
        {
          "digest": "sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:1c8d2364f6ae71db12012728669142c38e49c5ab3e648e364bba43159ddfec4a",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "42.18.0",
      "version_original": "42.18.0"
    },
    {
      "_id": "6375ac97039b5f41a63cbd67",
      "alm_examples": [
        {
          "api_version": "priebus.steamngin.com/v1",
          "kind": "Stealserver",
          "metadata": {
            "name": "stealserver-sample"
          },
          "spec": {
            "stealAppIngressPath": "/",
            "stealAppIngressPathType": "Prefix",
            "stealAppName": "stealserver",
            "stealDomainName": "steal.steamngin.com",
            "stepImage": "registry.connect.redhat.com/steamngin/stealserver@sha256:90e7778c577e2164fed830d4198f3f22958af410b70a150876f9a74fbb90cc21"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/steamngin/stealserver-operator-bundle@sha256:4e88b8b1da7cfa229337ae36e143a2f0d9e784b285ece67d97ea3cf35ab1efa4",
      "bundle_path_digest": "sha256:4e88b8b1da7cfa229337ae36e143a2f0d9e784b285ece67d97ea3cf35ab1efa4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-17T03:37:59.543000+00:00",
      "csv_description": "Operator to deploy Steam Ngin License (STEAL) Server",
      "csv_display_name": "STEAL Server",
      "csv_metadata_description": "",
      "csv_name": "stealserver-operator.v1.0.0-alpha",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T03:37:59.543000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "stealserver-operator",
      "provided_apis": [
        {
          "group": "priebus.steamngin.com",
          "kind": "Stealserver",
          "version": "v1"
        }
      ],
      "provider": "Steam Ngin",
      "related_images": [
        {
          "digest": "sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:aa43c98d4e704868c2ea844f7adfdb3ba058deba439c7436de7312114a631d6d",
          "image": "registry.connect.redhat.com/steamngin/stealserver-operator-test@sha256:aa43c98d4e704868c2ea844f7adfdb3ba058deba439c7436de7312114a631d6d",
          "name": "manager"
        },
        {
          "digest": "sha256:90e7778c577e2164fed830d4198f3f22958af410b70a150876f9a74fbb90cc21",
          "image": "registry.connect.redhat.com/steamngin/stealserver@sha256:90e7778c577e2164fed830d4198f3f22958af410b70a150876f9a74fbb90cc21",
          "name": "stealserver-90e7778c577e2164fed830d4198f3f22958af410b70a150876f9a74fbb90cc21-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.0.0-alpha",
      "version_original": "1.0.0-alpha"
    },
    {
      "_id": "6375ac9b9dc40044c5f46984",
      "alm_examples": [
        {
          "api_version": "priebus.steamngin.com/v1",
          "kind": "Stealserver",
          "metadata": {
            "name": "stealserver-sample"
          },
          "spec": {
            "stealAppIngressPath": "/",
            "stealAppIngressPathType": "Prefix",
            "stealAppName": "stealserver",
            "stealDomainName": "steal.steamngin.com",
            "stepImage": "registry.connect.redhat.com/steamngin/stealserver@sha256:90e7778c577e2164fed830d4198f3f22958af410b70a150876f9a74fbb90cc21"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/steamngin/stealserver-operator-bundle@sha256:4e88b8b1da7cfa229337ae36e143a2f0d9e784b285ece67d97ea3cf35ab1efa4",
      "bundle_path_digest": "sha256:4e88b8b1da7cfa229337ae36e143a2f0d9e784b285ece67d97ea3cf35ab1efa4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-17T03:38:03.673000+00:00",
      "csv_description": "Operator to deploy Steam Ngin License (STEAL) Server",
      "csv_display_name": "STEAL Server",
      "csv_metadata_description": "",
      "csv_name": "stealserver-operator.v1.0.0-alpha",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T03:38:03.673000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "stealserver-operator",
      "provided_apis": [
        {
          "group": "priebus.steamngin.com",
          "kind": "Stealserver",
          "plural": "stealservers",
          "version": "v1"
        }
      ],
      "provider": "Steam Ngin",
      "related_images": [
        {
          "digest": "sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:aa43c98d4e704868c2ea844f7adfdb3ba058deba439c7436de7312114a631d6d",
          "image": "registry.connect.redhat.com/steamngin/stealserver-operator-test@sha256:aa43c98d4e704868c2ea844f7adfdb3ba058deba439c7436de7312114a631d6d",
          "name": "manager"
        },
        {
          "digest": "sha256:90e7778c577e2164fed830d4198f3f22958af410b70a150876f9a74fbb90cc21",
          "image": "registry.connect.redhat.com/steamngin/stealserver@sha256:90e7778c577e2164fed830d4198f3f22958af410b70a150876f9a74fbb90cc21",
          "name": "stealserver-90e7778c577e2164fed830d4198f3f22958af410b70a150876f9a74fbb90cc21-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.0-alpha",
      "version_original": "1.0.0-alpha"
    },
    {
      "_id": "63766029820ea79a5e4dab5c",
      "alm_examples": [
        {
          "api_version": "anzo.cambridgesemantics.com/v1",
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:d4efa2bd80c4084ed7ec9c65e03e2064bbabdc0c0f4eb5a5a788f37d0e831c30",
      "bundle_path_digest": "sha256:d4efa2bd80c4084ed7ec9c65e03e2064bbabdc0c0f4eb5a5a788f37d0e831c30",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T16:24:09.974000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.2/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator.v2.0.203",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T16:24:09.974000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "version": "v1"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "name": "anzo"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "anzo-operator"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "anzo-operator-53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4-annotation"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "manager"
        },
        {
          "digest": "sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "name": "anzo-a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "2.0.203",
      "version_original": "2.0.203"
    },
    {
      "_id": "637660769ab920c27f037962",
      "alm_examples": [
        {
          "api_version": "anzo.cambridgesemantics.com/v1",
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:d4efa2bd80c4084ed7ec9c65e03e2064bbabdc0c0f4eb5a5a788f37d0e831c30",
      "bundle_path_digest": "sha256:d4efa2bd80c4084ed7ec9c65e03e2064bbabdc0c0f4eb5a5a788f37d0e831c30",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T16:25:26.810000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.2/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator.v2.0.203",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T16:25:26.810000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "version": "v1"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "name": "anzo"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "anzo-operator"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "anzo-operator-53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4-annotation"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "manager"
        },
        {
          "digest": "sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "name": "anzo-a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.0.203",
      "version_original": "2.0.203"
    },
    {
      "_id": "63766087d861bd7aa7a6651b",
      "alm_examples": [
        {
          "api_version": "anzo.cambridgesemantics.com/v1",
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:d4efa2bd80c4084ed7ec9c65e03e2064bbabdc0c0f4eb5a5a788f37d0e831c30",
      "bundle_path_digest": "sha256:d4efa2bd80c4084ed7ec9c65e03e2064bbabdc0c0f4eb5a5a788f37d0e831c30",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T16:25:43.137000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.2/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator.v2.0.203",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T16:25:43.137000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "plural": "anzos",
          "version": "v1"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "name": "anzo"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "anzo-operator"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "anzo-operator-53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4-annotation"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "manager"
        },
        {
          "digest": "sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "name": "anzo-a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.203",
      "version_original": "2.0.203"
    },
    {
      "_id": "637660a7d54d96b9ae5eb1ba",
      "alm_examples": [
        {
          "api_version": "anzo.cambridgesemantics.com/v1",
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:d4efa2bd80c4084ed7ec9c65e03e2064bbabdc0c0f4eb5a5a788f37d0e831c30",
      "bundle_path_digest": "sha256:d4efa2bd80c4084ed7ec9c65e03e2064bbabdc0c0f4eb5a5a788f37d0e831c30",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T16:26:15.034000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.2/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator.v2.0.203",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T16:26:15.034000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "plural": "anzos",
          "version": "v1"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "name": "anzo"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "anzo-operator"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "anzo-operator-53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4-annotation"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "manager"
        },
        {
          "digest": "sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "name": "anzo-a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.203",
      "version_original": "2.0.203"
    },
    {
      "_id": "637661349dc40044c5f5966b",
      "alm_examples": [
        {
          "api_version": "anzo.cambridgesemantics.com/v1",
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:d4efa2bd80c4084ed7ec9c65e03e2064bbabdc0c0f4eb5a5a788f37d0e831c30",
      "bundle_path_digest": "sha256:d4efa2bd80c4084ed7ec9c65e03e2064bbabdc0c0f4eb5a5a788f37d0e831c30",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T16:28:36.322000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.2/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator.v2.0.203",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T16:28:36.322000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "plural": "anzos",
          "version": "v1"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "name": "anzo"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "anzo-operator"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "anzo-operator-53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4-annotation"
        },
        {
          "digest": "sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:53c1e0a6ec6ae9fc3b43cc3b494b20d1d77e94b433a216492f492cff7b71a9b4",
          "name": "manager"
        },
        {
          "digest": "sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e",
          "name": "anzo-a7e76e1c7e9e62cf9dae89b55f3255fb707259a9a326ac087f83e689a05ae60e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.203",
      "version_original": "2.0.203"
    },
    {
      "_id": "63766f6d5e3261eca76c5527",
      "alm_examples": [
        {
          "api_version": "anzounstructured.clusters.cambridgesemantics.com/v1",
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:6dfc5fd834fb54073f0a6cd0d64a57e89a35621424c0e7cd7e6fd1927d420f49",
      "bundle_path_digest": "sha256:6dfc5fd834fb54073f0a6cd0d64a57e89a35621424c0e7cd7e6fd1927d420f49",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T17:29:17.865000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.2/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.203",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T17:29:17.865000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "version": "v1"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo-microservices-leader"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo-unstructured-worker"
        },
        {
          "digest": "sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "name": "unstructured-operator-f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee-annotation"
        },
        {
          "digest": "sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "name": "manager"
        },
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo-unstructured-leader-f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac-annotation"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo-unstructured-worker-24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "2.0.203",
      "version_original": "2.0.203"
    },
    {
      "_id": "63766fef39c55778894417dc",
      "alm_examples": [
        {
          "api_version": "anzounstructured.clusters.cambridgesemantics.com/v1",
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:6dfc5fd834fb54073f0a6cd0d64a57e89a35621424c0e7cd7e6fd1927d420f49",
      "bundle_path_digest": "sha256:6dfc5fd834fb54073f0a6cd0d64a57e89a35621424c0e7cd7e6fd1927d420f49",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T17:31:27.269000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.2/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.203",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T17:31:27.269000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "version": "v1"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo-microservices-leader"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo-unstructured-worker"
        },
        {
          "digest": "sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "name": "unstructured-operator-f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee-annotation"
        },
        {
          "digest": "sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "name": "manager"
        },
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo-unstructured-leader-f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac-annotation"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo-unstructured-worker-24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.0.203",
      "version_original": "2.0.203"
    },
    {
      "_id": "637670095e3261eca76c563f",
      "alm_examples": [
        {
          "api_version": "anzounstructured.clusters.cambridgesemantics.com/v1",
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:6dfc5fd834fb54073f0a6cd0d64a57e89a35621424c0e7cd7e6fd1927d420f49",
      "bundle_path_digest": "sha256:6dfc5fd834fb54073f0a6cd0d64a57e89a35621424c0e7cd7e6fd1927d420f49",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T17:31:53.511000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.2/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.203",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T17:31:53.511000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "plural": "anzounstructureds",
          "version": "v1"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo-microservices-leader"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo-unstructured-worker"
        },
        {
          "digest": "sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "name": "unstructured-operator-f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee-annotation"
        },
        {
          "digest": "sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "name": "manager"
        },
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo-unstructured-leader-f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac-annotation"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo-unstructured-worker-24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.203",
      "version_original": "2.0.203"
    },
    {
      "_id": "6376704f820ea79a5e4dcbbe",
      "alm_examples": [
        {
          "api_version": "anzounstructured.clusters.cambridgesemantics.com/v1",
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:6dfc5fd834fb54073f0a6cd0d64a57e89a35621424c0e7cd7e6fd1927d420f49",
      "bundle_path_digest": "sha256:6dfc5fd834fb54073f0a6cd0d64a57e89a35621424c0e7cd7e6fd1927d420f49",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T17:33:03.201000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.2/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.203",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T17:33:03.201000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "plural": "anzounstructureds",
          "version": "v1"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo-microservices-leader"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo-unstructured-worker"
        },
        {
          "digest": "sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "name": "unstructured-operator-f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee-annotation"
        },
        {
          "digest": "sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "name": "manager"
        },
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo-unstructured-leader-f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac-annotation"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo-unstructured-worker-24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.203",
      "version_original": "2.0.203"
    },
    {
      "_id": "6376710f039b5f41a63e0970",
      "alm_examples": [
        {
          "api_version": "anzounstructured.clusters.cambridgesemantics.com/v1",
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:6dfc5fd834fb54073f0a6cd0d64a57e89a35621424c0e7cd7e6fd1927d420f49",
      "bundle_path_digest": "sha256:6dfc5fd834fb54073f0a6cd0d64a57e89a35621424c0e7cd7e6fd1927d420f49",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T17:36:15.157000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.2/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.203",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T17:36:15.157000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "plural": "anzounstructureds",
          "version": "v1"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo-microservices-leader"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo-unstructured-worker"
        },
        {
          "digest": "sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "name": "unstructured-operator-f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee-annotation"
        },
        {
          "digest": "sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:f0206453f3b4c98e5ccd87c3939902b577c2b27141f6d873a264996388cccbee",
          "name": "manager"
        },
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-leader@sha256:f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac",
          "name": "anzo-unstructured-leader-f79a78a97ff53ac23db79ed7444bdf486ea5869b11dc2f31463892138558f6ac-annotation"
        },
        {
          "digest": "sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327",
          "name": "anzo-unstructured-worker-24bdcfd076049380be14aba2cea0d06dd5c7a68e4581ccf448a6f117c9319327-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.203",
      "version_original": "2.0.203"
    },
    {
      "_id": "6376922dd861bd7aa7a6bf0b",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:c36c85656588ce1c5872a29e43a956e4abdf6dacedeec9c28bada5503afc579d",
      "bundle_path_digest": "sha256:c36c85656588ce1c5872a29e43a956e4abdf6dacedeec9c28bada5503afc579d",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-11-17T19:57:33.029000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-17T19:57:33.029000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:08a3128dd4d6ac81a9f0a3c1fccd9491c6b840dd0a80c8bf55bf7dae867e7577",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:08a3128dd4d6ac81a9f0a3c1fccd9491c6b840dd0a80c8bf55bf7dae867e7577",
          "name": "cloud-native-postgresql-08a3128dd4d6ac81a9f0a3c1fccd9491c6b840dd0a80c8bf55bf7dae867e7577-annotation"
        },
        {
          "digest": "sha256:08a3128dd4d6ac81a9f0a3c1fccd9491c6b840dd0a80c8bf55bf7dae867e7577",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:08a3128dd4d6ac81a9f0a3c1fccd9491c6b840dd0a80c8bf55bf7dae867e7577",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.16.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.16.4",
      "version_original": "1.16.4"
    },
    {
      "_id": "6376940dd54d96b9ae5f0cd3",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:99595cf7cdd3446b9d43c4cbcc602528c6ef58402151d4ca7e222383e283ae34",
      "bundle_path_digest": "sha256:99595cf7cdd3446b9d43c4cbcc602528c6ef58402151d4ca7e222383e283ae34",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T20:05:33.202000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Prerequisites\n\n  Install cert-manager:\n\n  ```shell\n  kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml\n  ```\n\n## GitLab Runner version\n\nThis version of **GitLab Runner Operator** ships with **GitLab Runner v15.2.1**.\n\nTo use a different version of **GitLab Runner** change the [`runnerImage` and `helperImage` properties](https://docs.gitlab.com/runner/configuration/configuring_runner_operator.html#operator-properties).\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. Create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner Operator](https://docs.gitlab.com/runner/install/operator.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T20:05:33.202000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "Runner",
          "plural": "runners",
          "version": "v1beta2"
        }
      ],
      "provider": "GitLab, Inc.",
      "related_images": [
        {
          "digest": "sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-ocp@sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-helper-ocp@sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "name": "gl-openshift/gitlab-runner-operator/gitlab-runner-operator-337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80-annotation"
        },
        {
          "digest": "sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.1",
      "version_original": "1.10.1"
    },
    {
      "_id": "63769503bd954e28072007f3",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:c36c85656588ce1c5872a29e43a956e4abdf6dacedeec9c28bada5503afc579d",
      "bundle_path_digest": "sha256:c36c85656588ce1c5872a29e43a956e4abdf6dacedeec9c28bada5503afc579d",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-11-17T20:09:39.588000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-11-17T20:09:39.588000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:08a3128dd4d6ac81a9f0a3c1fccd9491c6b840dd0a80c8bf55bf7dae867e7577",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:08a3128dd4d6ac81a9f0a3c1fccd9491c6b840dd0a80c8bf55bf7dae867e7577",
          "name": "cloud-native-postgresql-08a3128dd4d6ac81a9f0a3c1fccd9491c6b840dd0a80c8bf55bf7dae867e7577-annotation"
        },
        {
          "digest": "sha256:08a3128dd4d6ac81a9f0a3c1fccd9491c6b840dd0a80c8bf55bf7dae867e7577",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:08a3128dd4d6ac81a9f0a3c1fccd9491c6b840dd0a80c8bf55bf7dae867e7577",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.16.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.16.4",
      "version_original": "1.16.4"
    },
    {
      "_id": "63769504bd954e28072007f5",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:99595cf7cdd3446b9d43c4cbcc602528c6ef58402151d4ca7e222383e283ae34",
      "bundle_path_digest": "sha256:99595cf7cdd3446b9d43c4cbcc602528c6ef58402151d4ca7e222383e283ae34",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T20:09:40.079000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Prerequisites\n\n  Install cert-manager:\n\n  ```shell\n  kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml\n  ```\n\n## GitLab Runner version\n\nThis version of **GitLab Runner Operator** ships with **GitLab Runner v15.2.1**.\n\nTo use a different version of **GitLab Runner** change the [`runnerImage` and `helperImage` properties](https://docs.gitlab.com/runner/configuration/configuring_runner_operator.html#operator-properties).\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. Create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner Operator](https://docs.gitlab.com/runner/install/operator.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T20:09:40.079000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "Runner",
          "plural": "runners",
          "version": "v1beta2"
        }
      ],
      "provider": "GitLab, Inc.",
      "related_images": [
        {
          "digest": "sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-ocp@sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-helper-ocp@sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "name": "gl-openshift/gitlab-runner-operator/gitlab-runner-operator-337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80-annotation"
        },
        {
          "digest": "sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.1",
      "version_original": "1.10.1"
    },
    {
      "_id": "637696085e3261eca76c9639",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:99595cf7cdd3446b9d43c4cbcc602528c6ef58402151d4ca7e222383e283ae34",
      "bundle_path_digest": "sha256:99595cf7cdd3446b9d43c4cbcc602528c6ef58402151d4ca7e222383e283ae34",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T20:14:00.511000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Prerequisites\n\n  Install cert-manager:\n\n  ```shell\n  kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml\n  ```\n\n## GitLab Runner version\n\nThis version of **GitLab Runner Operator** ships with **GitLab Runner v15.2.1**.\n\nTo use a different version of **GitLab Runner** change the [`runnerImage` and `helperImage` properties](https://docs.gitlab.com/runner/configuration/configuring_runner_operator.html#operator-properties).\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. Create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner Operator](https://docs.gitlab.com/runner/install/operator.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T20:14:00.511000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "Runner",
          "plural": "runners",
          "version": "v1beta2"
        }
      ],
      "provider": "GitLab, Inc.",
      "related_images": [
        {
          "digest": "sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-ocp@sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-helper-ocp@sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "name": "gl-openshift/gitlab-runner-operator/gitlab-runner-operator-337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80-annotation"
        },
        {
          "digest": "sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:337beb61817b051d1814b67a13223f72c34430f385dd8f91dcdf0f4867a30b80",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.10.1",
      "version_original": "1.10.1"
    },
    {
      "_id": "6376a023799f60c30159be32",
      "alm_examples": [
        {
          "api_version": "anzograph.clusters.cambridgesemantics.com/v2",
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:80fabf02d68f36c0bc465ffa72c259d272830e9924fd24576472060ae8d67ce7",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:9bed178919e0f8275c4b6bb426a3c5026ad3fefdc885a4fbe5d4f24439a2269e",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:113621bab4db52f1a8379a8e704eed0b8b0efb65a42748a1adbf38ebcf1b0712",
      "bundle_path_digest": "sha256:113621bab4db52f1a8379a8e704eed0b8b0efb65a42748a1adbf38ebcf1b0712",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-17T20:57:07.312000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.2/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.203",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-17T20:57:07.312000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [
        {
          "group": "anzograph.clusters.cambridgesemantics.com",
          "kind": "AnzoGraph",
          "version": "v2"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:1c0356e592e45386abf468443dbcede51789fa5ac06dc95278acd9ef6e671731",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:1c0356e592e45386abf468443dbcede51789fa5ac06dc95278acd9ef6e671731",
          "name": "anzograph-allinone"
        },
        {
          "digest": "sha256:80fabf02d68f36c0bc465ffa72c259d272830e9924fd24576472060ae8d67ce7",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:80fabf02d68f36c0bc465ffa72c259d272830e9924fd24576472060ae8d67ce7",
          "name": "anzograph-db"
        },
        {
          "digest": "sha256:9bed178919e0f8275c4b6bb426a3c5026ad3fefdc885a4fbe5d4f24439a2269e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:9bed178919e0f8275c4b6bb426a3c5026ad3fefdc885a4fbe5d4f24439a2269e",
          "name": "anzograph-frontend"
        },
        {
          "digest": "sha256:02b6b63e96f4b37ac13e5a608d3cb1e36efff4e007ed7fcaa71091e2bd8f5c86",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:02b6b63e96f4b37ac13e5a608d3cb1e36efff4e007ed7fcaa71091e2bd8f5c86",
          "name": "anzograph-operator-02b6b63e96f4b37ac13e5a608d3cb1e36efff4e007ed7fcaa71091e2bd8f5c86-annotation"
        },
        {
          "digest": "sha256:02b6b63e96f4b37ac13e5a608d3cb1e36efff4e007ed7fcaa71091e2bd8f5c86",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:02b6b63e96f4b37ac13e5a608d3cb1e36efff4e007ed7fcaa71091e2bd8f5c86",
          "name": "manager"
        },
        {
          "digest": "sha256:1c0356e592e45386abf468443dbcede51789fa5ac06dc95278acd9ef6e671731",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:1c0356e592e45386abf468443dbcede51789fa5ac06dc95278acd9ef6e671731",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:80fabf02d68f36c0bc465ffa72c259d272830e9924fd24576472060ae8d67ce7",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:80fabf02d68f36c0bc465ffa72c259d272830e9924fd24576472060ae8d67ce7",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:9bed178919e0f8275c4b6bb426a3c5026ad3fefdc885a4fbe5d4f24439a2269e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:9bed178919e0f8275c4b6bb426a3c5026ad3fefdc885a4fbe5d4f24439a2269e",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:9bed178919e0f8275c4b6bb426a3c5026ad3fefdc885a4fbe5d4f24439a2269e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:9bed178919e0f8275c4b6bb426a3c5026ad3fefdc885a4fbe5d4f24439a2269e",
          "name": "anzograph-frontend-9bed178919e0f8275c4b6bb426a3c5026ad3fefdc885a4fbe5d4f24439a2269e-annotation"
        },
        {
          "digest": "sha256:80fabf02d68f36c0bc465ffa72c259d272830e9924fd24576472060ae8d67ce7",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:80fabf02d68f36c0bc465ffa72c259d272830e9924fd24576472060ae8d67ce7",
          "name": "anzograph-db-80fabf02d68f36c0bc465ffa72c259d272830e9924fd24576472060ae8d67ce7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.0.203",
      "version_original": "2.0.203"
    }
  ]
}
